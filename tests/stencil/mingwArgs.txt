clang version 3.3 
Target: i686-pc-mingw32
Thread model: posix
 "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug/mollycc.exe" -cc1 -triple i686-pc-mingw32 -S -disable-free -main-file-name stencil.cpp -mrelocation-model static -mdisable-fp-elim -fmath-errno -mconstructor-aliases -target-cpu pentium4 -momit-leaf-frame-pointer -v -resource-dir "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\\..\\lib\\clang\\3.3" -O3 -std=c++11 -fdeprecated-macro -fno-dwarf-directory-asm -ferror-limit 19 -fmessage-length 0 -mstackrealign -fno-use-cxa-atexit -fobjc-runtime=gcc -fobjc-default-synthesize-properties -fdiagnostics-show-option -backend-option -vectorize-loops -mllvm -debug-pass=Details -mllvm -debug -mllvm -polly-report -mllvm -molly -mllvm -shape=4 -o C:/Users/MEINER~1/AppData/Local/Temp/stencil-401969.s -x c++ "C:\\Users\\Meinersbur\\src\\molly\\molly\\tests\\stencil/stencil.cpp"
Args: clang (LLVM option parsing) -debug-pass=Details -debug -polly-report -molly -shape=4 
clang -cc1 version 3.3 based upon LLVM 3.3svn default target i686-pc-win32
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.0"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.0/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.0/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.0/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.1"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.1/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.1/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.1/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.2"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.2/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.2/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.2/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.3"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.3/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.3/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.3/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.4"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.4/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.4/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.5.4/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.0"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.0/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.0/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.0/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.1"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.1/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.1/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.1/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.2"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.2/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.2/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.2/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.3"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.3/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.3/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.6.3/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.7.0"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.7.0/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.7.0/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.7.0/backward"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.7.2"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.7.2/x86_64-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.7.2/i686-w64-mingw32"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug\..\lib\clang\3.3/../../../include/c++/4.7.2/backward"
ignoring nonexistent directory "/mingw/lib/gcc/mingw32/4.5.2/include/c++"
ignoring nonexistent directory "/mingw/lib/gcc/mingw32/4.5.2/include/c++/mingw32"
ignoring nonexistent directory "/mingw/lib/gcc/mingw32/4.5.2/include/c++/backward"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.7.0/include/c++"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.7.0/include/c++/mingw32"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.7.0/include/c++/backward"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.6.2/include/c++"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.6.2/include/c++/mingw32"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.6.2/include/c++/backward"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.6.1/include/c++"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.6.1/include/c++/mingw32"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.6.1/include/c++/backward"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.5.2/include/c++"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.5.2/include/c++/mingw32"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.5.2/include/c++/backward"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.5.0/include/c++"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.5.0/include/c++/mingw32"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.5.0/include/c++/backward"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.4.0/include/c++"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.4.0/include/c++/mingw32"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.4.0/include/c++/backward"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.3.0/include/c++"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.3.0/include/c++/mingw32"
ignoring nonexistent directory "c:/MinGW/lib/gcc/mingw32/4.3.0/include/c++/backward"
ignoring nonexistent directory "/usr/local/include"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug/../lib/clang/3.3/../../../i686-w64-mingw32/include"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug/../lib/clang/3.3/../../../x86_64-w64-mingw32/include"
ignoring nonexistent directory "C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug/../lib/clang/3.3/../../../include"
ignoring nonexistent directory "/usr/include"
#include "..." search starts here:
#include <...> search starts here:
 C:/Users/Meinersbur/src/molly/molly/include/mollyrt
 c:/MinGW/lib/gcc/mingw32/4.7.2/include/c++
 c:/MinGW/lib/gcc/mingw32/4.7.2/include/c++/mingw32
 c:/MinGW/lib/gcc/mingw32/4.7.2/include/c++/backward
 C:/Users/Meinersbur/src/molly/build32_vc11/bin/Debug/../lib/clang/3.3/include
 /mingw/include
 c:/mingw/include
End of search list.
Args: clang -vectorize-loops 

Features:-sse4a,-avx2,-xop,-fma4,-bmi2,-3dnow,-3dnowa,-pclmul,+sse,-avx,-sse41,-ssse3,+mmx,-rtm,-sse42,-lzcnt,-f16c,-popcnt,-bmi,-aes,-fma,-rdrand,+sse2,-sse3
CPU:pentium4

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 0
 -- 'Simplify the CFG' is not preserving 'Preliminary module verification'
 -- 'Simplify the CFG' is not preserving 'Module Verifier'
 -- 'Simplify the CFG' is not preserving 'Dominator Tree Construction'
 -- 'SROA' is not preserving 'Simplify the CFG'
 -- 'Early CSE' is not preserving 'SROA'
 -- 'Lower 'expect' Intrinsics' is not preserving 'Early CSE'
 -- 'Lower 'expect' Intrinsics' is not preserving 'Dominator Tree Construction'
 -- 'Polly - Create independent blocks' is not preserving 'Function Pass Manager'
 -- 'Molly - SCoP split' is not preserving 'Post-Dominator Tree Construction'
 -- 'Molly - SCoP split' is not preserving 'Region Pass Manager'
 -- 'Molly - SCoP split' is not preserving 'Polly - Analyse the LLVM-IR in the detected regions'
 -- 'Molly - SCoP split' is not preserving 'Dominance Frontier Construction'
 -- 'Molly - SCoP split' is not preserving 'Polly - Create independent blocks'
 -- 'FieldCodeGen' is not preserving 'Molly - Field detection'
 -- 'FieldCodeGen' is not preserving 'Molly - Field Distribution'
 -- 'FieldCodeGen' is not preserving 'Molly - Context'
 -- 'FieldCodeGen' is not preserving 'Function Pass Manager'
 -- 'Interprocedural Sparse Conditional Constant Propagation' is not preserving 'Global Variable Optimizer'
 -- 'Dead Argument Elimination' is not preserving 'Interprocedural Sparse Conditional Constant Propagation'
 -- 'Combine redundant instructions' is not preserving 'Function Pass Manager'
 -- 'Combine redundant instructions' is not preserving 'Dead Argument Elimination'
 -- 'Simplify the CFG' is not preserving 'Combine redundant instructions'
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -- 'Function Integration/Inlining' is not preserving 'Remove unused exception handling info'
 -- 'Deduce function attributes' is not preserving 'Function Integration/Inlining'
 -- 'Promote 'by reference' arguments to scalars' is not preserving 'Deduce function attributes'
 -- 'SROA' is not preserving 'Function Pass Manager'
 -- 'SROA' is not preserving 'Promote 'by reference' arguments to scalars'
 -- 'SROA' is not preserving 'CallGraph Pass Manager'
 -- 'SROA' is not preserving 'Basic CallGraph Construction'
 -- 'SROA' is not preserving 'Basic CallGraph Construction'
 -- 'Early CSE' is not preserving 'SROA'
 -- 'Simplify well-known library calls' is not preserving 'Early CSE'
 -- 'Simplify well-known library calls' is not preserving 'Dominator Tree Construction'
 -- 'Jump Threading' is not preserving 'Simplify well-known library calls'
 -- 'Value Propagation' is not preserving 'Jump Threading'
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -- 'Simplify the CFG' is not preserving 'Value Propagation'
 -- 'Combine redundant instructions' is not preserving 'Simplify the CFG'
 -- 'Tail Call Elimination' is not preserving 'Combine redundant instructions'
 -- 'Simplify the CFG' is not preserving 'Tail Call Elimination'
 -- 'Reassociate expressions' is not preserving 'Simplify the CFG'
 -- 'Canonicalize natural loops' is not preserving 'Reassociate expressions'
 -- 'Canonicalize natural loops' is not preserving 'Loop Pass Manager'
 -- 'Loop Invariant Code Motion' is not preserving 'Loop-Closed SSA Form Pass'
 -- 'Loop Invariant Code Motion' is not preserving 'Rotate Loops'
 -- 'Loop-Closed SSA Form Pass' is not preserving 'Loop Invariant Code Motion'
 -- 'Loop-Closed SSA Form Pass' is not preserving 'Combine redundant instructions'
 -- 'Loop-Closed SSA Form Pass' is not preserving 'Loop Pass Manager'
 -- 'Recognize loop idioms' is not preserving 'Induction Variable Simplification'
 -- 'Delete dead loops' is not preserving 'Recognize loop idioms'
 -- 'Loop Vectorization' is not preserving 'Scalar Evolution Analysis'
 -- 'Loop Vectorization' is not preserving 'Loop Pass Manager'
 -- 'Canonicalize natural loops' is not preserving 'Loop Vectorization'
 -- 'Unroll loops' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Scalar Evolution Analysis'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -- 'Global Value Numbering' is not preserving 'Natural Loop Information'
 -- 'MemCpy Optimization' is not preserving 'Global Value Numbering'
 -- 'Sparse Conditional Constant Propagation' is not preserving 'MemCpy Optimization'
 -- 'Sparse Conditional Constant Propagation' is not preserving 'Memory Dependence Analysis'
 -- 'Sparse Conditional Constant Propagation' is not preserving 'Dominator Tree Construction'
 -- 'Combine redundant instructions' is not preserving 'Sparse Conditional Constant Propagation'
 -- 'Jump Threading' is not preserving 'Combine redundant instructions'
 -- 'Value Propagation' is not preserving 'Jump Threading'
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -- 'Dead Store Elimination' is not preserving 'Value Propagation'
 -- 'Aggressive Dead Code Elimination' is not preserving 'Dead Store Elimination'
 -- 'Aggressive Dead Code Elimination' is not preserving 'Memory Dependence Analysis'
 -- 'Simplify the CFG' is not preserving 'Aggressive Dead Code Elimination'
 -- 'Simplify the CFG' is not preserving 'Dominator Tree Construction'
 -- 'Combine redundant instructions' is not preserving 'Simplify the CFG'
 -- 'Dead Global Elimination' is not preserving 'Strip Unused Function Prototypes'
 -- 'Merge Duplicate Global Constants' is not preserving 'Dead Global Elimination'
 -- 'Canonicalize natural loops' is not preserving 'Preliminary module verification'
 -- 'Canonicalize natural loops' is not preserving 'Module Verifier'
 -- 'Canonicalize natural loops' is not preserving 'Loop Pass Manager'
 -- 'Canonicalize natural loops' is not preserving 'Function Pass Manager'
 -- 'Loop Strength Reduction' is not preserving 'Loop Pass Manager'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Scalar Evolution Analysis'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Natural Loop Information'
 -- 'Remove unreachable blocks from the CFG' is not preserving 'Lower Garbage Collection Instructions'
 -- 'CodeGen Prepare' is not preserving 'Remove unreachable blocks from the CFG'
 -- 'Exception handling preparation' is not preserving 'CodeGen Prepare'
 -- 'Exception handling preparation' is not preserving 'Dominator Tree Construction'
 -- 'Insert stack protectors' is not preserving 'Exception handling preparation'
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Insert stack protectors'
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Preliminary module verification'
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Module Verifier'
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Branch Probability Analysis'
 -- 'X86 PIC Global Base Reg Initialization' is not preserving 'X86 DAG->DAG Instruction Selection'
 -- 'Expand ISel Pseudo-instructions' is not preserving 'X86 PIC Global Base Reg Initialization'
 -- 'Tail Duplication' is not preserving 'Expand ISel Pseudo-instructions'
 -- 'Optimize machine instruction PHIs' is not preserving 'Tail Duplication'
 -- 'Merge disjoint stack slots' is not preserving 'Optimize machine instruction PHIs'
 -- 'Merge disjoint stack slots' is not preserving 'Slot index numbering'
 -- 'Local Stack Slot Allocation' is not preserving 'Merge disjoint stack slots'
 -- 'Remove dead machine instructions' is not preserving 'MachineDominator Tree Construction'
 -- 'Remove dead machine instructions' is not preserving 'Local Stack Slot Allocation'
 -- 'Machine Loop Invariant Code Motion' is not preserving 'Remove dead machine instructions'
 -- 'Machine Common Subexpression Elimination' is not preserving 'Machine Loop Invariant Code Motion'
 -- 'Machine code sinking' is not preserving 'Machine Common Subexpression Elimination'
 -- 'Peephole Optimizations' is not preserving 'Machine code sinking'
 -- 'Process Implicit Definitions' is not preserving 'Peephole Optimizations'
 -- 'Remove unreachable machine basic blocks' is not preserving 'Process Implicit Definitions'
 -- 'Eliminate PHI nodes for register allocation' is not preserving 'Remove unreachable machine basic blocks'
 -- 'Two-Address instruction pass' is not preserving 'Eliminate PHI nodes for register allocation'
 -- 'Live Interval Analysis' is not preserving 'Two-Address instruction pass'
 -- 'Simple Register Coalescing' is not preserving 'Live Variable Analysis'
 -- 'Greedy Register Allocator' is not preserving 'Calculate spill weights'
 -- 'Greedy Register Allocator' is not preserving 'Simple Register Coalescing'
 -- 'Virtual Register Rewriter' is not preserving 'Greedy Register Allocator'
 -- 'Virtual Register Rewriter' is not preserving 'Virtual Register Map'
 -- 'Virtual Register Rewriter' is not preserving 'Live Interval Analysis'
 -- 'Virtual Register Rewriter' is not preserving 'Live Register Matrix'
 -- 'Virtual Register Rewriter' is not preserving 'Debug Variable Analysis'
 -- 'Stack Slot Coloring' is not preserving 'Virtual Register Rewriter'
 -- 'Stack Slot Coloring' is not preserving 'Live Stack Slot Analysis'
 -- 'Machine Loop Invariant Code Motion' is not preserving 'Stack Slot Coloring'
 -- 'Machine Loop Invariant Code Motion' is not preserving 'Bundle Machine CFG Edges'
 -- 'Machine Loop Invariant Code Motion' is not preserving 'Spill Code Placement Analysis'
 -- 'Machine Loop Invariant Code Motion' is not preserving 'Slot index numbering'
 -- 'X86 FP Stackifier' is not preserving 'Machine Loop Invariant Code Motion'
 -- 'Prologue/Epilogue Insertion & Frame Finalization' is not preserving 'X86 FP Stackifier'
 -- 'Control Flow Optimizer' is not preserving 'MachineDominator Tree Construction'
 -- 'Control Flow Optimizer' is not preserving 'Machine Natural Loop Construction'
 -- 'Control Flow Optimizer' is not preserving 'Prologue/Epilogue Insertion & Frame Finalization'
 -- 'Control Flow Optimizer' is not preserving 'Bundle Machine CFG Edges'
 -- 'Tail Duplication' is not preserving 'Control Flow Optimizer'
 -- 'Machine Copy Propagation Pass' is not preserving 'Tail Duplication'
 -- 'Post-RA pseudo instruction expansion pass' is not preserving 'Machine Copy Propagation Pass'
 -- 'Post RA top-down list latency scheduler' is not preserving 'Post-RA pseudo instruction expansion pass'
 -- 'Branch Probability Basic Block Placement' is not preserving 'MachineDominator Tree Construction'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Natural Loop Construction'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Analyze Machine Code For Garbage Collection'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Post RA top-down list latency scheduler'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Block Frequency Analysis'
Pass Arguments:  -datalayout -notti -basictti -x86tti -targetlibinfo -no-aa -tbaa -basicaa -preverify -domtree -verify -simplifycfg -domtree -sroa -early-cse -lower-expect
Data Layout
No target information
Target independent code generator's TTI
X86 Target Transform Info
Target Library Information
No Alias Analysis (always returns 'may' alias)
Type-Based Alias Analysis
Basic Alias Analysis (stateless AA impl)
  FunctionPass Manager
    Preliminary module verification
    Dominator Tree Construction
    Module Verifier
    Simplify the CFG
    Dominator Tree Construction
    SROA
    Early CSE
    Lower 'expect' Intrinsics
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '__cxx_global_var_init'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '__cxx_global_var_init'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '__cxx_global_var_init'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '__cxx_global_var_init'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x5f3465c   Executing Pass 'SROA' on Function '__cxx_global_var_init'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: __cxx_global_var_init
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '__cxx_global_var_init'...
0x5f3465c   Executing Pass 'Early CSE' on Function '__cxx_global_var_init'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '__cxx_global_var_init'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '__cxx_global_var_init'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '__cxx_global_var_init'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_ZN5molly9MollyInitC1Ev'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c   Executing Pass 'SROA' on Function '_ZN5molly9MollyInitC1Ev'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _ZN5molly9MollyInitC1Ev
SROA alloca:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  partition #0 [0,4)
    [0,4) used by:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
    [0,4) used by:   %this1 = load %"class.molly::MollyInit"** %this.addr
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  rewriting partition #0 [0,4)
    original:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
          to:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4
    original:   %this1 = load %"class.molly::MollyInit"** %this.addr
          to:   %this.addr.0.load = load %"class.molly::MollyInit"** %this.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %this1 = load %"class.molly::MollyInit"** %this.addr
Deleting dead instruction:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function '_ZN5molly9MollyInitC1Ev'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_ZN5molly9MollyInitC1Ev'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly9MollyInitC1Ev'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly9MollyInitC1Ev'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_ZN5molly9MollyInitD1Ev'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c   Executing Pass 'SROA' on Function '_ZN5molly9MollyInitD1Ev'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _ZN5molly9MollyInitD1Ev
SROA alloca:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  partition #0 [0,4)
    [0,4) used by:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
    [0,4) used by:   %this1 = load %"class.molly::MollyInit"** %this.addr
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  rewriting partition #0 [0,4)
    original:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
          to:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4
    original:   %this1 = load %"class.molly::MollyInit"** %this.addr
          to:   %this.addr.0.load = load %"class.molly::MollyInit"** %this.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %this1 = load %"class.molly::MollyInit"** %this.addr
Deleting dead instruction:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function '_ZN5molly9MollyInitD1Ev'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_ZN5molly9MollyInitD1Ev'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly9MollyInitD1Ev'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly9MollyInitD1Ev'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c   Executing Pass 'SROA' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: __dtor__ZN5mollyL12molly_globalE
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c   Executing Pass 'Early CSE' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '__dtor__ZN5mollyL12molly_globalE'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function 'main'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function 'main'...
0x5f3465c   Executing Pass 'Module Verifier' on Function 'main'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function 'main'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function 'main'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function 'main'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function 'main'...
0x7ddc720     Required Analyses: No target information
0x5f3465c   Made Modification 'Simplify the CFG' on Function 'main'...
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function 'main'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function 'main'...
0x5f3465c   Executing Pass 'SROA' on Function 'main'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: main
SROA alloca:   %i = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %i = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 0, i32* %i, align 4, !tbaa !0
    [0,4) used by:   %0 = load i32* %i, align 4, !tbaa !0
    [0,4) used by:   %2 = load i32* %i, align 4, !tbaa !0
    [0,4) used by:   %3 = load i32* %i, align 4, !tbaa !0
    [0,4) used by:   %4 = load i32* %i, align 4, !tbaa !0
    [0,4) used by:   %5 = load i32* %i, align 4, !tbaa !0
    [0,4) used by:   %6 = load i32* %i, align 4, !tbaa !0
    [0,4) used by:   store i32 %add5, i32* %i, align 4, !tbaa !0
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %i = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 0, i32* %i, align 4, !tbaa !0
          to:   store i32 0, i32* %i, align 4
    original:   %0 = load i32* %i, align 4, !tbaa !0
          to:   %i.0.load = load i32* %i, align 4
    original:   %2 = load i32* %i, align 4, !tbaa !0
          to:   %i.0.load6 = load i32* %i, align 4
    original:   %3 = load i32* %i, align 4, !tbaa !0
          to:   %i.0.load7 = load i32* %i, align 4
    original:   %4 = load i32* %i, align 4, !tbaa !0
          to:   %i.0.load8 = load i32* %i, align 4
    original:   %5 = load i32* %i, align 4, !tbaa !0
          to:   %i.0.load9 = load i32* %i, align 4
    original:   %6 = load i32* %i, align 4, !tbaa !0
          to:   %i.0.load10 = load i32* %i, align 4
    original:   store i32 %add5, i32* %i, align 4, !tbaa !0
          to:   store i32 %add5, i32* %i, align 4
  and queuing for promotion
Deleting dead instruction:   store i32 %add5, i32* %i, align 4, !tbaa !0
Deleting dead instruction:   %6 = load i32* %i, align 4, !tbaa !0
Deleting dead instruction:   %5 = load i32* %i, align 4, !tbaa !0
Deleting dead instruction:   %4 = load i32* %i, align 4, !tbaa !0
Deleting dead instruction:   %3 = load i32* %i, align 4, !tbaa !0
Deleting dead instruction:   %2 = load i32* %i, align 4, !tbaa !0
Deleting dead instruction:   %0 = load i32* %i, align 4, !tbaa !0
Deleting dead instruction:   store i32 0, i32* %i, align 4, !tbaa !0
SROA alloca:   %len = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %len = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 %call1, i32* %len, align 4, !tbaa !0
    [0,4) used by:   %0 = load i32* %len, align 4, !tbaa !0
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %len = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 %call1, i32* %len, align 4, !tbaa !0
          to:   store i32 %call1, i32* %len, align 4
    original:   %0 = load i32* %len, align 4, !tbaa !0
          to:   %len.0.load = load i32* %len, align 4
  and queuing for promotion
Deleting dead instruction:   %0 = load i32* %len, align 4, !tbaa !0
Deleting dead instruction:   store i32 %call1, i32* %len, align 4, !tbaa !0
SROA alloca:   %argv.addr = alloca i8**, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %argv.addr = alloca i8**, align 4
  partition #0 [0,4)
    [0,4) used by:   store i8** %argv, i8*** %argv.addr, align 4, !tbaa !3
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %argv.addr = alloca i8**, align 4
  rewriting partition #0 [0,4)
    original:   store i8** %argv, i8*** %argv.addr, align 4, !tbaa !3
          to:   store i8** %argv, i8*** %argv.addr, align 4
  and queuing for promotion
Deleting dead instruction:   store i8** %argv, i8*** %argv.addr, align 4, !tbaa !3
SROA alloca:   %argc.addr = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %argc.addr = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 %argc, i32* %argc.addr, align 4, !tbaa !0
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %argc.addr = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 %argc, i32* %argc.addr, align 4, !tbaa !0
          to:   store i32 %argc, i32* %argc.addr, align 4
  and queuing for promotion
Deleting dead instruction:   store i32 %argc, i32* %argc.addr, align 4, !tbaa !0
SROA alloca:   %retval = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %retval = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 0, i32* %retval
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %retval = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 0, i32* %retval
          to:   store i32 0, i32* %retval, align 4
  and queuing for promotion
Deleting dead instruction:   store i32 0, i32* %retval
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function 'main'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function 'main'...
0x5f3465c   Executing Pass 'Early CSE' on Function 'main'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
EarlyCSE CSE:   %add5 = add nsw i32 %i.0, 1  to:   %add = add nsw i32 %i.0, 1
0x5f3465c   Made Modification 'Early CSE' on Function 'main'...
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function 'main'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function 'main'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function 'main'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function 'main'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c   Executing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
SROA alloca:   %this.addr = alloca %"class.molly::array"*, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %this.addr = alloca %"class.molly::array"*, align 4
  partition #0 [0,4)
    [0,4) used by:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
    [0,4) used by:   %this1 = load %"class.molly::array"** %this.addr
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %this.addr = alloca %"class.molly::array"*, align 4
  rewriting partition #0 [0,4)
    original:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
          to:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4
    original:   %this1 = load %"class.molly::array"** %this.addr
          to:   %this.addr.0.load = load %"class.molly::array"** %this.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %this1 = load %"class.molly::array"** %this.addr
Deleting dead instruction:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7ddc720     Required Analyses: No target information
FOLDING BRANCH TO COMMON DEST:
  br i1 %cmp, label %land.lhs.true, label %cond.false
land.lhs.true:                                    ; preds = %entry
  %1 = load i32* %d.addr, align 4, !tbaa !3
  %cmp2 = icmp ult i32 %1, 1
  br i1 %cmp2, label %cond.true, label %cond.false
Removing BB: 

land.lhs.true:                                    ; No predecessors!
  %.old = load i32* %d.addr, align 4, !tbaa !3
  %cmp2.old = icmp ult i32 %.old, 1
  br i1 %cmp2.old, label %cond.true, label %cond.false
Looking to fold cond.true into cond.end
Killing Trivial BB: 

cond.true:                                        ; preds = %entry
  br label %cond.end
0x5f3465c   Made Modification 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c   Executing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _ZN5molly5arrayIiJLi128EEE6lengthEi
SROA alloca:   %d.addr = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %d.addr = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 %d, i32* %d.addr, align 4, !tbaa !3
    [0,4) used by:   %0 = load i32* %d.addr, align 4, !tbaa !3
    [0,4) used by:   %1 = load i32* %d.addr, align 4, !tbaa !3
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %d.addr = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 %d, i32* %d.addr, align 4, !tbaa !3
          to:   store i32 %d, i32* %d.addr, align 4
    original:   %0 = load i32* %d.addr, align 4, !tbaa !3
          to:   %d.addr.0.load = load i32* %d.addr, align 4
    original:   %1 = load i32* %d.addr, align 4, !tbaa !3
          to:   %d.addr.0.load3 = load i32* %d.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %1 = load i32* %d.addr, align 4, !tbaa !3
Deleting dead instruction:   %0 = load i32* %d.addr, align 4, !tbaa !3
Deleting dead instruction:   store i32 %d, i32* %d.addr, align 4, !tbaa !3
SROA alloca:   %this.addr = alloca %"class.molly::array"*, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %this.addr = alloca %"class.molly::array"*, align 4
  partition #0 [0,4)
    [0,4) used by:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
    [0,4) used by:   %this1 = load %"class.molly::array"** %this.addr
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %this.addr = alloca %"class.molly::array"*, align 4
  rewriting partition #0 [0,4)
    original:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
          to:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4
    original:   %this1 = load %"class.molly::array"** %this.addr
          to:   %this.addr.0.load = load %"class.molly::array"** %this.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %this1 = load %"class.molly::array"** %this.addr
Deleting dead instruction:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
SROA alloca:   %i.addr = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %i.addr = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 %i, i32* %i.addr, align 4, !tbaa !3
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %i.addr = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 %i, i32* %i.addr, align 4, !tbaa !3
          to:   store i32 %i, i32* %i.addr, align 4
  and queuing for promotion
Deleting dead instruction:   store i32 %i, i32* %i.addr, align 4, !tbaa !3
SROA alloca:   %this.addr = alloca %"class.molly::array"*, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %this.addr = alloca %"class.molly::array"*, align 4
  partition #0 [0,4)
    [0,4) used by:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
    [0,4) used by:   %this1 = load %"class.molly::array"** %this.addr
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %this.addr = alloca %"class.molly::array"*, align 4
  rewriting partition #0 [0,4)
    original:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
          to:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4
    original:   %this1 = load %"class.molly::array"** %this.addr
          to:   %this.addr.0.load = load %"class.molly::array"** %this.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %this1 = load %"class.molly::array"** %this.addr
Deleting dead instruction:   store %"class.molly::array"* %this, %"class.molly::array"** %this.addr, align 4, !tbaa !0
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
SROA alloca:   %i.addr = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %i.addr = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 %i, i32* %i.addr, align 4, !tbaa !3
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %i.addr = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 %i, i32* %i.addr, align 4, !tbaa !3
          to:   store i32 %i, i32* %i.addr, align 4
  and queuing for promotion
Deleting dead instruction:   store i32 %i, i32* %i.addr, align 4, !tbaa !3
SROA alloca:   %this.addr = alloca %"class.molly::array.0"*, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %this.addr = alloca %"class.molly::array.0"*, align 4
  partition #0 [0,4)
    [0,4) used by:   store %"class.molly::array.0"* %this, %"class.molly::array.0"** %this.addr, align 4, !tbaa !0
    [0,4) used by:   %this1 = load %"class.molly::array.0"** %this.addr
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %this.addr = alloca %"class.molly::array.0"*, align 4
  rewriting partition #0 [0,4)
    original:   store %"class.molly::array.0"* %this, %"class.molly::array.0"** %this.addr, align 4, !tbaa !0
          to:   store %"class.molly::array.0"* %this, %"class.molly::array.0"** %this.addr, align 4
    original:   %this1 = load %"class.molly::array.0"** %this.addr
          to:   %this.addr.0.load = load %"class.molly::array.0"** %this.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %this1 = load %"class.molly::array.0"** %this.addr
Deleting dead instruction:   store %"class.molly::array.0"* %this, %"class.molly::array.0"** %this.addr, align 4, !tbaa !0
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_Z7crash32v'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_Z7crash32v'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_Z7crash32v'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_Z7crash32v'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x5f3465c   Executing Pass 'SROA' on Function '_Z7crash32v'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _Z7crash32v
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_Z7crash32v'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_Z7crash32v'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_Z7crash32v'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_Z7crash32v'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_Z7crash32v'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_Z7crash64v'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_Z7crash64v'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_Z7crash64v'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_Z7crash64v'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x5f3465c   Executing Pass 'SROA' on Function '_Z7crash64v'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _Z7crash64v
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_Z7crash64v'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_Z7crash64v'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_Z7crash64v'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_Z7crash64v'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_Z7crash64v'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_ZN5molly9MollyInitD2Ev'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c   Executing Pass 'SROA' on Function '_ZN5molly9MollyInitD2Ev'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _ZN5molly9MollyInitD2Ev
SROA alloca:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  partition #0 [0,4)
    [0,4) used by:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
    [0,4) used by:   %this1 = load %"class.molly::MollyInit"** %this.addr
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  rewriting partition #0 [0,4)
    original:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
          to:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4
    original:   %this1 = load %"class.molly::MollyInit"** %this.addr
          to:   %this.addr.0.load = load %"class.molly::MollyInit"** %this.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %this1 = load %"class.molly::MollyInit"** %this.addr
Deleting dead instruction:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function '_ZN5molly9MollyInitD2Ev'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_ZN5molly9MollyInitD2Ev'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly9MollyInitD2Ev'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly9MollyInitD2Ev'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_ZN5molly9MollyInitC2Ev'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c   Executing Pass 'SROA' on Function '_ZN5molly9MollyInitC2Ev'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _ZN5molly9MollyInitC2Ev
SROA alloca:   %y = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %y = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 %1, i32* %y, align 4, !tbaa !3
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %y = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 %1, i32* %y, align 4, !tbaa !3
          to:   store i32 %1, i32* %y, align 4
  and queuing for promotion
Deleting dead instruction:   store i32 %1, i32* %y, align 4, !tbaa !3
SROA alloca:   %x = alloca i32, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %x = alloca i32, align 4
  partition #0 [0,4) (splittable)
    [0,4) used by:   store i32 %0, i32* %x, align 4, !tbaa !3
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4) (splittable)
Rewriting alloca partition [0,4) to:   %x = alloca i32, align 4
  rewriting partition #0 [0,4) (splittable)
    original:   store i32 %0, i32* %x, align 4, !tbaa !3
          to:   store i32 %0, i32* %x, align 4
  and queuing for promotion
Deleting dead instruction:   store i32 %0, i32* %x, align 4, !tbaa !3
SROA alloca:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  Rewriting FCA loads and stores...
Partitioning of alloca:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  partition #0 [0,4)
    [0,4) used by:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
    [0,4) used by:   %this1 = load %"class.molly::MollyInit"** %this.addr
Speculating PHIs and selects in partition [0,4)
  speculating partition #0 [0,4)
Rewriting alloca partition [0,4) to:   %this.addr = alloca %"class.molly::MollyInit"*, align 4
  rewriting partition #0 [0,4)
    original:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
          to:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4
    original:   %this1 = load %"class.molly::MollyInit"** %this.addr
          to:   %this.addr.0.load = load %"class.molly::MollyInit"** %this.addr, align 4
  and queuing for promotion
Deleting dead instruction:   %this1 = load %"class.molly::MollyInit"** %this.addr
Deleting dead instruction:   store %"class.molly::MollyInit"* %this, %"class.molly::MollyInit"** %this.addr, align 4, !tbaa !0
Promoting allocas with mem2reg...
0x5f3465c   Made Modification 'SROA' on Function '_ZN5molly9MollyInitC2Ev'...
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_ZN5molly9MollyInitC2Ev'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
EarlyCSE DCE:   %0 = load i32* getelementptr inbounds ([1 x i32]* @_cart_lengths, i32 0, i32 0), align 4, !tbaa !0
EarlyCSE DCE:   %0 = load i32* getelementptr inbounds ([1 x i32]* @_cart_local_coord, i32 0, i32 0), align 4, !tbaa !0
0x5f3465c   Made Modification 'Early CSE' on Function '_ZN5molly9MollyInitC2Ev'...
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly9MollyInitC2Ev'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_ZN5molly9MollyInitC2Ev'...
0x5f3465c   Executing Pass 'Preliminary module verification' on Function '_GLOBAL__I_a'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x5f3465c   Executing Pass 'Module Verifier' on Function '_GLOBAL__I_a'...
0x7dce280     Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Module Verifier' on Function '_GLOBAL__I_a'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x5f3465c    Freeing Pass 'Preliminary module verification' on Function '_GLOBAL__I_a'...
0x5f3465c   Executing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7ddc720     Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x5f3465c   Executing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x5f3465c   Executing Pass 'SROA' on Function '_GLOBAL__I_a'...
0x7ddcc88     Required Analyses: Dominator Tree Construction
SROA function: _GLOBAL__I_a
0x7ddcc88     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'SROA' on Function '_GLOBAL__I_a'...
0x5f3465c   Executing Pass 'Early CSE' on Function '_GLOBAL__I_a'...
0x7ddd690     Required Analyses: Dominator Tree Construction, Target Library Information
0x7ddd690     Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Early CSE' on Function '_GLOBAL__I_a'...
0x5f3465c    Freeing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x5f3465c   Executing Pass 'Lower 'expect' Intrinsics' on Function '_GLOBAL__I_a'...
 -*- 'Lower 'expect' Intrinsics' is the last user of following pass instances. Free these instances
0x5f3465c    Freeing Pass 'Lower 'expect' Intrinsics' on Function '_GLOBAL__I_a'...
Pass Arguments:  -datalayout -notti -basictti -x86tti -targetlibinfo -no-aa -tbaa -basicaa -domtree -loops -postdomtree -domfrontier -regions -scalar-evolution -polly-detect -polly-independent -polly-analyze-ir -polly-scops -molly-scopsplit -polly-dependences -molly-patterns -molly-context -molly-detect -moly-distr -molly-fieldcodegen -globalopt -ipsccp -deadargelim -instcombine -simplifycfg -basiccg -prune-eh -inline-cost -inline -functionattrs -argpromotion -sroa -domtree -early-cse -simplify-libcalls -lazy-value-info -jump-threading -correlated-propagation -simplifycfg -instcombine -tailcallelim -simplifycfg -reassociate -domtree -loops -loop-simplify -lcssa -loop-rotate -licm -lcssa -loop-unswitch -instcombine -scalar-evolution -lcssa -indvars -loop-idiom -loop-deletion -loop-vectorize -loop-simplify -lcssa -scalar-evolution -loop-unroll -memdep -gvn -memdep -memcpyopt -sccp -instcombine -lazy-value-info -jump-threading -correlated-propagation -domtree -memdep -dse -adce -simplifycfg -instcombine -strip-dead-prototypes -globaldce -constmerge
Data Layout
No target information
Target independent code generator's TTI
X86 Target Transform Info
Target Library Information
No Alias Analysis (always returns 'may' alias)
Type-Based Alias Analysis
Basic Alias Analysis (stateless AA impl)
  ModulePass Manager
    FunctionPass Manager
      Dominator Tree Construction
      Natural Loop Information
      Post-Dominator Tree Construction
      Dominance Frontier Construction
      Detect single entry single exit regions
      Scalar Evolution Analysis
      Polly - Detect static control parts (SCoPs)
      Polly - Create independent blocks
      Polly - Analyse the LLVM-IR in the detected regions
      Region Pass Manager
        Polly - Create polyhedral description of Scops
      Region Pass Manager
        Molly - SCoP split
        Polly - Calculate dependences
      Molly - Search for access patterns
    Molly - Context
    Molly - Field detection
    Molly - Field Distribution
    FunctionPass Manager
      FieldCodeGen
    Global Variable Optimizer
    Interprocedural Sparse Conditional Constant Propagation
    Dead Argument Elimination
    FunctionPass Manager
      Combine redundant instructions
      Simplify the CFG
    Basic CallGraph Construction
    Call Graph SCC Pass Manager
      Remove unused exception handling info
      Inline Cost Analysis
      Function Integration/Inlining
      Deduce function attributes
      Promote 'by reference' arguments to scalars
      FunctionPass Manager
        SROA
        Dominator Tree Construction
        Early CSE
        Simplify well-known library calls
        Lazy Value Information Analysis
        Jump Threading
        Value Propagation
        Simplify the CFG
        Combine redundant instructions
        Tail Call Elimination
        Simplify the CFG
        Reassociate expressions
        Dominator Tree Construction
        Natural Loop Information
        Loop Pass Manager
          Canonicalize natural loops
          Loop-Closed SSA Form Pass
          Rotate Loops
          Loop Invariant Code Motion
          Loop-Closed SSA Form Pass
          Unswitch loops
        Combine redundant instructions
        Scalar Evolution Analysis
        Loop Pass Manager
          Loop-Closed SSA Form Pass
          Induction Variable Simplification
          Recognize loop idioms
          Delete dead loops
        Loop Pass Manager
          Loop Vectorization
          Canonicalize natural loops
          Loop-Closed SSA Form Pass
        Scalar Evolution Analysis
        Loop Pass Manager
          Unroll loops
        Memory Dependence Analysis
        Global Value Numbering
        Memory Dependence Analysis
        MemCpy Optimization
        Sparse Conditional Constant Propagation
        Combine redundant instructions
        Lazy Value Information Analysis
        Jump Threading
        Value Propagation
        Dominator Tree Construction
        Memory Dependence Analysis
        Dead Store Elimination
        Aggressive Dead Code Elimination
        Simplify the CFG
        Combine redundant instructions
    Strip Unused Function Prototypes
    Dead Global Elimination
    Merge Duplicate Global Constants
0x7dde0f4   Executing Pass 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '__cxx_global_var_init'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '__cxx_global_var_init'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '__cxx_global_var_init'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '__cxx_global_var_init'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '__cxx_global_var_init'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '__cxx_global_var_init'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '__cxx_global_var_init'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on __cxx_global_var_init
Before Scalar to Array------->

define internal void @__cxx_global_var_init() #0 {
entry:
  call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
  %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
  ret void
}

After Independent Blocks------------->

define internal void @__cxx_global_var_init() #0 {
entry:
  call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
  %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
  ret void
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '__cxx_global_var_init'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '__cxx_global_var_init'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '__cxx_global_var_init'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function __cxx_global_var_init after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '__cxx_global_var_init'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '__cxx_global_var_init'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function __cxx_global_var_init after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '__cxx_global_var_init'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '__cxx_global_var_init'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '__cxx_global_var_init'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _ZN5molly9MollyInitC1Ev
Before Scalar to Array------->

define linkonce_odr void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* %this) unnamed_addr #1 align 2 {
entry:
  call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this)
  ret void
}

After Independent Blocks------------->

define linkonce_odr void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* %this) unnamed_addr #1 align 2 {
entry:
  call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this)
  ret void
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _ZN5molly9MollyInitC1Ev after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _ZN5molly9MollyInitC1Ev after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _ZN5molly9MollyInitD1Ev
Before Scalar to Array------->

define linkonce_odr void @_ZN5molly9MollyInitD1Ev(%"class.molly::MollyInit"* %this) unnamed_addr #1 align 2 {
entry:
  call void @_ZN5molly9MollyInitD2Ev(%"class.molly::MollyInit"* %this) #0
  ret void
}

After Independent Blocks------------->

define linkonce_odr void @_ZN5molly9MollyInitD1Ev(%"class.molly::MollyInit"* %this) unnamed_addr #1 align 2 {
entry:
  call void @_ZN5molly9MollyInitD2Ev(%"class.molly::MollyInit"* %this) #0
  ret void
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _ZN5molly9MollyInitD1Ev after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _ZN5molly9MollyInitD1Ev after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on __dtor__ZN5mollyL12molly_globalE
Before Scalar to Array------->

define internal void @__dtor__ZN5mollyL12molly_globalE() #0 {
entry:
  call void @_ZN5molly9MollyInitD1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
  ret void
}

After Independent Blocks------------->

define internal void @__dtor__ZN5mollyL12molly_globalE() #0 {
entry:
  call void @_ZN5molly9MollyInitD1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
  ret void
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function __dtor__ZN5mollyL12molly_globalE after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function __dtor__ZN5mollyL12molly_globalE after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function 'main'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function 'main'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function 'main'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function 'main'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function 'main'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function 'main'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function 'main'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function 'main'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
Checking region: for.cond => for.end
	
Expr: {0,+,1}<nuw><nsw><%for.cond>
Region: for.cond => for.end
 -> VALID


Expr: %call1
Region: for.cond => for.end
 -> VALID


Expr: (0 smax %call1)
Region: for.cond => for.end
 -> VALID

Call instruction:   %call2 = call i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* @MyField, i32 %i.0)
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function 'main'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on main
Before Scalar to Array------->

define i32 @main(i32 %argc, i8** %argv) #1 {
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)
  %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* @MyField, i32 0)
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]
  %cmp = icmp slt i32 %i.0, %call1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, 1
  %call2 = call i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* @MyField, i32 %i.0)
  store i32 %add, i32* %call2, !tbaa !0
  %add3 = add nsw i32 %i.0, 2
  %call4 = call i32* @_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array.0"* @MySecondField, i32 %i.0)
  store i32 %add3, i32* %call4, !tbaa !0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 0
}

After Independent Blocks------------->

define i32 @main(i32 %argc, i8** %argv) #1 {
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)
  %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* @MyField, i32 0)
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]
  %cmp = icmp slt i32 %i.0, %call1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, 1
  %call2 = call i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* @MyField, i32 %i.0)
  store i32 %add, i32* %call2, !tbaa !0
  %add3 = add nsw i32 %i.0, 2
  %call4 = call i32* @_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array.0"* @MySecondField, i32 %i.0)
  store i32 %add3, i32* %call4, !tbaa !0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 0
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function 'main'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function 'main'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function 'main'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'for.cond => for.end'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function main after all region Pass:
Region tree:
[0] entry => <Function Return>
  [1] for.cond => for.end
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function 'main'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function 'main'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function 'main'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function 'main'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function 'main'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function 'main'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'for.cond => for.end'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'for.cond => for.end'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'for.cond => for.end'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function main after all region Pass:
Region tree:
[0] entry => <Function Return>
  [1] for.cond => for.end
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function 'main'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function 'main'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function 'main'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function 'main'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function 'main'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function 'main'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function 'main'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function 'main'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
Before Scalar to Array------->

define linkonce_odr i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* %this) #1 align 2 {
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 0)
  ret i32 %call
}

After Independent Blocks------------->

define linkonce_odr i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* %this) #1 align 2 {
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 0)
  ret i32 %call
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _ZN5molly5arrayIiJLi128EEE6lengthEi
Before Scalar to Array------->

define linkonce_odr i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 %d) #1 align 2 {
entry:
  %cmp = icmp sle i32 0, %d
  %cmp2 = icmp ult i32 %d, 1
  %or.cond = and i1 %cmp, %cmp2
  br i1 %or.cond, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #3
  unreachable

cond.end:                                         ; preds = %entry
  ret i32 0
}

After Independent Blocks------------->

define linkonce_odr i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 %d) #1 align 2 {
entry:
  %cmp = icmp sle i32 0, %d
  %cmp2 = icmp ult i32 %d, 1
  %or.cond = and i1 %cmp, %cmp2
  br i1 %or.cond, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #3
  unreachable

cond.end:                                         ; preds = %entry
  ret i32 0
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _ZN5molly5arrayIiJLi128EEE6lengthEi after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _ZN5molly5arrayIiJLi128EEE6lengthEi after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
Before Scalar to Array------->

define linkonce_odr i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* %this, i32 %i) #1 align 2 {
entry:
  %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
  ret i32* %dummy
}

After Independent Blocks------------->

define linkonce_odr i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* %this, i32 %i) #1 align 2 {
entry:
  %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
  ret i32* %dummy
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
Before Scalar to Array------->

define linkonce_odr i32* @_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array.0"* %this, i32 %i) #1 align 2 {
entry:
  %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
  ret i32* %dummy
}

After Independent Blocks------------->

define linkonce_odr i32* @_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array.0"* %this, i32 %i) #1 align 2 {
entry:
  %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
  ret i32* %dummy
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_Z7crash32v'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_Z7crash32v'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_Z7crash32v'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_Z7crash32v'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_Z7crash32v'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_Z7crash32v'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_Z7crash32v'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_Z7crash32v'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _Z7crash32v
Before Scalar to Array------->

define i32 @_Z7crash32v() #1 {
entry:
  ret i32 undef
}

After Independent Blocks------------->

define i32 @_Z7crash32v() #1 {
entry:
  ret i32 undef
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_Z7crash32v'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_Z7crash32v'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_Z7crash32v'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _Z7crash32v after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_Z7crash32v'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_Z7crash32v'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _Z7crash32v after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_Z7crash32v'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_Z7crash32v'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_Z7crash32v'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_Z7crash64v'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_Z7crash64v'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_Z7crash64v'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_Z7crash64v'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_Z7crash64v'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_Z7crash64v'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_Z7crash64v'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_Z7crash64v'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _Z7crash64v
Before Scalar to Array------->

define i64 @_Z7crash64v() #1 {
entry:
  ret i64 undef
}

After Independent Blocks------------->

define i64 @_Z7crash64v() #1 {
entry:
  ret i64 undef
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_Z7crash64v'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_Z7crash64v'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_Z7crash64v'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _Z7crash64v after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_Z7crash64v'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_Z7crash64v'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _Z7crash64v after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_Z7crash64v'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_Z7crash64v'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_Z7crash64v'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _ZN5molly9MollyInitD2Ev
Before Scalar to Array------->

define linkonce_odr void @_ZN5molly9MollyInitD2Ev(%"class.molly::MollyInit"* %this) unnamed_addr #1 align 2 {
entry:
  ret void
}

After Independent Blocks------------->

define linkonce_odr void @_ZN5molly9MollyInitD2Ev(%"class.molly::MollyInit"* %this) unnamed_addr #1 align 2 {
entry:
  ret void
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _ZN5molly9MollyInitD2Ev after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _ZN5molly9MollyInitD2Ev after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _ZN5molly9MollyInitC2Ev
Before Scalar to Array------->

define linkonce_odr void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this) unnamed_addr #1 align 2 {
entry:
  ret void
}

After Independent Blocks------------->

define linkonce_odr void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this) unnamed_addr #1 align 2 {
entry:
  ret void
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _ZN5molly9MollyInitC2Ev after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _ZN5molly9MollyInitC2Ev after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de15cc     Executing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7de15cc     Executing Pass 'Natural Loop Information' on Function '_GLOBAL__I_a'...
0x7de0fa8       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Post-Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7de15cc     Executing Pass 'Dominance Frontier Construction' on Function '_GLOBAL__I_a'...
0x7de27d0       Required Analyses: Dominator Tree Construction
0x7de15cc     Executing Pass 'Detect single entry single exit regions' on Function '_GLOBAL__I_a'...
0x7de2170       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Dominance Frontier Construction
 -*- 'Detect single entry single exit regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Dominance Frontier Construction' on Function '_GLOBAL__I_a'...
0x7de15cc     Executing Pass 'Scalar Evolution Analysis' on Function '_GLOBAL__I_a'...
0x7de2c48       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7de15cc     Executing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_GLOBAL__I_a'...
0x7de3688       Required Analyses: Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, No Alias Analysis (always returns 'may' alias), Detect single entry single exit regions
Checking region: entry => <Function Return>
	Top level region is invalid
0x7de15cc     Executing Pass 'Polly - Create independent blocks' on Function '_GLOBAL__I_a'...
0x7de3bd8       Required Analyses: Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
Run IndepBlock on _GLOBAL__I_a
Before Scalar to Array------->

define internal void @_GLOBAL__I_a() #0 {
entry:
  call void @__cxx_global_var_init()
  ret void
}

After Independent Blocks------------->

define internal void @_GLOBAL__I_a() #0 {
entry:
  call void @__cxx_global_var_init()
  ret void
}

0x7de3bd8       Preserved Analyses: Dominator Tree Construction, Dominance Frontier Construction, Post-Dominator Tree Construction, Detect single entry single exit regions, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs)
 -- 'Polly - Create independent blocks' is not preserving 'Region Pass Manager'
0x7de15cc     Executing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_GLOBAL__I_a'...
0x7de3140       Required Analyses: Data Layout, Dominator Tree Construction, Post-Dominator Tree Construction, Natural Loop Information, Scalar Evolution Analysis, Polly - Detect static control parts (SCoPs), Polly - Create independent blocks, No Alias Analysis (always returns 'may' alias)
 -*- 'Polly - Analyse the LLVM-IR in the detected regions' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Create independent blocks' on Function '_GLOBAL__I_a'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_GLOBAL__I_a'...
0x7de3f58       Required Analyses: Detect single entry single exit regions
0x7de3f6c       Executing Pass 'Polly - Create polyhedral description of Scops' on Region 'entry => <Function Return>'...
0x7de0a78         Required Analyses: Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis, Polly - Analyse the LLVM-IR in the detected regions

Region tree of function _GLOBAL__I_a after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Polly - Analyse the LLVM-IR in the detected regions' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Post-Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Scalar Evolution Analysis' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Polly - Detect static control parts (SCoPs)' on Function '_GLOBAL__I_a'...
0x7de15cc     Executing Pass 'Region Pass Manager' on Function '_GLOBAL__I_a'...
0x7de4868       Required Analyses: Detect single entry single exit regions
0x7de487c       Executing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de4618         Required Analyses: Polly - Create polyhedral description of Scops, Natural Loop Information, Detect single entry single exit regions
0x7de4618         Preserved Analyses: Molly - Context, Molly - Field detection, Polly - Detect static control parts (SCoPs), Polly - Create polyhedral description of Scops, Dominator Tree Construction, Natural Loop Information, Detect single entry single exit regions, Scalar Evolution Analysis
 -*- 'Molly - SCoP split' is the last user of following pass instances. Free these instances
0x7de487c        Freeing Pass 'Molly - SCoP split' on Region 'entry => <Function Return>'...
0x7de487c       Executing Pass 'Polly - Calculate dependences' on Region 'entry => <Function Return>'...
0x7de4f28         Required Analyses: Polly - Create polyhedral description of Scops

Region tree of function _GLOBAL__I_a after all region Pass:
Region tree:
[0] entry => <Function Return>
End region tree

 -*- 'Region Pass Manager' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Region Pass Manager' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Natural Loop Information' on Function '_GLOBAL__I_a'...
0x7de15cc     Executing Pass 'Molly - Search for access patterns' on Function '_GLOBAL__I_a'...
0x7de5208       Required Analyses: Detect single entry single exit regions, Polly - Create polyhedral description of Scops, Polly - Calculate dependences
 -*- 'Molly - Search for access patterns' is the last user of following pass instances. Free these instances
0x7de15cc      Freeing Pass 'Detect single entry single exit regions' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Molly - Search for access patterns' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Polly - Create polyhedral description of Scops' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7de15cc      Freeing Pass 'Polly - Calculate dependences' on Function '_GLOBAL__I_a'...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4    Freeing Pass 'Data Layout' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Molly - Context' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Molly - Field detection' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7de5fa8     Required Analyses: Molly - Context
0x7dde0f4   Executing Pass 'Molly - Field Distribution' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7de5530     Required Analyses: Molly - Context, Molly - Field detection
0x7dde0f4   Executing Pass 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '__cxx_global_var_init'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -- 'FieldCodeGen' is not preserving 'Molly - Field detection'
 -- 'FieldCodeGen' is not preserving 'Molly - Field Distribution'
 -- 'FieldCodeGen' is not preserving 'Molly - Context'
 -- 'FieldCodeGen' is not preserving 'Function Pass Manager'
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '__cxx_global_var_init'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function 'main'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function 'main'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_Z7crash32v'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_Z7crash32v'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_Z7crash64v'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_Z7crash64v'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de6a24     Executing Pass 'FieldCodeGen' on Function '_GLOBAL__I_a'...
0x7de5db8       Required Analyses: Molly - Context, Molly - Field Distribution, Molly - Field detection
 -*- 'FieldCodeGen' is the last user of following pass instances. Free these instances
0x7de6a24      Freeing Pass 'FieldCodeGen' on Function '_GLOBAL__I_a'...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4    Freeing Pass 'Molly - Field detection' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4    Freeing Pass 'Molly - Context' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4    Freeing Pass 'Molly - Field Distribution' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Global Variable Optimizer' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7de7018     Required Analyses: Target Library Information
Optimizing Global Constructor: 
define internal void @_GLOBAL__I_a() #0 {
entry:
  call fastcc void @__cxx_global_var_init()
  ret void
}

Trying to evaluate BB: 
entry:
  call fastcc void @__cxx_global_var_init()
  ret void

Evaluating Instruction:   call fastcc void @__cxx_global_var_init()
Trying to evaluate BB: 
entry:
  call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
  %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
  ret void

Evaluating Instruction:   call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
Trying to evaluate BB: 
entry:
  call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this)
  ret void

Evaluating Instruction:   call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this)
Trying to evaluate BB: 
entry:
  ret void

Evaluating Instruction:   ret void
Found a terminator instruction.
Successfully evaluated block.
Successfully evaluated function. Result: 0

Evaluating Instruction:   ret void
Found a terminator instruction.
Successfully evaluated block.
Successfully evaluated function. Result: 0

Evaluating Instruction:   %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
Can not constant fold function call.
Failed to evaluate function.
Optimizing Global Constructor: 
define internal void @_GLOBAL__I_a() #0 {
entry:
  call fastcc void @__cxx_global_var_init()
  ret void
}

Trying to evaluate BB: 
entry:
  call fastcc void @__cxx_global_var_init()
  ret void

Evaluating Instruction:   call fastcc void @__cxx_global_var_init()
Trying to evaluate BB: 
entry:
  call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
  %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
  ret void

Evaluating Instruction:   call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
Trying to evaluate BB: 
entry:
  call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this)
  ret void

Evaluating Instruction:   call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this)
Trying to evaluate BB: 
entry:
  ret void

Evaluating Instruction:   ret void
Found a terminator instruction.
Successfully evaluated block.
Successfully evaluated function. Result: 0

Evaluating Instruction:   ret void
Found a terminator instruction.
Successfully evaluated block.
Successfully evaluated function. Result: 0

Evaluating Instruction:   %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
Can not constant fold function call.
Failed to evaluate function.
0x7dde0f4   Made Modification 'Global Variable Optimizer' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -- 'Global Variable Optimizer' is not preserving 'Function Pass Manager'
 -*- 'Global Variable Optimizer' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Global Variable Optimizer' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Interprocedural Sparse Conditional Constant Propagation' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7de75d0     Required Analyses: Target Library Information
Marking Block Executable: entry
markOverdefined: %"class.molly::MollyInit"* %this
Marking Block Executable: entry
markOverdefined: %"class.molly::MollyInit"* %this
Marking Block Executable: entry
Marking Block Executable: entry
markOverdefined: i32 %argc
markOverdefined: i8** %argv
Marking Block Executable: entry
markOverdefined: %"class.molly::array"* %this
Marking Block Executable: entry
markOverdefined: %"class.molly::array"* %this
markOverdefined: i32 %d
Marking Block Executable: entry
markOverdefined: %"class.molly::array"* %this
markOverdefined: i32 %i
Marking Block Executable: entry
markOverdefined: %"class.molly::array.0"* %this
markOverdefined: i32 %i
Marking Block Executable: entry
Marking Block Executable: entry
Marking Block Executable: entry
markOverdefined: %"class.molly::MollyInit"* %this
Marking Block Executable: entry
markOverdefined: %"class.molly::MollyInit"* %this
Marking Block Executable: entry

Popped off OI-WL: %"class.molly::MollyInit"* %this

Popped off OI-WL: %"class.molly::MollyInit"* %this

Popped off OI-WL: i32 %i

Popped off OI-WL: %"class.molly::array.0"* %this
markOverdefined:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0

Popped off OI-WL:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
markOverdefined: Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'

Popped off OI-WL: 
define linkonce_odr i32* @_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array.0"* %this, i32 %i) #1 align 2 {
entry:
  %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
  ret i32* %dummy
}


Popped off OI-WL: i32 %i

Popped off OI-WL: %"class.molly::array"* %this
markOverdefined:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0

Popped off OI-WL:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
markOverdefined: Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'

Popped off OI-WL: 
define linkonce_odr i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* %this, i32 %i) #1 align 2 {
entry:
  %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
  ret i32* %dummy
}


Popped off OI-WL: i32 %d
markOverdefined:   %cmp = icmp sle i32 0, %d
markOverdefined:   %cmp2 = icmp ult i32 %d, 1

Popped off OI-WL:   %cmp2 = icmp ult i32 %d, 1
markOverdefined:   %or.cond = and i1 %cmp, %cmp2

Popped off OI-WL:   %or.cond = and i1 %cmp, %cmp2
Marking Block Executable: cond.end
Marking Block Executable: cond.false

Popped off OI-WL:   %cmp = icmp sle i32 0, %d

Popped off OI-WL: %"class.molly::array"* %this

Popped off OI-WL: %"class.molly::array"* %this

Popped off OI-WL: i8** %argv

Popped off OI-WL: i32 %argc

Popped off OI-WL: %"class.molly::MollyInit"* %this

Popped off OI-WL: %"class.molly::MollyInit"* %this

Popped off BBWL: 
cond.false:                                       ; preds = %entry
  call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #3
  unreachable


Popped off BBWL: 
cond.end:                                         ; preds = %entry
  ret i32 0

markConstant: i32 0: 
define linkonce_odr i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 %d) #1 align 2 {
entry:
  %cmp = icmp sle i32 0, %d
  %cmp2 = icmp ult i32 %d, 1
  %or.cond = and i1 %cmp, %cmp2
  br i1 %or.cond, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #3
  unreachable

cond.end:                                         ; preds = %entry
  ret i32 0
}


Popped off BBWL: 
entry:
  call fastcc void @__cxx_global_var_init()
  ret void

Marking Block Executable: entry

Popped off BBWL: 
entry:
  call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
  %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
  ret void

markOverdefined:   %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0

Popped off BBWL: 
entry:
  ret void


Popped off BBWL: 
entry:
  ret void


Popped off BBWL: 
entry:
  ret i64 undef


Popped off BBWL: 
entry:
  ret i32 undef


Popped off BBWL: 
entry:
  %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
  ret i32* %dummy


Popped off BBWL: 
entry:
  %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
  ret i32* %dummy


Popped off BBWL: 
entry:
  %cmp = icmp sle i32 0, %d
  %cmp2 = icmp ult i32 %d, 1
  %or.cond = and i1 %cmp, %cmp2
  br i1 %or.cond, label %cond.end, label %cond.false


Popped off BBWL: 
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 0)
  ret i32 %call

markConstant: i32 0:   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 0)
markConstant: i32 0: 
define linkonce_odr i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* %this) #1 align 2 {
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 0)
  ret i32 %call
}


Popped off BBWL: 
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)
  %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* @MyField, i32 0)
  br label %for.cond

markConstant: i32 0:   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)
markConstant: i32 0:   %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* @MyField, i32 0)
Marking Block Executable: for.cond

Popped off BBWL: 
for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]
  %cmp = icmp slt i32 %i.0, %call1
  br i1 %cmp, label %for.body, label %for.end

markConstant: i32 0:   %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]
markConstant: i1 false:   %cmp = icmp slt i32 %i.0, %call1
Marking Block Executable: for.end

Popped off BBWL: 
for.end:                                          ; preds = %for.cond
  ret i32 0

markConstant: i32 0: 
define i32 @main(i32 %argc, i8** %argv) #1 {
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)
  %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* @MyField, i32 0)
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]
  %cmp = icmp slt i32 %i.0, %call1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, 1
  %call2 = call i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* @MyField, i32 %i.0)
  store i32 %add, i32* %call2, !tbaa !0
  %add3 = add nsw i32 %i.0, 2
  %call4 = call i32* @_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array.0"* @MySecondField, i32 %i.0)
  store i32 %add3, i32* %call4, !tbaa !0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 0
}


Popped off BBWL: 
entry:
  call void @_ZN5molly9MollyInitD1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
  ret void


Popped off BBWL: 
entry:
  call void @_ZN5molly9MollyInitD2Ev(%"class.molly::MollyInit"* %this) #0
  ret void


Popped off BBWL: 
entry:
  call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* %this)
  ret void


Popped off OI-WL:   %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0

Popped off I-WL: 
define i32 @main(i32 %argc, i8** %argv) #1 {
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)
  %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* @MyField, i32 0)
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]
  %cmp = icmp slt i32 %i.0, %call1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, 1
  %call2 = call i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* @MyField, i32 %i.0)
  store i32 %add, i32* %call2, !tbaa !0
  %add3 = add nsw i32 %i.0, 2
  %call4 = call i32* @_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array.0"* @MySecondField, i32 %i.0)
  store i32 %add3, i32* %call4, !tbaa !0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 0
}


Popped off I-WL:   %cmp = icmp slt i32 %i.0, %call1

Popped off I-WL:   %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]

Popped off I-WL:   %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* @MyField, i32 0)

Popped off I-WL:   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)

Popped off I-WL: 
define linkonce_odr i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* %this) #1 align 2 {
entry:
  %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 0)
  ret i32 %call
}


Popped off I-WL:   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 0)

Popped off I-WL: 
define linkonce_odr i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 %d) #1 align 2 {
entry:
  %cmp = icmp sle i32 0, %d
  %cmp2 = icmp ult i32 %d, 1
  %or.cond = and i1 %cmp, %cmp2
  br i1 %or.cond, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #3
  unreachable

cond.end:                                         ; preds = %entry
  ret i32 0
}

RESOLVING UNDEFS
  Constant: i32 0 =   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)  Constant: i32 0 =   %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* @MyField, i32 0)  Constant: i32 0 =   %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]  Constant: i1 false =   %cmp = icmp slt i32 0, 0  BasicBlock Dead:
for.body:                                         ; preds = %for.cond
  %add = add nsw i32 0, 1
  %call2 = call i32* @_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array"* @MyField, i32 0)
  store i32 %add, i32* %call2, !tbaa !0
  %add3 = add nsw i32 0, 2
  %call4 = call i32* @_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi(%"class.molly::array.0"* @MySecondField, i32 0)
  store i32 %add3, i32* %call4, !tbaa !0
  br label %for.cond
  Constant: i32 0 =   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* %this, i32 0)0x7dde0f4   Made Modification 'Interprocedural Sparse Conditional Constant Propagation' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -*- 'Interprocedural Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Interprocedural Sparse Conditional Constant Propagation' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Dead Argument Elimination' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
DAE - Deleting dead varargs
DAE - Determining liveness
DAE - Inspecting callers for fn: __cxx_global_var_init
DAE - Inspecting args for fn: __cxx_global_var_init
DAE - Intrinsically live fn: _ZN5molly9MollyInitC1Ev
DAE - Intrinsically live fn: _ZN5molly9MollyInitD1Ev
DAE - Inspecting callers for fn: __dtor__ZN5mollyL12molly_globalE
DAE - Intrinsically live fn: __dtor__ZN5mollyL12molly_globalE
DAE - Intrinsically live fn: atexit
DAE - Intrinsically live fn: main
DAE - Intrinsically live fn: _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
DAE - Intrinsically live fn: _ZN5molly5arrayIiJLi128EEE6lengthEi
DAE - Intrinsically live fn: _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
DAE - Intrinsically live fn: _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
DAE - Intrinsically live fn: _Z7crash32v
DAE - Intrinsically live fn: _Z7crash64v
DAE - Intrinsically live fn: _assert
DAE - Intrinsically live fn: _ZN5molly9MollyInitD2Ev
DAE - Intrinsically live fn: _ZN5molly9MollyInitC2Ev
DAE - Inspecting callers for fn: _GLOBAL__I_a
DAE - Intrinsically live fn: _GLOBAL__I_a
0x7dde0f4   Made Modification 'Dead Argument Elimination' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -*- 'Dead Argument Elimination' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Dead Argument Elimination' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __cxx_global_var_init
IC: ADDING: 3 instrs to worklist
IC: Visiting:   call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
IC: Visiting:   %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
IC: Visiting:   ret void
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC1Ev
IC: ADDING: 2 instrs to worklist
IC: Visiting:   call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* undef)
IC: Visiting:   ret void
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD1Ev
IC: ADDING: 2 instrs to worklist
IC: Visiting:   call void @_ZN5molly9MollyInitD2Ev(%"class.molly::MollyInit"* undef) #0
IC: Visiting:   ret void
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __dtor__ZN5mollyL12molly_globalE
IC: ADDING: 2 instrs to worklist
IC: Visiting:   call void @_ZN5molly9MollyInitD1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
IC: Visiting:   ret void
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function 'main'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on main
IC: ADDING: 5 instrs to worklist
IC: Visiting:   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)
IC: Visiting:   %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* undef, i32 0)
IC: Visiting:   br label %for.cond
IC: Visiting:   br label %for.end
IC: Visiting:   ret i32 0
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function 'main'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function 'main'...
0x7de8dc0       Required Analyses: No target information
0x7de86fc     Made Modification 'Simplify the CFG' on Function 'main'...
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function 'main'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* undef, i32 0)
IC: Visiting:   ret i32 0
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthEi
IC: ADDING: 7 instrs to worklist
IC: Visiting:   %cmp = icmp sle i32 0, %d
IC: Old =   %cmp = icmp sge i32 %d, 0
    New =   <badref> = icmp sgt i32 %d, -1
IC: ADD:   %cmp = icmp sgt i32 %d, -1
IC: ERASE   %0 = icmp sge i32 %d, 0
IC: Visiting:   %cmp = icmp sgt i32 %d, -1
IC: Visiting:   %cmp2 = icmp ult i32 %d, 1
IC: Old =   %cmp2 = icmp ult i32 %d, 1
    New =   <badref> = icmp eq i32 %d, 0
IC: ADD:   %cmp2 = icmp eq i32 %d, 0
IC: ERASE   %0 = icmp ult i32 %d, 1
IC: Visiting:   %cmp2 = icmp eq i32 %d, 0
IC: Visiting:   %or.cond = and i1 %cmp, %cmp2
IC: Replacing   %or.cond = and i1 %cmp, %cmp2
    with   %cmp2 = icmp eq i32 %d, 0
IC: Mod =   %or.cond = and i1 %cmp, %cmp2
    New =   %or.cond = and i1 %cmp, %cmp2
IC: ERASE   %or.cond = and i1 %cmp, %cmp2
IC: ADD:   %cmp = icmp sgt i32 %d, -1
IC: ADD:   %cmp2 = icmp eq i32 %d, 0
IC: Visiting:   %cmp2 = icmp eq i32 %d, 0
IC: DCE:   %cmp = icmp sgt i32 %d, -1
IC: ERASE   %cmp = icmp sgt i32 %d, -1
IC: Visiting:   br i1 %cmp2, label %cond.end, label %cond.false
IC: Visiting:   call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #3
IC: Visiting:   unreachable
IC: Visiting:   ret i32 0


INSTCOMBINE ITERATION #1 on _ZN5molly5arrayIiJLi128EEE6lengthEi
IC: ADDING: 5 instrs to worklist
IC: Visiting:   %cmp2 = icmp eq i32 %d, 0
IC: Visiting:   br i1 %cmp2, label %cond.end, label %cond.false
IC: Visiting:   call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #3
IC: Visiting:   unreachable
IC: Visiting:   ret i32 0
0x7de86fc     Made Modification 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash32v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 undef
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash64v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i64 undef
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de86fc     Executing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7de7f80       Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _GLOBAL__I_a
IC: ADDING: 2 instrs to worklist
IC: Visiting:   call fastcc void @__cxx_global_var_init()
IC: Visiting:   ret void
0x7de7f80       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7de86fc     Executing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7de8dc0       Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7de86fc      Freeing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7dde0f4   Made Modification 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Basic CallGraph Construction' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'CallGraph Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7de9750     Required Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC2Ev'<<0x7dc3118>>  #uses=2

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC2Ev'<<0x7dc3118>>  #uses=2

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC2Ev'<<0x7dc3118>>  #uses=2

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _ZN5molly9MollyInitC2Ev: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC2Ev'<<0x7dc3118>>  #uses=2

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly9MollyInitC2Ev'<<0x7dc3118>>  #uses=2

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC2Ev'<<0x7dc3118>>  #uses=2

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC2Ev'<<0x7dc3118>>  #uses=2

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'SROA' on Function '_ZN5molly9MollyInitC2Ev'...
SROA function: _ZN5molly9MollyInitC2Ev
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'SROA' is not preserving 'Function Pass Manager'
 -- 'SROA' is not preserving 'Basic CallGraph Construction'
 -- 'SROA' is not preserving 'Basic CallGraph Construction'
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_ZN5molly9MollyInitC2Ev'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitC2Ev'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly9MollyInitC2Ev'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitC2Ev'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitC2Ev'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_ZN5molly9MollyInitC2Ev'
Marking Block Executable: entry
markOverdefined: %"class.molly::MollyInit"* %this

Popped off OI-WL: %"class.molly::MollyInit"* %this

Popped off BBWL: 
entry:
  ret void

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly9MollyInitC2Ev'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC2Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC2Ev'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC1Ev'<<0x7dbeb30>>  #uses=2
  CS<0x7dc2ef0> calls function '_ZN5molly9MollyInitC2Ev'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC1Ev'<<0x7dbeb30>>  #uses=2
  CS<0x7dc2ef0> calls function '_ZN5molly9MollyInitC2Ev'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC1Ev'<<0x7dbeb30>>  #uses=2
  CS<0x7dc2ef0> calls function '_ZN5molly9MollyInitC2Ev'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _ZN5molly9MollyInitC1Ev: 1 call sites.
    -> Deleting dead call:   call void @_ZN5molly9MollyInitC2Ev(%"class.molly::MollyInit"* undef)
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly9MollyInitC1Ev'<<0x7dbeb30>>  #uses=2

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC1Ev'<<0x7dbeb30>>  #uses=2

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly9MollyInitC1Ev'<<0x7dbeb30>>  #uses=2

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC1Ev'<<0x7dbeb30>>  #uses=2

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitC1Ev'<<0x7dbeb30>>  #uses=2

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'SROA' on Function '_ZN5molly9MollyInitC1Ev'...
SROA function: _ZN5molly9MollyInitC1Ev
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_ZN5molly9MollyInitC1Ev'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitC1Ev'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly9MollyInitC1Ev'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitC1Ev'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC1Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitC1Ev'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC1Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_ZN5molly9MollyInitC1Ev'
Marking Block Executable: entry
markOverdefined: %"class.molly::MollyInit"* %this

Popped off OI-WL: %"class.molly::MollyInit"* %this

Popped off BBWL: 
entry:
  ret void

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC1Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly9MollyInitC1Ev'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitC1Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitC1Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitC1Ev'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD2Ev'<<0x7dc1d88>>  #uses=2

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD2Ev'<<0x7dc1d88>>  #uses=2

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD2Ev'<<0x7dc1d88>>  #uses=2

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _ZN5molly9MollyInitD2Ev: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD2Ev'<<0x7dc1d88>>  #uses=2

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly9MollyInitD2Ev'<<0x7dc1d88>>  #uses=2

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD2Ev'<<0x7dc1d88>>  #uses=2

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD2Ev'<<0x7dc1d88>>  #uses=2

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'SROA' on Function '_ZN5molly9MollyInitD2Ev'...
SROA function: _ZN5molly9MollyInitD2Ev
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_ZN5molly9MollyInitD2Ev'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitD2Ev'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly9MollyInitD2Ev'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitD2Ev'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitD2Ev'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_ZN5molly9MollyInitD2Ev'
Marking Block Executable: entry
markOverdefined: %"class.molly::MollyInit"* %this

Popped off OI-WL: %"class.molly::MollyInit"* %this

Popped off BBWL: 
entry:
  ret void

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly9MollyInitD2Ev'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD2Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD2Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD2Ev'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD1Ev'<<0x7dc1938>>  #uses=2
  CS<0x7dc2358> calls function '_ZN5molly9MollyInitD2Ev'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD1Ev'<<0x7dc1938>>  #uses=2
  CS<0x7dc2358> calls function '_ZN5molly9MollyInitD2Ev'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD1Ev'<<0x7dc1938>>  #uses=2
  CS<0x7dc2358> calls function '_ZN5molly9MollyInitD2Ev'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _ZN5molly9MollyInitD1Ev: 1 call sites.
    -> Deleting dead call:   call void @_ZN5molly9MollyInitD2Ev(%"class.molly::MollyInit"* undef) #0
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly9MollyInitD1Ev'<<0x7dc1938>>  #uses=2

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD1Ev'<<0x7dc1938>>  #uses=2

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly9MollyInitD1Ev'<<0x7dc1938>>  #uses=2

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD1Ev'<<0x7dc1938>>  #uses=2

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_ZN5molly9MollyInitD1Ev'<<0x7dc1938>>  #uses=2

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'SROA' on Function '_ZN5molly9MollyInitD1Ev'...
SROA function: _ZN5molly9MollyInitD1Ev
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_ZN5molly9MollyInitD1Ev'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitD1Ev'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly9MollyInitD1Ev'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitD1Ev'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD1Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitD1Ev'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD1Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_ZN5molly9MollyInitD1Ev'
Marking Block Executable: entry
markOverdefined: %"class.molly::MollyInit"* %this

Popped off OI-WL: %"class.molly::MollyInit"* %this

Popped off BBWL: 
entry:
  ret void

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD1Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly9MollyInitD1Ev'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly9MollyInitD1Ev'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly9MollyInitD1Ev
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly9MollyInitD1Ev'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '__dtor__ZN5mollyL12molly_globalE'<<0x7dc1e40>>  #uses=1
  CS<0x7daeab0> calls function '_ZN5molly9MollyInitD1Ev'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '__dtor__ZN5mollyL12molly_globalE'<<0x7dc1e40>>  #uses=1
  CS<0x7daeab0> calls function '_ZN5molly9MollyInitD1Ev'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '__dtor__ZN5mollyL12molly_globalE'<<0x7dc1e40>>  #uses=1
  CS<0x7daeab0> calls function '_ZN5molly9MollyInitD1Ev'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: __dtor__ZN5mollyL12molly_globalE: 1 call sites.
    -> Deleting dead call:   call void @_ZN5molly9MollyInitD1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '__dtor__ZN5mollyL12molly_globalE'<<0x7dc1e40>>  #uses=1

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '__dtor__ZN5mollyL12molly_globalE'<<0x7dc1e40>>  #uses=1

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '__dtor__ZN5mollyL12molly_globalE'<<0x7dc1e40>>  #uses=1

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '__dtor__ZN5mollyL12molly_globalE'<<0x7dc1e40>>  #uses=1

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '__dtor__ZN5mollyL12molly_globalE'<<0x7dc1e40>>  #uses=1

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'SROA' on Function '__dtor__ZN5mollyL12molly_globalE'...
SROA function: __dtor__ZN5mollyL12molly_globalE
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Early CSE' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '__dtor__ZN5mollyL12molly_globalE'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __dtor__ZN5mollyL12molly_globalE
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __dtor__ZN5mollyL12molly_globalE
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '__dtor__ZN5mollyL12molly_globalE'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  ret void

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __dtor__ZN5mollyL12molly_globalE
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '__dtor__ZN5mollyL12molly_globalE'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __dtor__ZN5mollyL12molly_globalE
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret void
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node <<null function>><<0x7dc3628>>  #uses=2

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node <<null function>><<0x7dc3628>>  #uses=2

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node <<null function>><<0x7dc3628>>  #uses=2

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: INDIRECTNODE: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node <<null function>><<0x7dc3628>>  #uses=2

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node <<null function>><<0x7dc3628>>  #uses=2

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node <<null function>><<0x7dc3628>>  #uses=2

'...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: 'atexit'<<0x7dbf320>>  #uses=2
  CS<0x0> calls external node

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: 'atexit'<<0x7dbf320>>  #uses=2
  CS<0x0> calls external node

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: 'atexit'<<0x7dbf320>>  #uses=2
  CS<0x0> calls external node

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: atexit: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: 'atexit'<<0x7dbf320>>  #uses=2
  CS<0x0> calls external node

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: 'atexit'<<0x7dbf320>>  #uses=2
  CS<0x0> calls external node

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: 'atexit'<<0x7dbf320>>  #uses=2
  CS<0x0> calls external node

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function 'atexit'...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_assert'<<0x7db9070>>  #uses=2
  CS<0x0> calls external node

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_assert'<<0x7db9070>>  #uses=2
  CS<0x0> calls external node

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_assert'<<0x7db9070>>  #uses=2
  CS<0x0> calls external node

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _assert: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_assert'<<0x7db9070>>  #uses=2
  CS<0x0> calls external node

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_assert'<<0x7db9070>>  #uses=2
  CS<0x0> calls external node

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_assert'<<0x7db9070>>  #uses=2
  CS<0x0> calls external node

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_assert'...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthEi'<<0x7dbad08>>  #uses=3
  CS<0x7dc12b0> calls function '_assert'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthEi'<<0x7dbad08>>  #uses=3
  CS<0x7dc12b0> calls function '_assert'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthEi'<<0x7dbad08>>  #uses=3
  CS<0x7dc12b0> calls function '_assert'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _ZN5molly5arrayIiJLi128EEE6lengthEi: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthEi'<<0x7dbad08>>  #uses=3
  CS<0x7dc12b0> calls function '_assert'

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthEi'<<0x7dbad08>>  #uses=3
  CS<0x7dc12b0> calls function '_assert'

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthEi'<<0x7dbad08>>  #uses=3
  CS<0x7dc12b0> calls function '_assert'

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthEi'<<0x7dbad08>>  #uses=3
  CS<0x7dc12b0> calls function '_assert'

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
SROA function: _ZN5molly5arrayIiJLi128EEE6lengthEi
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthEi
IC: ADDING: 5 instrs to worklist
IC: Visiting:   %cmp2 = icmp eq i32 %d, 0
IC: Visiting:   br i1 %cmp2, label %cond.end, label %cond.false
IC: Visiting:   call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #5
IC: Visiting:   unreachable
IC: Visiting:   ret i32 0
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7de1bc0         Required Analyses: No target information
0x7deaf34       Made Modification 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthEi
IC: ADDING: 5 instrs to worklist
IC: Visiting:   %cmp2 = icmp eq i32 %d, 0
IC: Visiting:   br i1 %cmp2, label %cond.end, label %cond.false
IC: Visiting:   tail call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #5
IC: Visiting:   unreachable
IC: Visiting:   ret i32 0
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
Marking Block Executable: entry
markOverdefined: %"class.molly::array"* %this
markOverdefined: i32 %d

Popped off OI-WL: i32 %d
markOverdefined:   %cmp2 = icmp eq i32 %d, 0

Popped off OI-WL:   %cmp2 = icmp eq i32 %d, 0
Marking Block Executable: cond.end
Marking Block Executable: cond.false

Popped off OI-WL: %"class.molly::array"* %this

Popped off BBWL: 
cond.false:                                       ; preds = %entry
  tail call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #5
  unreachable


Popped off BBWL: 
cond.end:                                         ; preds = %entry
  ret i32 0


Popped off BBWL: 
entry:
  %cmp2 = icmp eq i32 %d, 0
  br i1 %cmp2, label %cond.end, label %cond.false

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthEi
IC: ADDING: 5 instrs to worklist
IC: Visiting:   %cmp2 = icmp eq i32 %d, 0
IC: Visiting:   br i1 %cmp2, label %cond.end, label %cond.false
IC: Visiting:   tail call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #5
IC: Visiting:   unreachable
IC: Visiting:   ret i32 0
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthEi
IC: ADDING: 5 instrs to worklist
IC: Visiting:   %cmp2 = icmp eq i32 %d, 0
IC: Visiting:   br i1 %cmp2, label %cond.end, label %cond.false
IC: Visiting:   tail call void @_assert(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8]* @.str1, i32 0, i32 0), i32 128) #5
IC: Visiting:   unreachable
IC: Visiting:   ret i32 0
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthEi'...
CGSCCPASSMGR: Pass Dirtied SCC: Function Pass Manager
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthEi'<<0x7dbad08>>  #uses=3
  CS<0x7dc12b0> calls function '_assert'

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'<<0x7dc2a10>>  #uses=2
  CS<0x7dc1cc4> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'<<0x7dc2a10>>  #uses=2
  CS<0x7dc1cc4> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'<<0x7dc2a10>>  #uses=2
  CS<0x7dc1cc4> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv: 1 call sites.
      Analyzing call of _ZN5molly5arrayIiJLi128EEE6lengthEi...
      NumConstantArgs: 2
      NumConstantOffsetPtrArgs: 1
      NumAllocaArgs: 0
      NumConstantPtrCmps: 0
      NumConstantPtrDiffs: 0
      NumInstructionsSimplified: 1
      SROACostSavings: 0
      SROACostSavingsLost: 0
      ContainsNoDuplicateCall: 0
      Analyzing call of _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv...
      NumConstantArgs: 1
      NumConstantOffsetPtrArgs: 1
      NumAllocaArgs: 0
      NumConstantPtrCmps: 0
      NumConstantPtrDiffs: 0
      NumInstructionsSimplified: 0
      SROACostSavings: 0
      SROACostSavingsLost: 0
      ContainsNoDuplicateCall: 0
    Inlining: cost=-5, thres=412, Call:   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* undef, i32 0)
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'<<0x7dc2a10>>  #uses=2

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'<<0x7dc2a10>>  #uses=2

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'<<0x7dc2a10>>  #uses=2

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'<<0x7dc2a10>>  #uses=2

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'<<0x7dc2a10>>  #uses=2

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
SROA function: _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 0
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 0
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
Marking Block Executable: entry
markOverdefined: %"class.molly::array"* %this

Popped off OI-WL: %"class.molly::array"* %this

Popped off BBWL: 
entry:
  ret i32 0

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 0
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 0
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: 'main'<<0x7dc24d0>>  #uses=1
  CS<0x7dba660> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x7dbaa04> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: 'main'<<0x7dc24d0>>  #uses=1
  CS<0x7dba660> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x7dbaa04> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: 'main'<<0x7dc24d0>>  #uses=1
  CS<0x7dba660> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x7dbaa04> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: main: 2 call sites.
    -> Deleting dead call:   %call = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv(%"class.molly::array"* @MyField)
      Analyzing call of _ZN5molly5arrayIiJLi128EEE6lengthEi...
      NumConstantArgs: 2
      NumConstantOffsetPtrArgs: 1
      NumAllocaArgs: 0
      NumConstantPtrCmps: 0
      NumConstantPtrDiffs: 0
      NumInstructionsSimplified: 1
      SROACostSavings: 0
      SROACostSavingsLost: 0
      ContainsNoDuplicateCall: 0
    Inlining: cost=-5, thres=412, Call:   %call1 = call i32 @_ZN5molly5arrayIiJLi128EEE6lengthEi(%"class.molly::array"* undef, i32 0)
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: 'main'<<0x7dc24d0>>  #uses=1

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: 'main'<<0x7dc24d0>>  #uses=1

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: 'main'<<0x7dc24d0>>  #uses=1

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: 'main'<<0x7dc24d0>>  #uses=1

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: 'main'<<0x7dc24d0>>  #uses=1

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function 'main'...
0x7deaf34       Executing Pass 'SROA' on Function 'main'...
SROA function: main
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function 'main'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function 'main'...
0x7deaf34       Executing Pass 'Early CSE' on Function 'main'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function 'main'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function 'main'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function 'main'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function 'main'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function 'main'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function 'main'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function 'main'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function 'main'...
0x7deaf34       Executing Pass 'Value Propagation' on Function 'main'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function 'main'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function 'main'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function 'main'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function 'main'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function 'main'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on main
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 0
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function 'main'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function 'main'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function 'main'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function 'main'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function 'main'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function 'main'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function 'main'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function 'main'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function 'main'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function 'main'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function 'main'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function 'main'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on main
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 0
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function 'main'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function 'main'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function 'main'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function 'main'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function 'main'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function 'main'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function 'main'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function 'main'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function 'main'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function 'main'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function 'main'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function 'main'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function 'main'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function 'main'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function 'main'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function 'main'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function 'main'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function 'main'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function 'main'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function 'main'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function 'main'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function 'main'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function 'main'
Marking Block Executable: entry
markOverdefined: i32 %argc
markOverdefined: i8** %argv

Popped off OI-WL: i8** %argv

Popped off OI-WL: i32 %argc

Popped off BBWL: 
entry:
  ret i32 0

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function 'main'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function 'main'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on main
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 0
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function 'main'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function 'main'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function 'main'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function 'main'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function 'main'...
0x7deaf34       Executing Pass 'Value Propagation' on Function 'main'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function 'main'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function 'main'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function 'main'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function 'main'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function 'main'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function 'main'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function 'main'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function 'main'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function 'main'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function 'main'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function 'main'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function 'main'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function 'main'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on main
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 0
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function 'main'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1def0>>  #uses=1

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1def0>>  #uses=1

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1def0>>  #uses=1

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1def0>>  #uses=1

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1def0>>  #uses=1

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1def0>>  #uses=1

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1def0>>  #uses=1

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
SROA function: _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
Marking Block Executable: entry
markOverdefined: %"class.molly::array"* %this
markOverdefined: i32 %i

Popped off OI-WL: i32 %i

Popped off OI-WL: %"class.molly::array"* %this
markOverdefined:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0

Popped off OI-WL:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0

Popped off BBWL: 
entry:
  %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
  ret i32* %dummy

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1dff0>>  #uses=1

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1dff0>>  #uses=1

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1dff0>>  #uses=1

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1dff0>>  #uses=1

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1dff0>>  #uses=1

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1dff0>>  #uses=1

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'<<0x7e1dff0>>  #uses=1

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
SROA function: _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
Marking Block Executable: entry
markOverdefined: %"class.molly::array.0"* %this
markOverdefined: i32 %i

Popped off OI-WL: i32 %i

Popped off OI-WL: %"class.molly::array.0"* %this
markOverdefined:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0

Popped off OI-WL:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0

Popped off BBWL: 
entry:
  %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
  ret i32* %dummy

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %dummy = getelementptr inbounds %"class.molly::array.0"* %this, i32 0, i32 0
IC: Visiting:   ret i32* %dummy
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_Z7crash32v'<<0x7dbb778>>  #uses=1

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_Z7crash32v'<<0x7dbb778>>  #uses=1

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_Z7crash32v'<<0x7dbb778>>  #uses=1

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _Z7crash32v: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_Z7crash32v'<<0x7dbb778>>  #uses=1

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_Z7crash32v'<<0x7dbb778>>  #uses=1

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_Z7crash32v'<<0x7dbb778>>  #uses=1

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_Z7crash32v'<<0x7dbb778>>  #uses=1

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'SROA' on Function '_Z7crash32v'...
SROA function: _Z7crash32v
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_Z7crash32v'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_Z7crash32v'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_Z7crash32v'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_Z7crash32v'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_Z7crash32v'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_Z7crash32v'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash32v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 undef
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_Z7crash32v'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_Z7crash32v'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_Z7crash32v'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash32v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 undef
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_Z7crash32v'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_Z7crash32v'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_Z7crash32v'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_Z7crash32v'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_Z7crash32v'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_Z7crash32v'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_Z7crash32v'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_Z7crash32v'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  ret i32 undef

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash32v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 undef
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_Z7crash32v'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_Z7crash32v'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_Z7crash32v'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_Z7crash32v'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_Z7crash32v'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_Z7crash32v'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_Z7crash32v'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_Z7crash32v'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_Z7crash32v'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash32v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i32 undef
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_Z7crash32v'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_Z7crash64v'<<0x7dbc098>>  #uses=1

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_Z7crash64v'<<0x7dbc098>>  #uses=1

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_Z7crash64v'<<0x7dbc098>>  #uses=1

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _Z7crash64v: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_Z7crash64v'<<0x7dbc098>>  #uses=1

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_Z7crash64v'<<0x7dbc098>>  #uses=1

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_Z7crash64v'<<0x7dbc098>>  #uses=1

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_Z7crash64v'<<0x7dbc098>>  #uses=1

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'SROA' on Function '_Z7crash64v'...
SROA function: _Z7crash64v
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_Z7crash64v'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_Z7crash64v'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_Z7crash64v'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_Z7crash64v'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_Z7crash64v'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_Z7crash64v'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash64v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i64 undef
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_Z7crash64v'...
0x7de1bc0         Required Analyses: No target information
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_Z7crash64v'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_Z7crash64v'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash64v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i64 undef
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_Z7crash64v'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_Z7crash64v'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_Z7crash64v'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_Z7crash64v'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_Z7crash64v'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_Z7crash64v'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_Z7crash64v'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_Z7crash64v'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  ret i64 undef

RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash64v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i64 undef
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_Z7crash64v'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_Z7crash64v'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_Z7crash64v'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_Z7crash64v'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_Z7crash64v'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_Z7crash64v'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_Z7crash64v'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_Z7crash64v'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_Z7crash64v'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _Z7crash64v
IC: ADDING: 1 instrs to worklist
IC: Visiting:   ret i64 undef
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_Z7crash64v'...
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '__cxx_global_var_init'<<0x7dc36e0>>  #uses=1
  CS<0x7dae818> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x7daed58> calls function 'atexit'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '__cxx_global_var_init'<<0x7dc36e0>>  #uses=1
  CS<0x7dae818> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x7daed58> calls function 'atexit'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '__cxx_global_var_init'<<0x7dc36e0>>  #uses=1
  CS<0x7dae818> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x7daed58> calls function 'atexit'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: __cxx_global_var_init: 1 call sites.
    -> Deleting dead call:   call void @_ZN5molly9MollyInitC1Ev(%"class.molly::MollyInit"* @_ZN5mollyL12molly_globalE)
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '__cxx_global_var_init'<<0x7dc36e0>>  #uses=1
  CS<0x7daed58> calls function 'atexit'

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '__cxx_global_var_init'<<0x7dc36e0>>  #uses=1
  CS<0x7daed58> calls function 'atexit'

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '__cxx_global_var_init'<<0x7dc36e0>>  #uses=1
  CS<0x7daed58> calls function 'atexit'

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '__cxx_global_var_init'<<0x7dc36e0>>  #uses=1
  CS<0x7daed58> calls function 'atexit'

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'SROA' on Function '__cxx_global_var_init'...
SROA function: __cxx_global_var_init
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Early CSE' on Function '__cxx_global_var_init'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '__cxx_global_var_init'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '__cxx_global_var_init'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '__cxx_global_var_init'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '__cxx_global_var_init'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '__cxx_global_var_init'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __cxx_global_var_init
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
IC: Visiting:   ret void
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '__cxx_global_var_init'...
0x7de1bc0         Required Analyses: No target information
0x7deaf34       Made Modification 'Tail Call Elimination' on Function '__cxx_global_var_init'...
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '__cxx_global_var_init'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '__cxx_global_var_init'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '__cxx_global_var_init'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __cxx_global_var_init
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
IC: Visiting:   ret void
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '__cxx_global_var_init'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '__cxx_global_var_init'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '__cxx_global_var_init'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '__cxx_global_var_init'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '__cxx_global_var_init'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '__cxx_global_var_init'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '__cxx_global_var_init'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '__cxx_global_var_init'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '__cxx_global_var_init'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '__cxx_global_var_init'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '__cxx_global_var_init'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
  ret void

markOverdefined:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0

Popped off OI-WL:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __cxx_global_var_init
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
IC: Visiting:   ret void
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '__cxx_global_var_init'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '__cxx_global_var_init'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '__cxx_global_var_init'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '__cxx_global_var_init'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '__cxx_global_var_init'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '__cxx_global_var_init'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '__cxx_global_var_init'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '__cxx_global_var_init'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '__cxx_global_var_init'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on __cxx_global_var_init
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #0
IC: Visiting:   ret void
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '__cxx_global_var_init'...
CGSCCPASSMGR: Pass Dirtied SCC: Function Pass Manager
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '__cxx_global_var_init'<<0x7dc36e0>>  #uses=1
  CS<0x7daed58> calls function 'atexit'

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node for function: '_GLOBAL__I_a'<<0x7dbb830>>  #uses=1
  CS<0x7dc3ff4> calls function '__cxx_global_var_init'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node for function: '_GLOBAL__I_a'<<0x7dbb830>>  #uses=1
  CS<0x7dc3ff4> calls function '__cxx_global_var_init'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node for function: '_GLOBAL__I_a'<<0x7dbb830>>  #uses=1
  CS<0x7dc3ff4> calls function '__cxx_global_var_init'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: _GLOBAL__I_a: 1 call sites.
      Analyzing call of __cxx_global_var_init...
      NumConstantArgs: 0
      NumConstantOffsetPtrArgs: 0
      NumAllocaArgs: 0
      NumConstantPtrCmps: 0
      NumConstantPtrDiffs: 0
      NumInstructionsSimplified: 0
      SROACostSavings: 0
      SROACostSavingsLost: 0
      ContainsNoDuplicateCall: 0
    Inlining: cost=-14965, thres=412, Call:   call fastcc void @__cxx_global_var_init()
    -> Deleting dead function: __cxx_global_var_init
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_GLOBAL__I_a'<<0x7dbb830>>  #uses=1
  CS<0x7dc2ef0> calls function 'atexit'

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Made Modification 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node for function: '_GLOBAL__I_a'<<0x7dbb830>>  #uses=1
  CS<0x7dc2ef0> calls function 'atexit'

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Deduce function attributes' on Call Graph Nodes ''...
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node for function: '_GLOBAL__I_a'<<0x7dbb830>>  #uses=1
  CS<0x7dc2ef0> calls function 'atexit'

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7de9764     Made Modification 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node for function: '_GLOBAL__I_a'<<0x7dbb830>>  #uses=1
  CS<0x7dc2ef0> calls function 'atexit'

'...
0x7de9764     Executing Pass 'Function Pass Manager' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'SROA' on Function '_GLOBAL__I_a'...
SROA function: _GLOBAL__I_a
0x7deaab0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'SROA' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'SROA' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Early CSE' on Function '_GLOBAL__I_a'...
0x7deb578         Required Analyses: Dominator Tree Construction, Target Library Information
0x7deb578         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Early CSE' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Early CSE' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Simplify well-known library calls' on Function '_GLOBAL__I_a'...
0x7debc70         Required Analyses: Target Library Information
 -*- 'Simplify well-known library calls' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify well-known library calls' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_GLOBAL__I_a'...
0x7dec838         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_GLOBAL__I_a'...
0x7ddeba8         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_GLOBAL__I_a'
0x7ddeba8         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_GLOBAL__I_a'...
0x7decbb0         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7decf90         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7ded8e0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _GLOBAL__I_a
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %0 = call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #2
IC: Visiting:   ret void
0x7ded8e0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Tail Call Elimination' on Function '_GLOBAL__I_a'...
0x7de1bc0         Required Analyses: No target information
0x7deaf34       Made Modification 'Tail Call Elimination' on Function '_GLOBAL__I_a'...
 -*- 'Tail Call Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Tail Call Elimination' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7dedf50         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Reassociate expressions' on Function '_GLOBAL__I_a'...
0x7dee220         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Reassociate expressions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Reassociate expressions' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Natural Loop Information' on Function '_GLOBAL__I_a'...
0x7ddb900         Required Analyses: Dominator Tree Construction
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7df01f0         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7df19a0         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _GLOBAL__I_a
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #2
IC: Visiting:   ret void
0x7df19a0         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -- 'Combine redundant instructions' is not preserving 'Loop Pass Manager'
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_GLOBAL__I_a'...
0x7df2540         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7df2dd8         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7df4130         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Scalar Evolution Analysis' on Function '_GLOBAL__I_a'...
0x7df5190         Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7deaf34       Executing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7df5688         Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Scalar Evolution Analysis' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Natural Loop Information' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_GLOBAL__I_a'...
0x7df6238         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Global Value Numbering' on Function '_GLOBAL__I_a'...
0x7df5d48         Required Analyses: Dominator Tree Construction, Target Library Information, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias)
GVN iteration: 0
0x7df5d48         Preserved Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias)
 -- 'Global Value Numbering' is not preserving 'Loop Pass Manager'
 -- 'Global Value Numbering' is not preserving 'Memory Dependence Analysis'
 -*- 'Global Value Numbering' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Global Value Numbering' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_GLOBAL__I_a'...
0x7df6950         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'MemCpy Optimization' on Function '_GLOBAL__I_a'...
0x7df6610         Required Analyses: Dominator Tree Construction, Memory Dependence Analysis, No Alias Analysis (always returns 'may' alias), Target Library Information
0x7df6610         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
 -*- 'MemCpy Optimization' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'MemCpy Optimization' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Sparse Conditional Constant Propagation' on Function '_GLOBAL__I_a'...
0x7df20a8         Required Analyses: Target Library Information
SCCP on function '_GLOBAL__I_a'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #2
  ret void

markOverdefined:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #2

Popped off OI-WL:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #2
RESOLVING UNDEFs
 -*- 'Sparse Conditional Constant Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Sparse Conditional Constant Propagation' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7df7168         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _GLOBAL__I_a
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #2
IC: Visiting:   ret void
0x7df7168         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Lazy Value Information Analysis' on Function '_GLOBAL__I_a'...
0x7df7c40         Required Analyses: Target Library Information
0x7deaf34       Executing Pass 'Jump Threading' on Function '_GLOBAL__I_a'...
0x7df7870         Required Analyses: Lazy Value Information Analysis, Target Library Information
Jump threading on function '_GLOBAL__I_a'
0x7df7870         Preserved Analyses: Lazy Value Information Analysis
 -*- 'Jump Threading' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Jump Threading' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Value Propagation' on Function '_GLOBAL__I_a'...
0x7df7fb8         Required Analyses: Lazy Value Information Analysis
 -- 'Value Propagation' is not preserving 'Lazy Value Information Analysis'
 -*- 'Value Propagation' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Lazy Value Information Analysis' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Value Propagation' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Memory Dependence Analysis' on Function '_GLOBAL__I_a'...
0x7df89d0         Required Analyses: No Alias Analysis (always returns 'may' alias)
0x7deaf34       Executing Pass 'Dead Store Elimination' on Function '_GLOBAL__I_a'...
0x7df8290         Required Analyses: Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Memory Dependence Analysis
0x7df8290         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Dominator Tree Construction, Memory Dependence Analysis
 -*- 'Dead Store Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Memory Dependence Analysis' on Function '_GLOBAL__I_a'...
0x7deaf34        Freeing Pass 'Dead Store Elimination' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Aggressive Dead Code Elimination' on Function '_GLOBAL__I_a'...
0x7df8da8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Aggressive Dead Code Elimination' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Aggressive Dead Code Elimination' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7df2a38         Required Analyses: No target information
 -*- 'Simplify the CFG' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Simplify the CFG' on Function '_GLOBAL__I_a'...
0x7deaf34       Executing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
0x7df94e8         Required Analyses: Target Library Information


INSTCOMBINE ITERATION #0 on _GLOBAL__I_a
IC: ADDING: 2 instrs to worklist
IC: Visiting:   %0 = tail call i32 @atexit(void ()* @__dtor__ZN5mollyL12molly_globalE) #2
IC: Visiting:   ret void
0x7df94e8         Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions
 -*- 'Combine redundant instructions' is the last user of following pass instances. Free these instances
0x7deaf34        Freeing Pass 'Combine redundant instructions' on Function '_GLOBAL__I_a'...
CGSCCPASSMGR: Pass Dirtied SCC: Function Pass Manager
0x7de9764     Made Modification 'Function Pass Manager' on Call Graph Nodes ''...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
CGSCCPASSMGR: Refreshing SCC with 1 nodes:
Call graph node for function: '_GLOBAL__I_a'<<0x7dbb830>>  #uses=1
  CS<0x7dc2ef0> calls function 'atexit'

CGSCCPASSMGR: SCC Refresh didn't change call graph.
0x7de9764     Executing Pass 'Remove unused exception handling info' on Call Graph Nodes 'Call graph node <<null function>><<0x7dbaf20>>  #uses=0
  CS<0x0> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitD1Ev'
  CS<0x0> calls function '__dtor__ZN5mollyL12molly_globalE'
  CS<0x0> calls function 'atexit'
  CS<0x0> calls function 'main'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_Z7crash32v'
  CS<0x0> calls function '_Z7crash64v'
  CS<0x0> calls function '_assert'
  CS<0x0> calls function '_ZN5molly9MollyInitD2Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitC2Ev'
  CS<0x0> calls function '_GLOBAL__I_a'

'...
0x7de9090       Required Analyses: Basic CallGraph Construction
0x7de9090       Preserved Analyses: Basic CallGraph Construction
 -- 'Remove unused exception handling info' is not preserving 'Function Pass Manager'
 -*- 'Remove unused exception handling info' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Remove unused exception handling info' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Inline Cost Analysis' on Call Graph Nodes 'Call graph node <<null function>><<0x7dbaf20>>  #uses=0
  CS<0x0> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitD1Ev'
  CS<0x0> calls function '__dtor__ZN5mollyL12molly_globalE'
  CS<0x0> calls function 'atexit'
  CS<0x0> calls function 'main'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_Z7crash32v'
  CS<0x0> calls function '_Z7crash64v'
  CS<0x0> calls function '_assert'
  CS<0x0> calls function '_ZN5molly9MollyInitD2Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitC2Ev'
  CS<0x0> calls function '_GLOBAL__I_a'

'...
0x7de9f90       Required Analyses: No target information, Basic CallGraph Construction
0x7de9f90       Preserved Analyses: Basic CallGraph Construction
0x7de9764     Executing Pass 'Function Integration/Inlining' on Call Graph Nodes 'Call graph node <<null function>><<0x7dbaf20>>  #uses=0
  CS<0x0> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitD1Ev'
  CS<0x0> calls function '__dtor__ZN5mollyL12molly_globalE'
  CS<0x0> calls function 'atexit'
  CS<0x0> calls function 'main'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_Z7crash32v'
  CS<0x0> calls function '_Z7crash64v'
  CS<0x0> calls function '_assert'
  CS<0x0> calls function '_ZN5molly9MollyInitD2Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitC2Ev'
  CS<0x0> calls function '_GLOBAL__I_a'

'...
0x7dc48d8       Required Analyses: Inline Cost Analysis, Basic CallGraph Construction
Inliner visiting SCC: INDIRECTNODE: 0 call sites.
0x7dc48d8       Preserved Analyses: Basic CallGraph Construction
 -- 'Function Integration/Inlining' is not preserving 'Inline Cost Analysis'
 -*- 'Function Integration/Inlining' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Integration/Inlining' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Inline Cost Analysis' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Deduce function attributes' on Call Graph Nodes 'Call graph node <<null function>><<0x7dbaf20>>  #uses=0
  CS<0x0> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitD1Ev'
  CS<0x0> calls function '__dtor__ZN5mollyL12molly_globalE'
  CS<0x0> calls function 'atexit'
  CS<0x0> calls function 'main'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_Z7crash32v'
  CS<0x0> calls function '_Z7crash64v'
  CS<0x0> calls function '_assert'
  CS<0x0> calls function '_ZN5molly9MollyInitD2Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitC2Ev'
  CS<0x0> calls function '_GLOBAL__I_a'

'...
0x7dea300       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7dea300       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Basic CallGraph Construction
 -*- 'Deduce function attributes' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Deduce function attributes' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes 'Call graph node <<null function>><<0x7dbaf20>>  #uses=0
  CS<0x0> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitD1Ev'
  CS<0x0> calls function '__dtor__ZN5mollyL12molly_globalE'
  CS<0x0> calls function 'atexit'
  CS<0x0> calls function 'main'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_Z7crash32v'
  CS<0x0> calls function '_Z7crash64v'
  CS<0x0> calls function '_assert'
  CS<0x0> calls function '_ZN5molly9MollyInitD2Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitC2Ev'
  CS<0x0> calls function '_GLOBAL__I_a'

'...
0x7dea6d8       Required Analyses: No Alias Analysis (always returns 'may' alias), Basic CallGraph Construction
0x7dea6d8       Preserved Analyses: Basic CallGraph Construction
 -*- 'Promote 'by reference' arguments to scalars' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Promote 'by reference' arguments to scalars' on Call Graph Nodes ''...
0x7de9764     Executing Pass 'Function Pass Manager' on Call Graph Nodes 'Call graph node <<null function>><<0x7dbaf20>>  #uses=0
  CS<0x0> calls function '_ZN5molly9MollyInitC1Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitD1Ev'
  CS<0x0> calls function '__dtor__ZN5mollyL12molly_globalE'
  CS<0x0> calls function 'atexit'
  CS<0x0> calls function 'main'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthIvEENSt9enable_ifILb1ENSt11conditionalILb1EiT_E4typeEE4typeEv'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEE6lengthEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi128EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_ZN5molly5arrayIiJLi44EEEixIvEENSt9enable_ifILb1ENSt11conditionalILb1ERiT_E4typeEE4typeEi'
  CS<0x0> calls function '_Z7crash32v'
  CS<0x0> calls function '_Z7crash64v'
  CS<0x0> calls function '_assert'
  CS<0x0> calls function '_ZN5molly9MollyInitD2Ev'
  CS<0x0> calls function '_ZN5molly9MollyInitC2Ev'
  CS<0x0> calls function '_GLOBAL__I_a'

'...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7de9764      Freeing Pass 'Function Pass Manager' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Target Library Information' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Call Graph Nodes ''...
0x7de9764      Freeing Pass 'X86 Target Transform Info' on Call Graph Nodes ''...
0x7dde0f4   Made Modification 'CallGraph Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -*- 'CallGraph Pass Manager' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'CallGraph Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4    Freeing Pass 'Basic CallGraph Construction' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Strip Unused Function Prototypes' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Made Modification 'Strip Unused Function Prototypes' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -- 'Strip Unused Function Prototypes' is not preserving 'CallGraph Pass Manager'
 -*- 'Strip Unused Function Prototypes' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Strip Unused Function Prototypes' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Dead Global Elimination' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Made Modification 'Dead Global Elimination' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -*- 'Dead Global Elimination' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Dead Global Elimination' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dde0f4   Executing Pass 'Merge Duplicate Global Constants' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -*- 'Merge Duplicate Global Constants' is the last user of following pass instances. Free these instances
0x7dde0f4    Freeing Pass 'Merge Duplicate Global Constants' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
Pass Arguments:  -datalayout -notti -basictti -x86tti -targetlibinfo -targetpassconfig -no-aa -tbaa -basicaa -collector-metadata -machinemoduleinfo -machine-branch-prob -preverify -domtree -verify -loops -loop-simplify -scalar-evolution -iv-users -loop-reduce -gc-lowering -unreachableblockelim -codegenprepare -stack-protector -preverify -domtree -verify -loops -branch-prob -expand-isel-pseudos -tailduplication -opt-phis -machinedomtree -slotindexes -stack-coloring -localstackalloc -dead-mi-elimination -machinedomtree -machine-loops -machinelicm -machine-cse -machine-sink -peephole-opts -processimpdefs -unreachable-mbb-elimination -livevars -phi-node-elimination -twoaddressinstruction -slotindexes -liveintervals -simple-register-coalescing -livedebugvars -livestacks -calcspillweights -virtregmap -liveregmatrix -edge-bundles -spill-code-placement -virtregrewriter -stack-slot-coloring -machinelicm -edge-bundles -prologepilog -branch-folder -tailduplication -machine-cp -postrapseudos -machinedomtree -machine-loops -post-RA-sched -gc-analysis -machine-block-freq -block-placement2
Data Layout
No target information
Target independent code generator's TTI
X86 Target Transform Info
Target Library Information
Target Pass Configuration
No Alias Analysis (always returns 'may' alias)
Type-Based Alias Analysis
Basic Alias Analysis (stateless AA impl)
Create Garbage Collector Module Metadata
Machine Module Information
Machine Branch Probability Analysis
  ModulePass Manager
    FunctionPass Manager
      Preliminary module verification
      Dominator Tree Construction
      Module Verifier
      Natural Loop Information
      Loop Pass Manager
        Canonicalize natural loops
      Scalar Evolution Analysis
      Loop Pass Manager
        Induction Variable Users
        Loop Strength Reduction
      Lower Garbage Collection Instructions
      Remove unreachable blocks from the CFG
      CodeGen Prepare
      Exception handling preparation
      Insert stack protectors
      Preliminary module verification
      Dominator Tree Construction
      Module Verifier
      Machine Function Analysis
      Natural Loop Information
      Branch Probability Analysis
      X86 DAG->DAG Instruction Selection
      X86 PIC Global Base Reg Initialization
      Expand ISel Pseudo-instructions
      Tail Duplication
      Optimize machine instruction PHIs
      MachineDominator Tree Construction
      Slot index numbering
      Merge disjoint stack slots
      Local Stack Slot Allocation
      Remove dead machine instructions
      MachineDominator Tree Construction
      Machine Natural Loop Construction
      Machine Loop Invariant Code Motion
      Machine Common Subexpression Elimination
      Machine code sinking
      Peephole Optimizations
      Process Implicit Definitions
      Remove unreachable machine basic blocks
      Live Variable Analysis
      Eliminate PHI nodes for register allocation
      Two-Address instruction pass
      Slot index numbering
      Live Interval Analysis
      Simple Register Coalescing
      Debug Variable Analysis
      Live Stack Slot Analysis
      Calculate spill weights
      Virtual Register Map
      Live Register Matrix
      Bundle Machine CFG Edges
      Spill Code Placement Analysis
      Greedy Register Allocator
      Virtual Register Rewriter
      Stack Slot Coloring
      Machine Loop Invariant Code Motion
      Bundle Machine CFG Edges
      X86 FP Stackifier
      Prologue/Epilogue Insertion & Frame Finalization
      Control Flow Optimizer
      Tail Duplication
      Machine Copy Propagation Pass
      Post-RA pseudo instruction expansion pass
      MachineDominator Tree Construction
      Machine Natural Loop Construction
      Post RA top-down list latency scheduler
      Analyze Machine Code For Garbage Collection
      Machine Block Frequency Analysis
      Branch Probability Basic Block Placement
      Execution dependency fix
      X86 Assembly / Object Emitter
0x7dec264   Executing Pass 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Module Verifier' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e01d48       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Module Verifier' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Natural Loop Information' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e035e8       Required Analyses: Dominator Tree Construction
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e03b70       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Scalar Evolution Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e04230       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e049e0       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Scalar Evolution Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'X86 Target Transform Info' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Lower Garbage Collection Instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e05138       Required Analyses: Create Garbage Collector Module Metadata
0x7e05138       Preserved Analyses: Dominator Tree Construction
 -- 'Lower Garbage Collection Instructions' is not preserving 'Loop Pass Manager'
 -*- 'Lower Garbage Collection Instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Lower Garbage Collection Instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Remove unreachable blocks from the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e05758       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'Remove unreachable blocks from the CFG' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable blocks from the CFG' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'CodeGen Prepare' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e05a28       Required Analyses: Target Library Information
0x7e05a28       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'CodeGen Prepare' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'CodeGen Prepare' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Exception handling preparation' on Function '__dtor__ZN5mollyL12molly_globalE'...
 -*- 'Exception handling preparation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Exception handling preparation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Insert stack protectors' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deeac0       Preserved Analyses: Dominator Tree Construction
 -- 'Insert stack protectors' is not preserving 'Exception handling preparation'
 -*- 'Insert stack protectors' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Insert stack protectors' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Module Verifier' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7deedf8       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Module Verifier' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Machine Function Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e090b8       Required Analyses: Machine Module Information
0x7e0230c     Executing Pass 'Natural Loop Information' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0a8b0       Required Analyses: Dominator Tree Construction
 -*- 'Natural Loop Information' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Branch Probability Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0a608       Required Analyses: Natural Loop Information
Computing probabilities for entry
 -*- 'Branch Probability Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'X86 DAG->DAG Instruction Selection' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e09398       Required Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Target Library Information, Branch Probability Analysis, Uninitialized Pass



=== __dtor__ZN5mollyL12molly_globalE
Initial selection DAG: BB#0 '__dtor__ZN5mollyL12molly_globalE:entry'
SelectionDAG has 3 nodes:
    0x7e096ac: ch = EntryToken

    0x7e30e48: i16 = TargetConstant<0>

  0x7e30ed0: ch = X86ISD::RET_FLAG 0x7e096ac, 0x7e30e48


Optimized lowered selection DAG: BB#0 '__dtor__ZN5mollyL12molly_globalE:entry'
SelectionDAG has 3 nodes:
    0x7e096ac: ch = EntryToken

    0x7e30e48: i16 = TargetConstant<0>

  0x7e30ed0: ch = X86ISD::RET_FLAG 0x7e096ac, 0x7e30e48


Legally typed node: 0x7e30e48: i16 = TargetConstant<0> [ID=0]

Legally typed node: 0x7e096ac: ch = EntryToken [ID=0]

Legally typed node: 0x7e30ed0: ch = X86ISD::RET_FLAG 0x7e096ac, 0x7e30e48 [ID=0]

Legally typed node: 0x5e0ce94: ch = handlenode 0x7e30ed0 [ID=0]

Type-legalized selection DAG: BB#0 '__dtor__ZN5mollyL12molly_globalE:entry'
SelectionDAG has 3 nodes:
    0x7e096ac: ch = EntryToken [ID=-3]

    0x7e30e48: i16 = TargetConstant<0> [ID=-3]

  0x7e30ed0: ch = X86ISD::RET_FLAG 0x7e096ac, 0x7e30e48 [ID=-3]


Legalized selection DAG: BB#0 '__dtor__ZN5mollyL12molly_globalE:entry'
SelectionDAG has 3 nodes:
    0x7e096ac: ch = EntryToken [ID=0]

    0x7e30e48: i16 = TargetConstant<0> [ID=1]

  0x7e30ed0: ch = X86ISD::RET_FLAG 0x7e096ac, 0x7e30e48 [ID=2]


Optimized legalized selection DAG: BB#0 '__dtor__ZN5mollyL12molly_globalE:entry'
SelectionDAG has 3 nodes:
    0x7e096ac: ch = EntryToken [ID=0]

    0x7e30e48: i16 = TargetConstant<0> [ID=1]

  0x7e30ed0: ch = X86ISD::RET_FLAG 0x7e096ac, 0x7e30e48 [ID=2]


===== Instruction selection begins: BB#0 'entry'
Selecting: 0x7e30ed0: ch = X86ISD::RET_FLAG 0x7e096ac, 0x7e30e48 [ID=2]

ISEL: Starting pattern match on root node: 0x7e30ed0: ch = X86ISD::RET_FLAG 0x7e096ac, 0x7e30e48 [ID=2]

  Morphed node: 0x7e30ed0: ch = RET 0x7e096ac

ISEL: Match complete!
=> 0x7e30ed0: ch = RET 0x7e096ac

Selecting: 0x7e096ac: ch = EntryToken [ID=0]

=> 0x7e096ac: ch = EntryToken

===== Instruction selection ends:
Selected selection DAG: BB#0 '__dtor__ZN5mollyL12molly_globalE:entry'
SelectionDAG has 2 nodes:
    0x7e096ac: ch = EntryToken

  0x7e30ed0: ch = RET 0x7e096ac


********** List Scheduling BB#0 'entry' **********
SU(0): 0x7e30ed0: ch = RET 0x7e096ac [ID=0]

  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0


Examining Available:
Height 0: SU(0): 0x7e30ed0: ch = RET 0x7e096ac [ID=0]


*** Scheduling [0]: SU(0): 0x7e30ed0: ch = RET 0x7e096ac [ID=0]

*** Final schedule ***
SU(0): 0x7e30ed0: ch = RET 0x7e096ac [ID=0]


Total amount of phi nodes to update: 0
0x7e0230c     Made Modification 'X86 DAG->DAG Instruction Selection' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e09398       Preserved Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Branch Probability Analysis'
 -*- 'X86 DAG->DAG Instruction Selection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'X86 DAG->DAG Instruction Selection' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'X86 PIC Global Base Reg Initialization' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0add8       Required Analyses: Uninitialized Pass
0x7e0add8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 PIC Global Base Reg Initialization' is not preserving 'X86 DAG->DAG Instruction Selection'
 -*- 'X86 PIC Global Base Reg Initialization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'X86 PIC Global Base Reg Initialization' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Expand ISel Pseudo-instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0b0a8       Required Analyses: Uninitialized Pass
0x7e0b0a8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Expand ISel Pseudo-instructions' is not preserving 'X86 PIC Global Base Reg Initialization'
 -*- 'Expand ISel Pseudo-instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Expand ISel Pseudo-instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0b378       Required Analyses: Uninitialized Pass
0x7e0b378       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Optimize machine instruction PHIs' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0b6c0       Required Analyses: Uninitialized Pass
0x7e0b6c0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Optimize machine instruction PHIs' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Optimize machine instruction PHIs' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0bcc0       Required Analyses: Uninitialized Pass
0x7e0bcc0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Slot index numbering' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0c0c8       Required Analyses: Uninitialized Pass
# Machine code for function __dtor__ZN5mollyL12molly_globalE: SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET

# End machine code for function __dtor__ZN5mollyL12molly_globalE.

0x7e0c0c8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Merge disjoint stack slots' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0b998       Required Analyses: MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
********** Stack Coloring **********
********** Function: __dtor__ZN5mollyL12molly_globalE
0x7e0b998       Preserved Analyses: MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Merge disjoint stack slots' is not preserving 'Slot index numbering'
 -*- 'Merge disjoint stack slots' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Merge disjoint stack slots' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Slot index numbering' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Local Stack Slot Allocation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0c508       Required Analyses: Uninitialized Pass
0x7e0230c     Made Modification 'Local Stack Slot Allocation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0c508       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Local Stack Slot Allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Local Stack Slot Allocation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Remove dead machine instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0c870       Required Analyses: Uninitialized Pass
0x7e0c870       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Remove dead machine instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove dead machine instructions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0d500       Required Analyses: Uninitialized Pass
0x7e0d500       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0d260       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e0d260       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0cb58       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Pre-regalloc Machine LICM: __dtor__ZN5mollyL12molly_globalE ********
0x7e0cb58       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Machine Common Subexpression Elimination' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0da38       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction
Entering: entry
Exiting: entry
0x7e0da38       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, Machine Natural Loop Construction, MachineDominator Tree Construction
 -*- 'Machine Common Subexpression Elimination' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Common Subexpression Elimination' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Machine code sinking' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0df00       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction, Machine Natural Loop Construction
******** Machine Sinking ********
0x7e0df00       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, MachineDominator Tree Construction, Machine Natural Loop Construction
 -*- 'Machine code sinking' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine code sinking' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Peephole Optimizations' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7dfbb10       Required Analyses: Uninitialized Pass
********** PEEPHOLE OPTIMIZER **********
********** Function: __dtor__ZN5mollyL12molly_globalE
0x7dfbb10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Peephole Optimizations' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Peephole Optimizations' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Process Implicit Definitions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e12fc0       Required Analyses: Uninitialized Pass
********** PROCESS IMPLICIT DEFS **********
********** Function: __dtor__ZN5mollyL12molly_globalE
0x7e12fc0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Process Implicit Definitions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Process Implicit Definitions' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Remove unreachable machine basic blocks' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e13678       Required Analyses: Uninitialized Pass
0x7e13678       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Variable Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e13340       Required Analyses: Remove unreachable machine basic blocks, Uninitialized Pass
0x7e13340       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Variable Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable machine basic blocks' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Eliminate PHI nodes for register allocation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e139e8       Required Analyses: Uninitialized Pass
0x7e139e8       Preserved Analyses: Live Variable Analysis, Slot index numbering, Live Interval Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Eliminate PHI nodes for register allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Eliminate PHI nodes for register allocation' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Two-Address instruction pass' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e13d10       Required Analyses: No Alias Analysis (always returns 'may' alias), Uninitialized Pass
********** REWRITING TWO-ADDR INSTRS **********
********** Function: __dtor__ZN5mollyL12molly_globalE
0x7e13d10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Variable Analysis, Slot index numbering, Live Interval Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Two-Address instruction pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Two-Address instruction pass' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Slot index numbering' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e14a38       Required Analyses: Uninitialized Pass
# Machine code for function __dtor__ZN5mollyL12molly_globalE: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET

# End machine code for function __dtor__ZN5mollyL12molly_globalE.

0x7e14a38       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Interval Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e146f0       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Variable Analysis, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
Computing live-in reg-units in ABI blocks.
Created 0 new intervals.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function __dtor__ZN5mollyL12molly_globalE: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET

# End machine code for function __dtor__ZN5mollyL12molly_globalE.

0x7e0230c     Made Modification 'Live Interval Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e146f0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Variable Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Interval Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Live Variable Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Simple Register Coalescing' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e14070       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** SIMPLE REGISTER COALESCING **********
********** Function: __dtor__ZN5mollyL12molly_globalE
********** JOINING INTERVALS ***********
entry:
Trying to inflate 0 regs.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function __dtor__ZN5mollyL12molly_globalE: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET

# End machine code for function __dtor__ZN5mollyL12molly_globalE.

0x7e0230c     Made Modification 'Simple Register Coalescing' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e14070       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Interval Analysis, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Simple Register Coalescing' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Simple Register Coalescing' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Debug Variable Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e151a0       Required Analyses: MachineDominator Tree Construction, Live Interval Analysis, Uninitialized Pass
********** COMPUTING LIVE DEBUG VARIABLES: __dtor__ZN5mollyL12molly_globalE **********
********** DEBUG VARIABLES **********
0x7e151a0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Stack Slot Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e15478       Required Analyses: Slot index numbering, Uninitialized Pass
0x7e15478       Preserved Analyses: Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Calculate spill weights' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e15918       Required Analyses: Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Compute Spill Weights **********
********** Function: __dtor__ZN5mollyL12molly_globalE
0x7e15918       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Virtual Register Map' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e15be8       Required Analyses: Uninitialized Pass
0x7e15be8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Register Matrix' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e15fe8       Required Analyses: Live Interval Analysis, Virtual Register Map, Uninitialized Pass
0x7e15fe8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e16318       Required Analyses: Uninitialized Pass
0x7e16318       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Spill Code Placement Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e166d8       Required Analyses: Bundle Machine CFG Edges, Machine Natural Loop Construction, Uninitialized Pass
0x7e166d8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Greedy Register Allocator' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0e9b8       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Calculate spill weights, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Bundle Machine CFG Edges, Spill Code Placement Analysis, Uninitialized Pass
********** GREEDY REGISTER ALLOCATION **********
********** Function: __dtor__ZN5mollyL12molly_globalE
0x7e0230c     Made Modification 'Greedy Register Allocator' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0e9b8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Greedy Register Allocator' is not preserving 'Calculate spill weights'
 -*- 'Greedy Register Allocator' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Calculate spill weights' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Live Register Matrix' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Spill Code Placement Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Greedy Register Allocator' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Virtual Register Rewriter' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e16ac8       Required Analyses: Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Virtual Register Map, Uninitialized Pass
********** REWRITE VIRTUAL REGISTERS **********
********** Function: __dtor__ZN5mollyL12molly_globalE
********** REGISTER MAP **********

0B	BB#0: derived from LLVM BB %entry
16B		RET
> RET
********** EMITTING LIVE DEBUG VARIABLES **********
0x7e0230c     Made Modification 'Virtual Register Rewriter' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e16ac8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Live Stack Slot Analysis, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Virtual Register Rewriter' is not preserving 'Greedy Register Allocator'
 -- 'Virtual Register Rewriter' is not preserving 'Virtual Register Map'
 -- 'Virtual Register Rewriter' is not preserving 'Live Interval Analysis'
 -- 'Virtual Register Rewriter' is not preserving 'Debug Variable Analysis'
 -*- 'Virtual Register Rewriter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Virtual Register Map' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Virtual Register Rewriter' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Debug Variable Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Live Interval Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Stack Slot Coloring' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e16db8       Required Analyses: Slot index numbering, Live Stack Slot Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Stack Slot Coloring **********
********** Function: __dtor__ZN5mollyL12molly_globalE
0x7e16db8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Stack Slot Coloring' is not preserving 'Live Stack Slot Analysis'
 -*- 'Stack Slot Coloring' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Slot index numbering' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Live Stack Slot Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Stack Slot Coloring' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e17640       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Post-regalloc Machine LICM: __dtor__ZN5mollyL12molly_globalE ********
0x7e17640       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e18120       Required Analyses: Uninitialized Pass
0x7e18120       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'X86 FP Stackifier' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e17de0       Required Analyses: Bundle Machine CFG Edges, Uninitialized Pass
0x7e17de0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 FP Stackifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'X86 FP Stackifier' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e18578       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e0230c     Made Modification 'Prologue/Epilogue Insertion & Frame Finalization' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e18578       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Prologue/Epilogue Insertion & Frame Finalization' is not preserving 'X86 FP Stackifier'
 -*- 'Prologue/Epilogue Insertion & Frame Finalization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Control Flow Optimizer' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e18910       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e18910       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Control Flow Optimizer' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Control Flow Optimizer' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e18be0       Required Analyses: Uninitialized Pass
0x7e18be0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Machine Copy Propagation Pass' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e18f28       Required Analyses: Uninitialized Pass
0x7e18f28       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Copy Propagation Pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Copy Propagation Pass' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Post-RA pseudo instruction expansion pass' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e19208       Required Analyses: Uninitialized Pass
Machine Function
********** EXPANDING POST-RA PSEUDO INSTRS **********
********** Function: __dtor__ZN5mollyL12molly_globalE
0x7e19208       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post-RA pseudo instruction expansion pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post-RA pseudo instruction expansion pass' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e19750       Required Analyses: Uninitialized Pass
0x7e19750       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e19b58       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e19b58       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Post RA top-down list latency scheduler' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e194e0       Required Analyses: No Alias Analysis (always returns 'may' alias), Target Pass Configuration, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass
0x7e194e0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post RA top-down list latency scheduler' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post RA top-down list latency scheduler' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Analyze Machine Code For Garbage Collection' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0de80       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e0de80       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Analyze Machine Code For Garbage Collection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Analyze Machine Code For Garbage Collection' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Machine Block Frequency Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e1a7b8       Required Analyses: Machine Branch Probability Analysis, Uninitialized Pass
RPO[BB#0 derived from LLVM BB entry] = 1
POT: BB#0 derived from LLVM BB entry
doLoop(BB#0 derived from LLVM BB entry, BB#0 derived from LLVM BB entry)
doBlock(BB#0 derived from LLVM BB entry)
Frequency(BB#0 derived from LLVM BB entry) = 0
Frequency(BB#0 derived from LLVM BB entry) = 1024
0x7e1a7b8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Branch Probability Basic Block Placement' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e1a270       Required Analyses: Machine Branch Probability Analysis, Machine Block Frequency Analysis, Machine Natural Loop Construction, Uninitialized Pass
0x7e1a270       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Natural Loop Construction'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Block Frequency Analysis'
 -*- 'Branch Probability Basic Block Placement' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Basic Block Placement' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Machine Block Frequency Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Execution dependency fix' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e1abf8       Required Analyses: Uninitialized Pass
********** FIX EXECUTION DEPENDENCIES: VR128 **********
0x7e1abf8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Execution dependency fix' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Execution dependency fix' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'X86 Assembly / Object Emitter' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e1b218       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e1b218       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 Assembly / Object Emitter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Function Analysis' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c      Freeing Pass 'X86 Assembly / Object Emitter' on Function '__dtor__ZN5mollyL12molly_globalE'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function 'main'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function 'main'...
0x7e0230c     Executing Pass 'Module Verifier' on Function 'main'...
0x7e01d48       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function 'main'...
0x7e0230c      Freeing Pass 'Module Verifier' on Function 'main'...
0x7e0230c     Executing Pass 'Natural Loop Information' on Function 'main'...
0x7e035e8       Required Analyses: Dominator Tree Construction
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function 'main'...
0x7e03b70       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function 'main'...
0x7e0230c     Executing Pass 'Scalar Evolution Analysis' on Function 'main'...
0x7e04230       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function 'main'...
0x7e049e0       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Scalar Evolution Analysis' on Function 'main'...
0x7e0230c      Freeing Pass 'X86 Target Transform Info' on Function 'main'...
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function 'main'...
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function 'main'...
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function 'main'...
0x7e0230c     Executing Pass 'Lower Garbage Collection Instructions' on Function 'main'...
0x7e05138       Required Analyses: Create Garbage Collector Module Metadata
0x7e05138       Preserved Analyses: Dominator Tree Construction
 -- 'Lower Garbage Collection Instructions' is not preserving 'Machine Function Analysis'
 -- 'Lower Garbage Collection Instructions' is not preserving 'X86 Assembly / Object Emitter'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Loop Pass Manager'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Execution dependency fix'
 -*- 'Lower Garbage Collection Instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Lower Garbage Collection Instructions' on Function 'main'...
0x7e0230c     Executing Pass 'Remove unreachable blocks from the CFG' on Function 'main'...
0x7e05758       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'Remove unreachable blocks from the CFG' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable blocks from the CFG' on Function 'main'...
0x7e0230c     Executing Pass 'CodeGen Prepare' on Function 'main'...
0x7e05a28       Required Analyses: Target Library Information
0x7e05a28       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'CodeGen Prepare' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'CodeGen Prepare' on Function 'main'...
0x7e0230c     Executing Pass 'Exception handling preparation' on Function 'main'...
 -*- 'Exception handling preparation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Exception handling preparation' on Function 'main'...
0x7e0230c     Executing Pass 'Insert stack protectors' on Function 'main'...
0x7deeac0       Preserved Analyses: Dominator Tree Construction
 -- 'Insert stack protectors' is not preserving 'Exception handling preparation'
 -*- 'Insert stack protectors' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Insert stack protectors' on Function 'main'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function 'main'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function 'main'...
0x7e0230c     Executing Pass 'Module Verifier' on Function 'main'...
0x7deedf8       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Module Verifier' on Function 'main'...
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function 'main'...
0x7e0230c     Executing Pass 'Machine Function Analysis' on Function 'main'...
0x7e090b8       Required Analyses: Machine Module Information
0x7e0230c     Executing Pass 'Natural Loop Information' on Function 'main'...
0x7e0a8b0       Required Analyses: Dominator Tree Construction
 -*- 'Natural Loop Information' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function 'main'...
0x7e0230c     Executing Pass 'Branch Probability Analysis' on Function 'main'...
0x7e0a608       Required Analyses: Natural Loop Information
Computing probabilities for entry
 -*- 'Branch Probability Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function 'main'...
0x7e0230c     Executing Pass 'X86 DAG->DAG Instruction Selection' on Function 'main'...
0x7e09398       Required Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Target Library Information, Branch Probability Analysis, Uninitialized Pass



=== main
Initial selection DAG: BB#0 'main:entry'
SelectionDAG has 11 nodes:
  0x7e096ac: ch = EntryToken

  0x7e30e48: i32 = undef

    0x7e096ac: <multiple use>
    0x7e30ed0: i32 = FrameIndex<-1>

    0x7e30e48: <multiple use>
  0x7e30f58: i32,ch = load 0x7e096ac, 0x7e30ed0, 0x7e30e48<LD4[FixedStack-1]>

    0x7e096ac: <multiple use>
    0x7e30fe0: i32 = FrameIndex<-2>

    0x7e30e48: <multiple use>
  0x7e31068: i32,ch = load 0x7e096ac, 0x7e30fe0, 0x7e30e48<LD4[FixedStack-2]>

  0x7e31200: i32 = Register %EAX

    0x7e096ac: <multiple use>
    0x7e31200: <multiple use>
    0x7e310f0: i32 = Constant<0>

  0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0

    0x7e31288: <multiple use>
    0x7e31178: i16 = TargetConstant<0>

    0x7e31200: <multiple use>
    0x7e31288: <multiple use>
  0x7e31310: ch = X86ISD::RET_FLAG 0x7e31288, 0x7e31178, 0x7e31200, 0x7e31288:1


Optimized lowered selection DAG: BB#0 'main:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX

    0x7e096ac: ch = EntryToken

    0x7e31200: <multiple use>
    0x7e310f0: i32 = Constant<0>

  0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0

    0x7e31288: <multiple use>
    0x7e31178: i16 = TargetConstant<0>

    0x7e31200: <multiple use>
    0x7e31288: <multiple use>
  0x7e31310: ch = X86ISD::RET_FLAG 0x7e31288, 0x7e31178, 0x7e31200, 0x7e31288:1


Legally typed node: 0x7e31200: i32 = Register %EAX [ID=0]

Legally typed node: 0x7e31178: i16 = TargetConstant<0> [ID=0]

Legally typed node: 0x7e310f0: i32 = Constant<0> [ID=0]

Legally typed node: 0x7e096ac: ch = EntryToken [ID=0]

Legally typed node: 0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=0]

Legally typed node: 0x7e31310: ch = X86ISD::RET_FLAG 0x7e31288, 0x7e31178, 0x7e31200, 0x7e31288:1 [ID=0]

Legally typed node: 0x5e0ce94: ch = handlenode 0x7e31310 [ID=0]

Type-legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX [ID=-3]

    0x7e096ac: ch = EntryToken [ID=-3]

    0x7e31200: <multiple use>
    0x7e310f0: i32 = Constant<0> [ID=-3]

  0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=-3]

    0x7e31288: <multiple use>
    0x7e31178: i16 = TargetConstant<0> [ID=-3]

    0x7e31200: <multiple use>
    0x7e31288: <multiple use>
  0x7e31310: ch = X86ISD::RET_FLAG 0x7e31288, 0x7e31178, 0x7e31200, 0x7e31288:1 [ID=-3]


Legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX [ID=3]

    0x7e096ac: ch = EntryToken [ID=0]

    0x7e31200: <multiple use>
    0x7e310f0: i32 = Constant<0> [ID=1]

  0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=4]

    0x7e31288: <multiple use>
    0x7e31178: i16 = TargetConstant<0> [ID=2]

    0x7e31200: <multiple use>
    0x7e31288: <multiple use>
  0x7e31310: ch = X86ISD::RET_FLAG 0x7e31288, 0x7e31178, 0x7e31200, 0x7e31288:1 [ID=5]


Optimized legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX [ID=3]

    0x7e096ac: ch = EntryToken [ID=0]

    0x7e31200: <multiple use>
    0x7e310f0: i32 = Constant<0> [ID=1]

  0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=4]

    0x7e31288: <multiple use>
    0x7e31178: i16 = TargetConstant<0> [ID=2]

    0x7e31200: <multiple use>
    0x7e31288: <multiple use>
  0x7e31310: ch = X86ISD::RET_FLAG 0x7e31288, 0x7e31178, 0x7e31200, 0x7e31288:1 [ID=5]


===== Instruction selection begins: BB#0 'entry'
Selecting: 0x7e31310: ch = X86ISD::RET_FLAG 0x7e31288, 0x7e31178, 0x7e31200, 0x7e31288:1 [ID=5]

ISEL: Starting pattern match on root node: 0x7e31310: ch = X86ISD::RET_FLAG 0x7e31288, 0x7e31178, 0x7e31200, 0x7e31288:1 [ID=5]

  Initial Opcode index to 80290
  Morphed node: 0x7e31310: ch = RET 0x7e31200, 0x7e31288, 0x7e31288:1

ISEL: Match complete!
=> 0x7e31310: ch = RET 0x7e31200, 0x7e31288, 0x7e31288:1

Selecting: 0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=4]

=> 0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0

Selecting: 0x7e31200: i32 = Register %EAX [ID=3]

=> 0x7e31200: i32 = Register %EAX

Selecting: 0x7e310f0: i32 = Constant<0> [ID=1]

ISEL: Starting pattern match on root node: 0x7e310f0: i32 = Constant<0> [ID=1]

  Initial Opcode index to 81783
  TypeSwitch[i32] from 81787 to 81820
  Morphed node: 0x7e310f0: i32,i32 = MOV32r0

ISEL: Match complete!
=> 0x7e310f0: i32,i32 = MOV32r0

Selecting: 0x7e096ac: ch = EntryToken [ID=0]

=> 0x7e096ac: ch = EntryToken

===== Instruction selection ends:
Selected selection DAG: BB#0 'main:entry'
SelectionDAG has 5 nodes:
  0x7e31200: i32 = Register %EAX

    0x7e096ac: ch = EntryToken

    0x7e31200: <multiple use>
    0x7e310f0: i32,i32 = MOV32r0

  0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0

    0x7e31200: <multiple use>
    0x7e31288: <multiple use>
    0x7e31288: <multiple use>
  0x7e31310: ch = RET 0x7e31200, 0x7e31288, 0x7e31288:1


********** List Scheduling BB#0 'entry' **********
SU(0): 0x7e31310: ch = RET 0x7e31200, 0x7e31288, 0x7e31288:1 [ID=0]

    0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(1): Latency=1

SU(1): 0x7e310f0: i32,i32 = MOV32r0 [ID=1]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(0): Latency=1


Examining Available:
Height 0: SU(0): 0x7e31310: ch = RET 0x7e31200, 0x7e31288, 0x7e31288:1 [ID=0]

    0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=0]


*** Scheduling [0]: SU(0): 0x7e31310: ch = RET 0x7e31200, 0x7e31288, 0x7e31288:1 [ID=0]

    0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=0]


Examining Available:
Height 1: SU(1): 0x7e310f0: i32,i32 = MOV32r0 [ID=1]


*** Scheduling [1]: SU(1): 0x7e310f0: i32,i32 = MOV32r0 [ID=1]

*** Final schedule ***
SU(1): 0x7e310f0: i32,i32 = MOV32r0 [ID=1]

SU(0): 0x7e31310: ch = RET 0x7e31200, 0x7e31288, 0x7e31288:1 [ID=0]

    0x7e31288: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e310f0 [ID=0]


Total amount of phi nodes to update: 0
0x7e0230c     Made Modification 'X86 DAG->DAG Instruction Selection' on Function 'main'...
0x7e09398       Preserved Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Branch Probability Analysis'
 -*- 'X86 DAG->DAG Instruction Selection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Analysis' on Function 'main'...
0x7e0230c      Freeing Pass 'X86 DAG->DAG Instruction Selection' on Function 'main'...
0x7e0230c     Executing Pass 'X86 PIC Global Base Reg Initialization' on Function 'main'...
0x7e0add8       Required Analyses: Uninitialized Pass
0x7e0add8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 PIC Global Base Reg Initialization' is not preserving 'X86 DAG->DAG Instruction Selection'
 -*- 'X86 PIC Global Base Reg Initialization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'X86 PIC Global Base Reg Initialization' on Function 'main'...
0x7e0230c     Executing Pass 'Expand ISel Pseudo-instructions' on Function 'main'...
0x7e0b0a8       Required Analyses: Uninitialized Pass
0x7e0b0a8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Expand ISel Pseudo-instructions' is not preserving 'X86 PIC Global Base Reg Initialization'
 -*- 'Expand ISel Pseudo-instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Expand ISel Pseudo-instructions' on Function 'main'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function 'main'...
0x7e0b378       Required Analyses: Uninitialized Pass
0x7e0b378       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function 'main'...
0x7e0230c     Executing Pass 'Optimize machine instruction PHIs' on Function 'main'...
0x7e0b6c0       Required Analyses: Uninitialized Pass
0x7e0b6c0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Optimize machine instruction PHIs' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Optimize machine instruction PHIs' on Function 'main'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function 'main'...
0x7e0bcc0       Required Analyses: Uninitialized Pass
0x7e0bcc0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Slot index numbering' on Function 'main'...
0x7e0c0c8       Required Analyses: Uninitialized Pass
# Machine code for function main: SSA
Frame Objects:
  fi#-2: size=4, align=4, fixed, at location [SP+8]
  fi#-1: size=4, align=4, fixed, at location [SP+4]

0B	BB#0: derived from LLVM BB %entry
16B		CALLpcrel32 <es:__main>, %ESP<imp-use>
32B		%vreg0<def> = MOV32r0 %EFLAGS<imp-def,dead>; GR32:%vreg0
48B		%EAX<def> = COPY %vreg0; GR32:%vreg0
64B		RET %EAX

# End machine code for function main.

0x7e0c0c8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Merge disjoint stack slots' on Function 'main'...
0x7e0b998       Required Analyses: MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
********** Stack Coloring **********
********** Function: main
0x7e0b998       Preserved Analyses: MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Merge disjoint stack slots' is not preserving 'Slot index numbering'
 -*- 'Merge disjoint stack slots' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function 'main'...
0x7e0230c      Freeing Pass 'Merge disjoint stack slots' on Function 'main'...
0x7e0230c      Freeing Pass 'Slot index numbering' on Function 'main'...
0x7e0230c     Executing Pass 'Local Stack Slot Allocation' on Function 'main'...
0x7e0c508       Required Analyses: Uninitialized Pass
0x7e0230c     Made Modification 'Local Stack Slot Allocation' on Function 'main'...
0x7e0c508       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Local Stack Slot Allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Local Stack Slot Allocation' on Function 'main'...
0x7e0230c     Executing Pass 'Remove dead machine instructions' on Function 'main'...
0x7e0c870       Required Analyses: Uninitialized Pass
0x7e0c870       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Remove dead machine instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove dead machine instructions' on Function 'main'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function 'main'...
0x7e0d500       Required Analyses: Uninitialized Pass
0x7e0d500       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function 'main'...
0x7e0d260       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e0d260       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function 'main'...
0x7e0cb58       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Pre-regalloc Machine LICM: main ********
0x7e0cb58       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function 'main'...
0x7e0230c     Executing Pass 'Machine Common Subexpression Elimination' on Function 'main'...
0x7e0da38       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction
Entering: entry
Exiting: entry
0x7e0da38       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, Machine Natural Loop Construction, MachineDominator Tree Construction
 -*- 'Machine Common Subexpression Elimination' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Common Subexpression Elimination' on Function 'main'...
0x7e0230c     Executing Pass 'Machine code sinking' on Function 'main'...
0x7e0df00       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction, Machine Natural Loop Construction
******** Machine Sinking ********
0x7e0df00       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, MachineDominator Tree Construction, Machine Natural Loop Construction
 -*- 'Machine code sinking' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine code sinking' on Function 'main'...
0x7e0230c     Executing Pass 'Peephole Optimizations' on Function 'main'...
0x7dfbb10       Required Analyses: Uninitialized Pass
********** PEEPHOLE OPTIMIZER **********
********** Function: main
0x7dfbb10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Peephole Optimizations' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Peephole Optimizations' on Function 'main'...
0x7e0230c     Executing Pass 'Process Implicit Definitions' on Function 'main'...
0x7e12fc0       Required Analyses: Uninitialized Pass
********** PROCESS IMPLICIT DEFS **********
********** Function: main
0x7e12fc0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Process Implicit Definitions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Process Implicit Definitions' on Function 'main'...
0x7e0230c     Executing Pass 'Remove unreachable machine basic blocks' on Function 'main'...
0x7e13678       Required Analyses: Uninitialized Pass
0x7e13678       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Variable Analysis' on Function 'main'...
0x7e13340       Required Analyses: Remove unreachable machine basic blocks, Uninitialized Pass
0x7e13340       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Variable Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable machine basic blocks' on Function 'main'...
0x7e0230c     Executing Pass 'Eliminate PHI nodes for register allocation' on Function 'main'...
0x7e139e8       Required Analyses: Uninitialized Pass
0x7e139e8       Preserved Analyses: Live Variable Analysis, Slot index numbering, Live Interval Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Eliminate PHI nodes for register allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Eliminate PHI nodes for register allocation' on Function 'main'...
0x7e0230c     Executing Pass 'Two-Address instruction pass' on Function 'main'...
0x7e13d10       Required Analyses: No Alias Analysis (always returns 'may' alias), Uninitialized Pass
********** REWRITING TWO-ADDR INSTRS **********
********** Function: main
0x7e13d10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Variable Analysis, Slot index numbering, Live Interval Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Two-Address instruction pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Two-Address instruction pass' on Function 'main'...
0x7e0230c     Executing Pass 'Slot index numbering' on Function 'main'...
0x7e14a38       Required Analyses: Uninitialized Pass
# Machine code for function main: Post SSA
Frame Objects:
  fi#-2: size=4, align=4, fixed, at location [SP+8]
  fi#-1: size=4, align=4, fixed, at location [SP+4]

0B	BB#0: derived from LLVM BB %entry
16B		CALLpcrel32 <es:__main>, %ESP<imp-use>
32B		%vreg0<def> = MOV32r0 %EFLAGS<imp-def,dead>; GR32:%vreg0
48B		%EAX<def> = COPY %vreg0<kill>; GR32:%vreg0
64B		RET %EAX<kill>

# End machine code for function main.

0x7e14a38       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Interval Analysis' on Function 'main'...
0x7e146f0       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Variable Analysis, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
Computing live-in reg-units in ABI blocks.
Created 0 new intervals.
********** INTERVALS **********
%vreg0 = [32r,48r:0)  0@32r
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function main: Post SSA
Frame Objects:
  fi#-2: size=4, align=4, fixed, at location [SP+8]
  fi#-1: size=4, align=4, fixed, at location [SP+4]

0B	BB#0: derived from LLVM BB %entry
16B		CALLpcrel32 <es:__main>, %ESP<imp-use>
32B		%vreg0<def> = MOV32r0 %EFLAGS<imp-def,dead>; GR32:%vreg0
48B		%EAX<def> = COPY %vreg0; GR32:%vreg0
64B		RET %EAX<kill>

# End machine code for function main.

0x7e0230c     Made Modification 'Live Interval Analysis' on Function 'main'...
0x7e146f0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Variable Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Interval Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Live Variable Analysis' on Function 'main'...
0x7e0230c     Executing Pass 'Simple Register Coalescing' on Function 'main'...
0x7e14070       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** SIMPLE REGISTER COALESCING **********
********** Function: main
********** JOINING INTERVALS ***********
entry:
48B	%EAX<def> = COPY %vreg0; GR32:%vreg0
	Considering merging %vreg0 with %EAX
	Can only merge into reserved registers.
Remat: %EAX<def> = MOV32r0 %EFLAGS<imp-def,dead>
Shrink: [32r,48r:0)  0@32r
All defs dead: 32r	%vreg0<def,dead> = MOV32r0 %EFLAGS<imp-def,dead>; GR32:%vreg0
Shrunk: [32r,32d:0)  0@32r
Deleting dead def 32r	%vreg0<def,dead> = MOV32r0 %EFLAGS<imp-def,dead>; GR32:%vreg0
Trying to inflate 0 regs.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function main: Post SSA
Frame Objects:
  fi#-2: size=4, align=4, fixed, at location [SP+8]
  fi#-1: size=4, align=4, fixed, at location [SP+4]

0B	BB#0: derived from LLVM BB %entry
16B		CALLpcrel32 <es:__main>, %ESP<imp-use>
48B		%EAX<def> = MOV32r0 %EFLAGS<imp-def,dead>
64B		RET %EAX<kill>

# End machine code for function main.

0x7e0230c     Made Modification 'Simple Register Coalescing' on Function 'main'...
0x7e14070       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Interval Analysis, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Simple Register Coalescing' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Simple Register Coalescing' on Function 'main'...
0x7e0230c     Executing Pass 'Debug Variable Analysis' on Function 'main'...
0x7e151a0       Required Analyses: MachineDominator Tree Construction, Live Interval Analysis, Uninitialized Pass
********** COMPUTING LIVE DEBUG VARIABLES: main **********
********** DEBUG VARIABLES **********
0x7e151a0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Stack Slot Analysis' on Function 'main'...
0x7e15478       Required Analyses: Slot index numbering, Uninitialized Pass
0x7e15478       Preserved Analyses: Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Calculate spill weights' on Function 'main'...
0x7e15918       Required Analyses: Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Compute Spill Weights **********
********** Function: main
0x7e15918       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Virtual Register Map' on Function 'main'...
0x7e15be8       Required Analyses: Uninitialized Pass
0x7e15be8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Register Matrix' on Function 'main'...
0x7e15fe8       Required Analyses: Live Interval Analysis, Virtual Register Map, Uninitialized Pass
0x7e15fe8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function 'main'...
0x7e16318       Required Analyses: Uninitialized Pass
0x7e16318       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Spill Code Placement Analysis' on Function 'main'...
0x7e166d8       Required Analyses: Bundle Machine CFG Edges, Machine Natural Loop Construction, Uninitialized Pass
0x7e166d8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Greedy Register Allocator' on Function 'main'...
0x7e0e9b8       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Calculate spill weights, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Bundle Machine CFG Edges, Spill Code Placement Analysis, Uninitialized Pass
********** GREEDY REGISTER ALLOCATION **********
********** Function: main
0x7e0230c     Made Modification 'Greedy Register Allocator' on Function 'main'...
0x7e0e9b8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Greedy Register Allocator' is not preserving 'Calculate spill weights'
 -*- 'Greedy Register Allocator' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function 'main'...
0x7e0230c      Freeing Pass 'Calculate spill weights' on Function 'main'...
0x7e0230c      Freeing Pass 'Live Register Matrix' on Function 'main'...
0x7e0230c      Freeing Pass 'Spill Code Placement Analysis' on Function 'main'...
0x7e0230c      Freeing Pass 'Greedy Register Allocator' on Function 'main'...
0x7e0230c     Executing Pass 'Virtual Register Rewriter' on Function 'main'...
0x7e16ac8       Required Analyses: Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Virtual Register Map, Uninitialized Pass
********** REWRITE VIRTUAL REGISTERS **********
********** Function: main
********** REGISTER MAP **********

0B	BB#0: derived from LLVM BB %entry
16B		CALLpcrel32 <es:__main>, %ESP<imp-use>
48B		%EAX<def> = MOV32r0 %EFLAGS<imp-def,dead>
64B		RET %EAX<kill>
> CALLpcrel32 <es:__main>, %ESP<imp-use>
> %EAX<def> = MOV32r0 %EFLAGS<imp-def,dead>
> RET %EAX<kill>
********** EMITTING LIVE DEBUG VARIABLES **********
0x7e0230c     Made Modification 'Virtual Register Rewriter' on Function 'main'...
0x7e16ac8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Live Stack Slot Analysis, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Virtual Register Rewriter' is not preserving 'Greedy Register Allocator'
 -- 'Virtual Register Rewriter' is not preserving 'Virtual Register Map'
 -- 'Virtual Register Rewriter' is not preserving 'Live Interval Analysis'
 -- 'Virtual Register Rewriter' is not preserving 'Debug Variable Analysis'
 -*- 'Virtual Register Rewriter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Virtual Register Map' on Function 'main'...
0x7e0230c      Freeing Pass 'Virtual Register Rewriter' on Function 'main'...
0x7e0230c      Freeing Pass 'Debug Variable Analysis' on Function 'main'...
0x7e0230c      Freeing Pass 'Live Interval Analysis' on Function 'main'...
0x7e0230c     Executing Pass 'Stack Slot Coloring' on Function 'main'...
0x7e16db8       Required Analyses: Slot index numbering, Live Stack Slot Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Stack Slot Coloring **********
********** Function: main
0x7e16db8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Stack Slot Coloring' is not preserving 'Live Stack Slot Analysis'
 -*- 'Stack Slot Coloring' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Slot index numbering' on Function 'main'...
0x7e0230c      Freeing Pass 'Live Stack Slot Analysis' on Function 'main'...
0x7e0230c      Freeing Pass 'Stack Slot Coloring' on Function 'main'...
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function 'main'...
0x7e17640       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Post-regalloc Machine LICM: main ********
0x7e17640       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function 'main'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function 'main'...
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function 'main'...
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function 'main'...
0x7e18120       Required Analyses: Uninitialized Pass
0x7e18120       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'X86 FP Stackifier' on Function 'main'...
0x7e17de0       Required Analyses: Bundle Machine CFG Edges, Uninitialized Pass
0x7e17de0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 FP Stackifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function 'main'...
0x7e0230c      Freeing Pass 'X86 FP Stackifier' on Function 'main'...
0x7e0230c     Executing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function 'main'...
0x7e18578       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e0230c     Made Modification 'Prologue/Epilogue Insertion & Frame Finalization' on Function 'main'...
0x7e18578       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Prologue/Epilogue Insertion & Frame Finalization' is not preserving 'X86 FP Stackifier'
 -*- 'Prologue/Epilogue Insertion & Frame Finalization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function 'main'...
0x7e0230c     Executing Pass 'Control Flow Optimizer' on Function 'main'...
0x7e18910       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e18910       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Control Flow Optimizer' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Control Flow Optimizer' on Function 'main'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function 'main'...
0x7e18be0       Required Analyses: Uninitialized Pass
0x7e18be0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function 'main'...
0x7e0230c     Executing Pass 'Machine Copy Propagation Pass' on Function 'main'...
0x7e18f28       Required Analyses: Uninitialized Pass
0x7e18f28       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Copy Propagation Pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Copy Propagation Pass' on Function 'main'...
0x7e0230c     Executing Pass 'Post-RA pseudo instruction expansion pass' on Function 'main'...
0x7e19208       Required Analyses: Uninitialized Pass
Machine Function
********** EXPANDING POST-RA PSEUDO INSTRS **********
********** Function: main
0x7e19208       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post-RA pseudo instruction expansion pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post-RA pseudo instruction expansion pass' on Function 'main'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function 'main'...
0x7e19750       Required Analyses: Uninitialized Pass
0x7e19750       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function 'main'...
0x7e19b58       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e19b58       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Post RA top-down list latency scheduler' on Function 'main'...
0x7e194e0       Required Analyses: No Alias Analysis (always returns 'may' alias), Target Pass Configuration, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass
0x7e194e0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post RA top-down list latency scheduler' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post RA top-down list latency scheduler' on Function 'main'...
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function 'main'...
0x7e0230c     Executing Pass 'Analyze Machine Code For Garbage Collection' on Function 'main'...
0x7e0de80       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e0de80       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Analyze Machine Code For Garbage Collection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Analyze Machine Code For Garbage Collection' on Function 'main'...
0x7e0230c     Executing Pass 'Machine Block Frequency Analysis' on Function 'main'...
0x7e1a7b8       Required Analyses: Machine Branch Probability Analysis, Uninitialized Pass
RPO[BB#0 derived from LLVM BB entry] = 1
POT: BB#0 derived from LLVM BB entry
doLoop(BB#0 derived from LLVM BB entry, BB#0 derived from LLVM BB entry)
doBlock(BB#0 derived from LLVM BB entry)
Frequency(BB#0 derived from LLVM BB entry) = 0
Frequency(BB#0 derived from LLVM BB entry) = 1024
0x7e1a7b8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Branch Probability Basic Block Placement' on Function 'main'...
0x7e1a270       Required Analyses: Machine Branch Probability Analysis, Machine Block Frequency Analysis, Machine Natural Loop Construction, Uninitialized Pass
0x7e1a270       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Natural Loop Construction'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Block Frequency Analysis'
 -*- 'Branch Probability Basic Block Placement' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Basic Block Placement' on Function 'main'...
0x7e0230c      Freeing Pass 'Machine Block Frequency Analysis' on Function 'main'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function 'main'...
0x7e0230c     Executing Pass 'Execution dependency fix' on Function 'main'...
0x7e1abf8       Required Analyses: Uninitialized Pass
********** FIX EXECUTION DEPENDENCIES: VR128 **********
0x7e1abf8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Execution dependency fix' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Execution dependency fix' on Function 'main'...
0x7e0230c     Executing Pass 'X86 Assembly / Object Emitter' on Function 'main'...
0x7e1b218       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e1b218       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 Assembly / Object Emitter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Function Analysis' on Function 'main'...
0x7e0230c      Freeing Pass 'X86 Assembly / Object Emitter' on Function 'main'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Module Verifier' on Function '_Z7crash32v'...
0x7e01d48       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Module Verifier' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Natural Loop Information' on Function '_Z7crash32v'...
0x7e035e8       Required Analyses: Dominator Tree Construction
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7e03b70       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Scalar Evolution Analysis' on Function '_Z7crash32v'...
0x7e04230       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7e049e0       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Scalar Evolution Analysis' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'X86 Target Transform Info' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Lower Garbage Collection Instructions' on Function '_Z7crash32v'...
0x7e05138       Required Analyses: Create Garbage Collector Module Metadata
0x7e05138       Preserved Analyses: Dominator Tree Construction
 -- 'Lower Garbage Collection Instructions' is not preserving 'Machine Function Analysis'
 -- 'Lower Garbage Collection Instructions' is not preserving 'X86 Assembly / Object Emitter'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Loop Pass Manager'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Execution dependency fix'
 -*- 'Lower Garbage Collection Instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Lower Garbage Collection Instructions' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Remove unreachable blocks from the CFG' on Function '_Z7crash32v'...
0x7e05758       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'Remove unreachable blocks from the CFG' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable blocks from the CFG' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'CodeGen Prepare' on Function '_Z7crash32v'...
0x7e05a28       Required Analyses: Target Library Information
0x7e05a28       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'CodeGen Prepare' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'CodeGen Prepare' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Exception handling preparation' on Function '_Z7crash32v'...
 -*- 'Exception handling preparation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Exception handling preparation' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Insert stack protectors' on Function '_Z7crash32v'...
0x7deeac0       Preserved Analyses: Dominator Tree Construction
 -- 'Insert stack protectors' is not preserving 'Exception handling preparation'
 -*- 'Insert stack protectors' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Insert stack protectors' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Module Verifier' on Function '_Z7crash32v'...
0x7deedf8       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Module Verifier' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Machine Function Analysis' on Function '_Z7crash32v'...
0x7e090b8       Required Analyses: Machine Module Information
0x7e0230c     Executing Pass 'Natural Loop Information' on Function '_Z7crash32v'...
0x7e0a8b0       Required Analyses: Dominator Tree Construction
 -*- 'Natural Loop Information' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Branch Probability Analysis' on Function '_Z7crash32v'...
0x7e0a608       Required Analyses: Natural Loop Information
Computing probabilities for entry
 -*- 'Branch Probability Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'X86 DAG->DAG Instruction Selection' on Function '_Z7crash32v'...
0x7e09398       Required Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Target Library Information, Branch Probability Analysis, Uninitialized Pass



=== _Z7crash32v
Initial selection DAG: BB#0 '_Z7crash32v:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX

    0x7e096ac: ch = EntryToken

    0x7e31200: <multiple use>
    0x7e31310: i32 = undef

  0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310

    0x7e310f0: <multiple use>
    0x7e31288: i16 = TargetConstant<0>

    0x7e31200: <multiple use>
    0x7e310f0: <multiple use>
  0x7e31178: ch = X86ISD::RET_FLAG 0x7e310f0, 0x7e31288, 0x7e31200, 0x7e310f0:1


Optimized lowered selection DAG: BB#0 '_Z7crash32v:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX

    0x7e096ac: ch = EntryToken

    0x7e31200: <multiple use>
    0x7e31310: i32 = undef

  0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310

    0x7e310f0: <multiple use>
    0x7e31288: i16 = TargetConstant<0>

    0x7e31200: <multiple use>
    0x7e310f0: <multiple use>
  0x7e31178: ch = X86ISD::RET_FLAG 0x7e310f0, 0x7e31288, 0x7e31200, 0x7e310f0:1


Legally typed node: 0x7e31200: i32 = Register %EAX [ID=0]

Legally typed node: 0x7e31288: i16 = TargetConstant<0> [ID=0]

Legally typed node: 0x7e31310: i32 = undef [ID=0]

Legally typed node: 0x7e096ac: ch = EntryToken [ID=0]

Legally typed node: 0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=0]

Legally typed node: 0x7e31178: ch = X86ISD::RET_FLAG 0x7e310f0, 0x7e31288, 0x7e31200, 0x7e310f0:1 [ID=0]

Legally typed node: 0x5e0ce94: ch = handlenode 0x7e31178 [ID=0]

Type-legalized selection DAG: BB#0 '_Z7crash32v:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX [ID=-3]

    0x7e096ac: ch = EntryToken [ID=-3]

    0x7e31200: <multiple use>
    0x7e31310: i32 = undef [ID=-3]

  0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=-3]

    0x7e310f0: <multiple use>
    0x7e31288: i16 = TargetConstant<0> [ID=-3]

    0x7e31200: <multiple use>
    0x7e310f0: <multiple use>
  0x7e31178: ch = X86ISD::RET_FLAG 0x7e310f0, 0x7e31288, 0x7e31200, 0x7e310f0:1 [ID=-3]


Legalized selection DAG: BB#0 '_Z7crash32v:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX [ID=3]

    0x7e096ac: ch = EntryToken [ID=0]

    0x7e31200: <multiple use>
    0x7e31310: i32 = undef [ID=1]

  0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=4]

    0x7e310f0: <multiple use>
    0x7e31288: i16 = TargetConstant<0> [ID=2]

    0x7e31200: <multiple use>
    0x7e310f0: <multiple use>
  0x7e31178: ch = X86ISD::RET_FLAG 0x7e310f0, 0x7e31288, 0x7e31200, 0x7e310f0:1 [ID=5]


Optimized legalized selection DAG: BB#0 '_Z7crash32v:entry'
SelectionDAG has 6 nodes:
  0x7e31200: i32 = Register %EAX [ID=3]

    0x7e096ac: ch = EntryToken [ID=0]

    0x7e31200: <multiple use>
    0x7e31310: i32 = undef [ID=1]

  0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=4]

    0x7e310f0: <multiple use>
    0x7e31288: i16 = TargetConstant<0> [ID=2]

    0x7e31200: <multiple use>
    0x7e310f0: <multiple use>
  0x7e31178: ch = X86ISD::RET_FLAG 0x7e310f0, 0x7e31288, 0x7e31200, 0x7e310f0:1 [ID=5]


===== Instruction selection begins: BB#0 'entry'
Selecting: 0x7e31178: ch = X86ISD::RET_FLAG 0x7e310f0, 0x7e31288, 0x7e31200, 0x7e310f0:1 [ID=5]

ISEL: Starting pattern match on root node: 0x7e31178: ch = X86ISD::RET_FLAG 0x7e310f0, 0x7e31288, 0x7e31200, 0x7e310f0:1 [ID=5]

  Initial Opcode index to 80290
  Morphed node: 0x7e31178: ch = RET 0x7e31200, 0x7e310f0, 0x7e310f0:1

ISEL: Match complete!
=> 0x7e31178: ch = RET 0x7e31200, 0x7e310f0, 0x7e310f0:1

Selecting: 0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=4]

=> 0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310

Selecting: 0x7e31200: i32 = Register %EAX [ID=3]

=> 0x7e31200: i32 = Register %EAX

Selecting: 0x7e31310: i32 = undef [ID=1]

=> 0x7e31310: i32 = IMPLICIT_DEF

Selecting: 0x7e096ac: ch = EntryToken [ID=0]

=> 0x7e096ac: ch = EntryToken

===== Instruction selection ends:
Selected selection DAG: BB#0 '_Z7crash32v:entry'
SelectionDAG has 5 nodes:
  0x7e31200: i32 = Register %EAX

    0x7e096ac: ch = EntryToken

    0x7e31200: <multiple use>
    0x7e31310: i32 = IMPLICIT_DEF

  0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310

    0x7e31200: <multiple use>
    0x7e310f0: <multiple use>
    0x7e310f0: <multiple use>
  0x7e31178: ch = RET 0x7e31200, 0x7e310f0, 0x7e310f0:1


********** List Scheduling BB#0 'entry' **********
SU(0): 0x7e31178: ch = RET 0x7e31200, 0x7e310f0, 0x7e310f0:1 [ID=0]

    0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(1): Latency=1

SU(1): 0x7e31310: i32 = IMPLICIT_DEF [ID=1]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(0): Latency=1


Examining Available:
Height 0: SU(0): 0x7e31178: ch = RET 0x7e31200, 0x7e310f0, 0x7e310f0:1 [ID=0]

    0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=0]


*** Scheduling [0]: SU(0): 0x7e31178: ch = RET 0x7e31200, 0x7e310f0, 0x7e310f0:1 [ID=0]

    0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=0]


Examining Available:
Height 1: SU(1): 0x7e31310: i32 = IMPLICIT_DEF [ID=1]


*** Scheduling [1]: SU(1): 0x7e31310: i32 = IMPLICIT_DEF [ID=1]

*** Final schedule ***
SU(1): 0x7e31310: i32 = IMPLICIT_DEF [ID=1]

SU(0): 0x7e31178: ch = RET 0x7e31200, 0x7e310f0, 0x7e310f0:1 [ID=0]

    0x7e310f0: ch,glue = CopyToReg 0x7e096ac, 0x7e31200, 0x7e31310 [ID=0]


Total amount of phi nodes to update: 0
0x7e0230c     Made Modification 'X86 DAG->DAG Instruction Selection' on Function '_Z7crash32v'...
0x7e09398       Preserved Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Branch Probability Analysis'
 -*- 'X86 DAG->DAG Instruction Selection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Analysis' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'X86 DAG->DAG Instruction Selection' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'X86 PIC Global Base Reg Initialization' on Function '_Z7crash32v'...
0x7e0add8       Required Analyses: Uninitialized Pass
0x7e0add8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 PIC Global Base Reg Initialization' is not preserving 'X86 DAG->DAG Instruction Selection'
 -*- 'X86 PIC Global Base Reg Initialization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'X86 PIC Global Base Reg Initialization' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Expand ISel Pseudo-instructions' on Function '_Z7crash32v'...
0x7e0b0a8       Required Analyses: Uninitialized Pass
0x7e0b0a8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Expand ISel Pseudo-instructions' is not preserving 'X86 PIC Global Base Reg Initialization'
 -*- 'Expand ISel Pseudo-instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Expand ISel Pseudo-instructions' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function '_Z7crash32v'...
0x7e0b378       Required Analyses: Uninitialized Pass
0x7e0b378       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Optimize machine instruction PHIs' on Function '_Z7crash32v'...
0x7e0b6c0       Required Analyses: Uninitialized Pass
0x7e0b6c0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Optimize machine instruction PHIs' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Optimize machine instruction PHIs' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_Z7crash32v'...
0x7e0bcc0       Required Analyses: Uninitialized Pass
0x7e0bcc0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Slot index numbering' on Function '_Z7crash32v'...
0x7e0c0c8       Required Analyses: Uninitialized Pass
# Machine code for function _Z7crash32v: SSA

0B	BB#0: derived from LLVM BB %entry
16B		%vreg0<def> = IMPLICIT_DEF; GR32:%vreg0
32B		%EAX<def> = COPY %vreg0; GR32:%vreg0
48B		RET %EAX

# End machine code for function _Z7crash32v.

0x7e0c0c8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Merge disjoint stack slots' on Function '_Z7crash32v'...
0x7e0b998       Required Analyses: MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
********** Stack Coloring **********
********** Function: _Z7crash32v
0x7e0b998       Preserved Analyses: MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Merge disjoint stack slots' is not preserving 'Slot index numbering'
 -*- 'Merge disjoint stack slots' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Merge disjoint stack slots' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Slot index numbering' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Local Stack Slot Allocation' on Function '_Z7crash32v'...
0x7e0c508       Required Analyses: Uninitialized Pass
0x7e0230c     Made Modification 'Local Stack Slot Allocation' on Function '_Z7crash32v'...
0x7e0c508       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Local Stack Slot Allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Local Stack Slot Allocation' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Remove dead machine instructions' on Function '_Z7crash32v'...
0x7e0c870       Required Analyses: Uninitialized Pass
0x7e0c870       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Remove dead machine instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove dead machine instructions' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_Z7crash32v'...
0x7e0d500       Required Analyses: Uninitialized Pass
0x7e0d500       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function '_Z7crash32v'...
0x7e0d260       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e0d260       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function '_Z7crash32v'...
0x7e0cb58       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Pre-regalloc Machine LICM: _Z7crash32v ********
0x7e0cb58       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Machine Common Subexpression Elimination' on Function '_Z7crash32v'...
0x7e0da38       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction
Entering: entry
Exiting: entry
0x7e0da38       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, Machine Natural Loop Construction, MachineDominator Tree Construction
 -*- 'Machine Common Subexpression Elimination' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Common Subexpression Elimination' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Machine code sinking' on Function '_Z7crash32v'...
0x7e0df00       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction, Machine Natural Loop Construction
******** Machine Sinking ********
0x7e0df00       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, MachineDominator Tree Construction, Machine Natural Loop Construction
 -*- 'Machine code sinking' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine code sinking' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Peephole Optimizations' on Function '_Z7crash32v'...
0x7dfbb10       Required Analyses: Uninitialized Pass
********** PEEPHOLE OPTIMIZER **********
********** Function: _Z7crash32v
0x7dfbb10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Peephole Optimizations' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Peephole Optimizations' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Process Implicit Definitions' on Function '_Z7crash32v'...
0x7e12fc0       Required Analyses: Uninitialized Pass
********** PROCESS IMPLICIT DEFS **********
********** Function: _Z7crash32v
BB#0 has 1 implicit defs.
Processing %vreg0<def> = IMPLICIT_DEF; GR32:%vreg0
Converting to IMPLICIT_DEF: %EAX<def> = COPY %vreg0<undef>; GR32:%vreg0
Processing %EAX<def> = IMPLICIT_DEF %vreg0<undef>; GR32:%vreg0
Physreg user: RET %EAX<undef>
0x7e0230c     Made Modification 'Process Implicit Definitions' on Function '_Z7crash32v'...
0x7e12fc0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Process Implicit Definitions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Process Implicit Definitions' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Remove unreachable machine basic blocks' on Function '_Z7crash32v'...
0x7e13678       Required Analyses: Uninitialized Pass
0x7e13678       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Variable Analysis' on Function '_Z7crash32v'...
0x7e13340       Required Analyses: Remove unreachable machine basic blocks, Uninitialized Pass
0x7e13340       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Variable Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable machine basic blocks' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Eliminate PHI nodes for register allocation' on Function '_Z7crash32v'...
0x7e139e8       Required Analyses: Uninitialized Pass
0x7e139e8       Preserved Analyses: Live Variable Analysis, Slot index numbering, Live Interval Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Eliminate PHI nodes for register allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Eliminate PHI nodes for register allocation' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Two-Address instruction pass' on Function '_Z7crash32v'...
0x7e13d10       Required Analyses: No Alias Analysis (always returns 'may' alias), Uninitialized Pass
********** REWRITING TWO-ADDR INSTRS **********
********** Function: _Z7crash32v
0x7e13d10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Variable Analysis, Slot index numbering, Live Interval Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Two-Address instruction pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Two-Address instruction pass' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Slot index numbering' on Function '_Z7crash32v'...
0x7e14a38       Required Analyses: Uninitialized Pass
# Machine code for function _Z7crash32v: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET %EAX<undef>

# End machine code for function _Z7crash32v.

0x7e14a38       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Interval Analysis' on Function '_Z7crash32v'...
0x7e146f0       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Variable Analysis, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
Computing live-in reg-units in ABI blocks.
Created 0 new intervals.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function _Z7crash32v: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET %EAX<undef>

# End machine code for function _Z7crash32v.

0x7e0230c     Made Modification 'Live Interval Analysis' on Function '_Z7crash32v'...
0x7e146f0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Variable Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Interval Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Live Variable Analysis' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Simple Register Coalescing' on Function '_Z7crash32v'...
0x7e14070       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** SIMPLE REGISTER COALESCING **********
********** Function: _Z7crash32v
********** JOINING INTERVALS ***********
entry:
Trying to inflate 0 regs.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function _Z7crash32v: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET %EAX<undef>

# End machine code for function _Z7crash32v.

0x7e0230c     Made Modification 'Simple Register Coalescing' on Function '_Z7crash32v'...
0x7e14070       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Interval Analysis, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Simple Register Coalescing' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Simple Register Coalescing' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Debug Variable Analysis' on Function '_Z7crash32v'...
0x7e151a0       Required Analyses: MachineDominator Tree Construction, Live Interval Analysis, Uninitialized Pass
********** COMPUTING LIVE DEBUG VARIABLES: _Z7crash32v **********
********** DEBUG VARIABLES **********
0x7e151a0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Stack Slot Analysis' on Function '_Z7crash32v'...
0x7e15478       Required Analyses: Slot index numbering, Uninitialized Pass
0x7e15478       Preserved Analyses: Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Calculate spill weights' on Function '_Z7crash32v'...
0x7e15918       Required Analyses: Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Compute Spill Weights **********
********** Function: _Z7crash32v
0x7e15918       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Virtual Register Map' on Function '_Z7crash32v'...
0x7e15be8       Required Analyses: Uninitialized Pass
0x7e15be8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Register Matrix' on Function '_Z7crash32v'...
0x7e15fe8       Required Analyses: Live Interval Analysis, Virtual Register Map, Uninitialized Pass
0x7e15fe8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function '_Z7crash32v'...
0x7e16318       Required Analyses: Uninitialized Pass
0x7e16318       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Spill Code Placement Analysis' on Function '_Z7crash32v'...
0x7e166d8       Required Analyses: Bundle Machine CFG Edges, Machine Natural Loop Construction, Uninitialized Pass
0x7e166d8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Greedy Register Allocator' on Function '_Z7crash32v'...
0x7e0e9b8       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Calculate spill weights, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Bundle Machine CFG Edges, Spill Code Placement Analysis, Uninitialized Pass
********** GREEDY REGISTER ALLOCATION **********
********** Function: _Z7crash32v
0x7e0230c     Made Modification 'Greedy Register Allocator' on Function '_Z7crash32v'...
0x7e0e9b8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Greedy Register Allocator' is not preserving 'Calculate spill weights'
 -*- 'Greedy Register Allocator' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Calculate spill weights' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Live Register Matrix' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Spill Code Placement Analysis' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Greedy Register Allocator' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Virtual Register Rewriter' on Function '_Z7crash32v'...
0x7e16ac8       Required Analyses: Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Virtual Register Map, Uninitialized Pass
********** REWRITE VIRTUAL REGISTERS **********
********** Function: _Z7crash32v
********** REGISTER MAP **********

0B	BB#0: derived from LLVM BB %entry
16B		RET %EAX<undef>
> RET %EAX<undef>
********** EMITTING LIVE DEBUG VARIABLES **********
0x7e0230c     Made Modification 'Virtual Register Rewriter' on Function '_Z7crash32v'...
0x7e16ac8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Live Stack Slot Analysis, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Virtual Register Rewriter' is not preserving 'Greedy Register Allocator'
 -- 'Virtual Register Rewriter' is not preserving 'Virtual Register Map'
 -- 'Virtual Register Rewriter' is not preserving 'Live Interval Analysis'
 -- 'Virtual Register Rewriter' is not preserving 'Debug Variable Analysis'
 -*- 'Virtual Register Rewriter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Virtual Register Map' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Virtual Register Rewriter' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Debug Variable Analysis' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Live Interval Analysis' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Stack Slot Coloring' on Function '_Z7crash32v'...
0x7e16db8       Required Analyses: Slot index numbering, Live Stack Slot Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Stack Slot Coloring **********
********** Function: _Z7crash32v
0x7e16db8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Stack Slot Coloring' is not preserving 'Live Stack Slot Analysis'
 -*- 'Stack Slot Coloring' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Slot index numbering' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Live Stack Slot Analysis' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Stack Slot Coloring' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function '_Z7crash32v'...
0x7e17640       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Post-regalloc Machine LICM: _Z7crash32v ********
0x7e17640       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function '_Z7crash32v'...
0x7e18120       Required Analyses: Uninitialized Pass
0x7e18120       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'X86 FP Stackifier' on Function '_Z7crash32v'...
0x7e17de0       Required Analyses: Bundle Machine CFG Edges, Uninitialized Pass
0x7e17de0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 FP Stackifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'X86 FP Stackifier' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_Z7crash32v'...
0x7e18578       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e0230c     Made Modification 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_Z7crash32v'...
0x7e18578       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Prologue/Epilogue Insertion & Frame Finalization' is not preserving 'X86 FP Stackifier'
 -*- 'Prologue/Epilogue Insertion & Frame Finalization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Control Flow Optimizer' on Function '_Z7crash32v'...
0x7e18910       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e18910       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Control Flow Optimizer' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Control Flow Optimizer' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function '_Z7crash32v'...
0x7e18be0       Required Analyses: Uninitialized Pass
0x7e18be0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Machine Copy Propagation Pass' on Function '_Z7crash32v'...
0x7e18f28       Required Analyses: Uninitialized Pass
0x7e18f28       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Copy Propagation Pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Copy Propagation Pass' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Post-RA pseudo instruction expansion pass' on Function '_Z7crash32v'...
0x7e19208       Required Analyses: Uninitialized Pass
Machine Function
********** EXPANDING POST-RA PSEUDO INSTRS **********
********** Function: _Z7crash32v
0x7e19208       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post-RA pseudo instruction expansion pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post-RA pseudo instruction expansion pass' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_Z7crash32v'...
0x7e19750       Required Analyses: Uninitialized Pass
0x7e19750       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function '_Z7crash32v'...
0x7e19b58       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e19b58       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Post RA top-down list latency scheduler' on Function '_Z7crash32v'...
0x7e194e0       Required Analyses: No Alias Analysis (always returns 'may' alias), Target Pass Configuration, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass
0x7e194e0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post RA top-down list latency scheduler' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post RA top-down list latency scheduler' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Analyze Machine Code For Garbage Collection' on Function '_Z7crash32v'...
0x7e0de80       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e0de80       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Analyze Machine Code For Garbage Collection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Analyze Machine Code For Garbage Collection' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Machine Block Frequency Analysis' on Function '_Z7crash32v'...
0x7e1a7b8       Required Analyses: Machine Branch Probability Analysis, Uninitialized Pass
RPO[BB#0 derived from LLVM BB entry] = 1
POT: BB#0 derived from LLVM BB entry
doLoop(BB#0 derived from LLVM BB entry, BB#0 derived from LLVM BB entry)
doBlock(BB#0 derived from LLVM BB entry)
Frequency(BB#0 derived from LLVM BB entry) = 0
Frequency(BB#0 derived from LLVM BB entry) = 1024
0x7e1a7b8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Branch Probability Basic Block Placement' on Function '_Z7crash32v'...
0x7e1a270       Required Analyses: Machine Branch Probability Analysis, Machine Block Frequency Analysis, Machine Natural Loop Construction, Uninitialized Pass
0x7e1a270       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Natural Loop Construction'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Block Frequency Analysis'
 -*- 'Branch Probability Basic Block Placement' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Basic Block Placement' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Machine Block Frequency Analysis' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Execution dependency fix' on Function '_Z7crash32v'...
0x7e1abf8       Required Analyses: Uninitialized Pass
********** FIX EXECUTION DEPENDENCIES: VR128 **********
0x7e1abf8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Execution dependency fix' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Execution dependency fix' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'X86 Assembly / Object Emitter' on Function '_Z7crash32v'...
0x7e1b218       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e1b218       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 Assembly / Object Emitter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Function Analysis' on Function '_Z7crash32v'...
0x7e0230c      Freeing Pass 'X86 Assembly / Object Emitter' on Function '_Z7crash32v'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Module Verifier' on Function '_Z7crash64v'...
0x7e01d48       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Module Verifier' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Natural Loop Information' on Function '_Z7crash64v'...
0x7e035e8       Required Analyses: Dominator Tree Construction
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7e03b70       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Scalar Evolution Analysis' on Function '_Z7crash64v'...
0x7e04230       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7e049e0       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Scalar Evolution Analysis' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'X86 Target Transform Info' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Lower Garbage Collection Instructions' on Function '_Z7crash64v'...
0x7e05138       Required Analyses: Create Garbage Collector Module Metadata
0x7e05138       Preserved Analyses: Dominator Tree Construction
 -- 'Lower Garbage Collection Instructions' is not preserving 'Machine Function Analysis'
 -- 'Lower Garbage Collection Instructions' is not preserving 'X86 Assembly / Object Emitter'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Loop Pass Manager'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Execution dependency fix'
 -*- 'Lower Garbage Collection Instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Lower Garbage Collection Instructions' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Remove unreachable blocks from the CFG' on Function '_Z7crash64v'...
0x7e05758       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'Remove unreachable blocks from the CFG' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable blocks from the CFG' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'CodeGen Prepare' on Function '_Z7crash64v'...
0x7e05a28       Required Analyses: Target Library Information
0x7e05a28       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'CodeGen Prepare' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'CodeGen Prepare' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Exception handling preparation' on Function '_Z7crash64v'...
 -*- 'Exception handling preparation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Exception handling preparation' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Insert stack protectors' on Function '_Z7crash64v'...
0x7deeac0       Preserved Analyses: Dominator Tree Construction
 -- 'Insert stack protectors' is not preserving 'Exception handling preparation'
 -*- 'Insert stack protectors' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Insert stack protectors' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Module Verifier' on Function '_Z7crash64v'...
0x7deedf8       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Module Verifier' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Machine Function Analysis' on Function '_Z7crash64v'...
0x7e090b8       Required Analyses: Machine Module Information
0x7e0230c     Executing Pass 'Natural Loop Information' on Function '_Z7crash64v'...
0x7e0a8b0       Required Analyses: Dominator Tree Construction
 -*- 'Natural Loop Information' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Branch Probability Analysis' on Function '_Z7crash64v'...
0x7e0a608       Required Analyses: Natural Loop Information
Computing probabilities for entry
 -*- 'Branch Probability Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'X86 DAG->DAG Instruction Selection' on Function '_Z7crash64v'...
0x7e09398       Required Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Target Library Information, Branch Probability Analysis, Uninitialized Pass



=== _Z7crash64v
Initial selection DAG: BB#0 '_Z7crash64v:entry'
SelectionDAG has 12 nodes:
  0x7e31178: i64 = undef

  0x7e30e48: i32 = Register %EAX

    0x7e096ac: ch = EntryToken

    0x7e30e48: <multiple use>
      0x7e31178: <multiple use>
      0x7e31310: i32 = Constant<0>

    0x7e31288: i32 = extract_element 0x7e31178, 0x7e31310

  0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31288

  0x7e30fe0: i32 = Register %EDX

    0x7e30f58: <multiple use>
    0x7e30fe0: <multiple use>
      0x7e31178: <multiple use>
      0x7e310f0: i32 = Constant<1>

    0x7e31200: i32 = extract_element 0x7e31178, 0x7e310f0

    0x7e30f58: <multiple use>
  0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31200, 0x7e30f58:1

    0x7e31068: <multiple use>
    0x7e30ed0: i16 = TargetConstant<0>

    0x7e30e48: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31068: <multiple use>
  0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1


Optimized lowered selection DAG: BB#0 '_Z7crash64v:entry'
SelectionDAG has 12 nodes:
  0x7e31178: i64 = undef

  0x7e30e48: i32 = Register %EAX

    0x7e096ac: ch = EntryToken

    0x7e30e48: <multiple use>
      0x7e31178: <multiple use>
      0x7e31310: i32 = Constant<0>

    0x7e31288: i32 = extract_element 0x7e31178, 0x7e31310

  0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31288

  0x7e30fe0: i32 = Register %EDX

    0x7e30f58: <multiple use>
    0x7e30fe0: <multiple use>
      0x7e31178: <multiple use>
      0x7e310f0: i32 = Constant<1>

    0x7e31200: i32 = extract_element 0x7e31178, 0x7e310f0

    0x7e30f58: <multiple use>
  0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31200, 0x7e30f58:1

    0x7e31068: <multiple use>
    0x7e30ed0: i16 = TargetConstant<0>

    0x7e30e48: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31068: <multiple use>
  0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1


Legally typed node: 0x7e30fe0: i32 = Register %EDX [ID=0]

Legally typed node: 0x7e30e48: i32 = Register %EAX [ID=0]

Legally typed node: 0x7e30ed0: i16 = TargetConstant<0> [ID=0]

Legally typed node: 0x7e31310: i32 = Constant<0> [ID=0]

Legally typed node: 0x7e310f0: i32 = Constant<1> [ID=0]

Expand integer result: 0x7e31178: i64 = undef [ID=0]

Expand integer operand: 0x7e31200: i32 = extract_element 0x7e31178, 0x7e310f0 [ID=0]

Expand integer operand: 0x7e31288: i32 = extract_element 0x7e31178, 0x7e31310 [ID=0]

Legally typed node: 0x7e31420: i32 = undef [ID=0]

Legally typed node: 0x7e096ac: ch = EntryToken [ID=0]

Legally typed node: 0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=0]

Legally typed node: 0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=0]

Legally typed node: 0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1 [ID=0]

Legally typed node: 0x5e0ce94: ch = handlenode 0x7e31398 [ID=0]

Type-legalized selection DAG: BB#0 '_Z7crash64v:entry'
SelectionDAG has 8 nodes:
  0x7e30e48: i32 = Register %EAX [ID=-3]

    0x7e096ac: ch = EntryToken [ID=-3]

    0x7e30e48: <multiple use>
    0x7e31420: <multiple use>
  0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=-3]

  0x7e30fe0: i32 = Register %EDX [ID=-3]

    0x7e30f58: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31420: <multiple use>
    0x7e30f58: <multiple use>
  0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=-3]

  0x7e31420: i32 = undef [ID=-3]

    0x7e31068: <multiple use>
    0x7e30ed0: i16 = TargetConstant<0> [ID=-3]

    0x7e30e48: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31068: <multiple use>
  0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1 [ID=-3]


Optimized type-legalized selection DAG: BB#0 '_Z7crash64v:entry'
SelectionDAG has 8 nodes:
  0x7e30e48: i32 = Register %EAX [ID=-3]

    0x7e096ac: ch = EntryToken [ID=-3]

    0x7e30e48: <multiple use>
    0x7e31420: <multiple use>
  0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=-3]

  0x7e30fe0: i32 = Register %EDX [ID=-3]

    0x7e30f58: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31420: <multiple use>
    0x7e30f58: <multiple use>
  0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=-3]

  0x7e31420: i32 = undef [ID=-3]

    0x7e31068: <multiple use>
    0x7e30ed0: i16 = TargetConstant<0> [ID=-3]

    0x7e30e48: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31068: <multiple use>
  0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1 [ID=-3]


Legalized selection DAG: BB#0 '_Z7crash64v:entry'
SelectionDAG has 8 nodes:
  0x7e30e48: i32 = Register %EAX [ID=2]

  0x7e30fe0: i32 = Register %EDX [ID=3]

  0x7e31420: i32 = undef [ID=4]

    0x7e096ac: ch = EntryToken [ID=0]

    0x7e30e48: <multiple use>
    0x7e31420: <multiple use>
  0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=5]

    0x7e30f58: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31420: <multiple use>
    0x7e30f58: <multiple use>
  0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=6]

    0x7e31068: <multiple use>
    0x7e30ed0: i16 = TargetConstant<0> [ID=1]

    0x7e30e48: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31068: <multiple use>
  0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1 [ID=7]


Optimized legalized selection DAG: BB#0 '_Z7crash64v:entry'
SelectionDAG has 8 nodes:
  0x7e30e48: i32 = Register %EAX [ID=2]

  0x7e30fe0: i32 = Register %EDX [ID=3]

  0x7e31420: i32 = undef [ID=4]

    0x7e096ac: ch = EntryToken [ID=0]

    0x7e30e48: <multiple use>
    0x7e31420: <multiple use>
  0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=5]

    0x7e30f58: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31420: <multiple use>
    0x7e30f58: <multiple use>
  0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=6]

    0x7e31068: <multiple use>
    0x7e30ed0: i16 = TargetConstant<0> [ID=1]

    0x7e30e48: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31068: <multiple use>
  0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1 [ID=7]


===== Instruction selection begins: BB#0 'entry'
Selecting: 0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1 [ID=7]

ISEL: Starting pattern match on root node: 0x7e31398: ch = X86ISD::RET_FLAG 0x7e31068, 0x7e30ed0, 0x7e30e48, 0x7e30fe0, 0x7e31068:1 [ID=7]

  Initial Opcode index to 80290
  Morphed node: 0x7e31398: ch = RET 0x7e30e48, 0x7e30fe0, 0x7e31068, 0x7e31068:1

ISEL: Match complete!
=> 0x7e31398: ch = RET 0x7e30e48, 0x7e30fe0, 0x7e31068, 0x7e31068:1

Selecting: 0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=6]

=> 0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1

Selecting: 0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=5]

=> 0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420

Selecting: 0x7e31420: i32 = undef [ID=4]

=> 0x7e31420: i32 = IMPLICIT_DEF

Selecting: 0x7e30fe0: i32 = Register %EDX [ID=3]

=> 0x7e30fe0: i32 = Register %EDX

Selecting: 0x7e30e48: i32 = Register %EAX [ID=2]

=> 0x7e30e48: i32 = Register %EAX

Selecting: 0x7e096ac: ch = EntryToken [ID=0]

=> 0x7e096ac: ch = EntryToken

===== Instruction selection ends:
Selected selection DAG: BB#0 '_Z7crash64v:entry'
SelectionDAG has 7 nodes:
  0x7e30e48: i32 = Register %EAX

  0x7e30fe0: i32 = Register %EDX

  0x7e31420: i32 = IMPLICIT_DEF

    0x7e096ac: ch = EntryToken

    0x7e30e48: <multiple use>
    0x7e31420: <multiple use>
  0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420

    0x7e30f58: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31420: <multiple use>
    0x7e30f58: <multiple use>
  0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1

    0x7e30e48: <multiple use>
    0x7e30fe0: <multiple use>
    0x7e31068: <multiple use>
    0x7e31068: <multiple use>
  0x7e31398: ch = RET 0x7e30e48, 0x7e30fe0, 0x7e31068, 0x7e31068:1


********** List Scheduling BB#0 'entry' **********
SU(0): 0x7e31398: ch = RET 0x7e30e48, 0x7e30fe0, 0x7e31068, 0x7e31068:1 [ID=0]

    0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=0]

    0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(1): Latency=1

SU(1): 0x7e31420: i32 = IMPLICIT_DEF [ID=1]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(0): Latency=1


Examining Available:
Height 0: SU(0): 0x7e31398: ch = RET 0x7e30e48, 0x7e30fe0, 0x7e31068, 0x7e31068:1 [ID=0]

    0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=0]

    0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=0]


*** Scheduling [0]: SU(0): 0x7e31398: ch = RET 0x7e30e48, 0x7e30fe0, 0x7e31068, 0x7e31068:1 [ID=0]

    0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=0]

    0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=0]


Examining Available:
Height 1: SU(1): 0x7e31420: i32 = IMPLICIT_DEF [ID=1]


*** Scheduling [1]: SU(1): 0x7e31420: i32 = IMPLICIT_DEF [ID=1]

*** Final schedule ***
SU(1): 0x7e31420: i32 = IMPLICIT_DEF [ID=1]

SU(0): 0x7e31398: ch = RET 0x7e30e48, 0x7e30fe0, 0x7e31068, 0x7e31068:1 [ID=0]

    0x7e30f58: ch,glue = CopyToReg 0x7e096ac, 0x7e30e48, 0x7e31420 [ID=0]

    0x7e31068: ch,glue = CopyToReg 0x7e30f58, 0x7e30fe0, 0x7e31420, 0x7e30f58:1 [ID=0]


Total amount of phi nodes to update: 0
0x7e0230c     Made Modification 'X86 DAG->DAG Instruction Selection' on Function '_Z7crash64v'...
0x7e09398       Preserved Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Branch Probability Analysis'
 -*- 'X86 DAG->DAG Instruction Selection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Analysis' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'X86 DAG->DAG Instruction Selection' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'X86 PIC Global Base Reg Initialization' on Function '_Z7crash64v'...
0x7e0add8       Required Analyses: Uninitialized Pass
0x7e0add8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 PIC Global Base Reg Initialization' is not preserving 'X86 DAG->DAG Instruction Selection'
 -*- 'X86 PIC Global Base Reg Initialization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'X86 PIC Global Base Reg Initialization' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Expand ISel Pseudo-instructions' on Function '_Z7crash64v'...
0x7e0b0a8       Required Analyses: Uninitialized Pass
0x7e0b0a8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Expand ISel Pseudo-instructions' is not preserving 'X86 PIC Global Base Reg Initialization'
 -*- 'Expand ISel Pseudo-instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Expand ISel Pseudo-instructions' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function '_Z7crash64v'...
0x7e0b378       Required Analyses: Uninitialized Pass
0x7e0b378       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Optimize machine instruction PHIs' on Function '_Z7crash64v'...
0x7e0b6c0       Required Analyses: Uninitialized Pass
0x7e0b6c0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Optimize machine instruction PHIs' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Optimize machine instruction PHIs' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_Z7crash64v'...
0x7e0bcc0       Required Analyses: Uninitialized Pass
0x7e0bcc0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Slot index numbering' on Function '_Z7crash64v'...
0x7e0c0c8       Required Analyses: Uninitialized Pass
# Machine code for function _Z7crash64v: SSA

0B	BB#0: derived from LLVM BB %entry
16B		%vreg0<def> = IMPLICIT_DEF; GR32:%vreg0
32B		%EAX<def> = COPY %vreg0; GR32:%vreg0
48B		%vreg1<def> = IMPLICIT_DEF; GR32:%vreg1
64B		%EDX<def> = COPY %vreg1; GR32:%vreg1
80B		RET %EAX, %EDX

# End machine code for function _Z7crash64v.

0x7e0c0c8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Merge disjoint stack slots' on Function '_Z7crash64v'...
0x7e0b998       Required Analyses: MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
********** Stack Coloring **********
********** Function: _Z7crash64v
0x7e0b998       Preserved Analyses: MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Merge disjoint stack slots' is not preserving 'Slot index numbering'
 -*- 'Merge disjoint stack slots' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Merge disjoint stack slots' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Slot index numbering' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Local Stack Slot Allocation' on Function '_Z7crash64v'...
0x7e0c508       Required Analyses: Uninitialized Pass
0x7e0230c     Made Modification 'Local Stack Slot Allocation' on Function '_Z7crash64v'...
0x7e0c508       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Local Stack Slot Allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Local Stack Slot Allocation' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Remove dead machine instructions' on Function '_Z7crash64v'...
0x7e0c870       Required Analyses: Uninitialized Pass
0x7e0c870       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Remove dead machine instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove dead machine instructions' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_Z7crash64v'...
0x7e0d500       Required Analyses: Uninitialized Pass
0x7e0d500       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function '_Z7crash64v'...
0x7e0d260       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e0d260       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function '_Z7crash64v'...
0x7e0cb58       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Pre-regalloc Machine LICM: _Z7crash64v ********
0x7e0cb58       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Machine Common Subexpression Elimination' on Function '_Z7crash64v'...
0x7e0da38       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction
Entering: entry
Exiting: entry
0x7e0da38       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, Machine Natural Loop Construction, MachineDominator Tree Construction
 -*- 'Machine Common Subexpression Elimination' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Common Subexpression Elimination' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Machine code sinking' on Function '_Z7crash64v'...
0x7e0df00       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction, Machine Natural Loop Construction
******** Machine Sinking ********
0x7e0df00       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, MachineDominator Tree Construction, Machine Natural Loop Construction
 -*- 'Machine code sinking' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine code sinking' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Peephole Optimizations' on Function '_Z7crash64v'...
0x7dfbb10       Required Analyses: Uninitialized Pass
********** PEEPHOLE OPTIMIZER **********
********** Function: _Z7crash64v
0x7dfbb10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Peephole Optimizations' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Peephole Optimizations' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Process Implicit Definitions' on Function '_Z7crash64v'...
0x7e12fc0       Required Analyses: Uninitialized Pass
********** PROCESS IMPLICIT DEFS **********
********** Function: _Z7crash64v
BB#0 has 2 implicit defs.
Processing %vreg1<def> = IMPLICIT_DEF; GR32:%vreg1
Converting to IMPLICIT_DEF: %EDX<def> = COPY %vreg1<undef>; GR32:%vreg1
Processing %EDX<def> = IMPLICIT_DEF %vreg1<undef>; GR32:%vreg1
Physreg user: RET %EAX, %EDX<undef>
Processing %vreg0<def> = IMPLICIT_DEF; GR32:%vreg0
Converting to IMPLICIT_DEF: %EAX<def> = COPY %vreg0<undef>; GR32:%vreg0
Processing %EAX<def> = IMPLICIT_DEF %vreg0<undef>; GR32:%vreg0
Physreg user: RET %EAX<undef>, %EDX<undef>
0x7e0230c     Made Modification 'Process Implicit Definitions' on Function '_Z7crash64v'...
0x7e12fc0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Process Implicit Definitions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Process Implicit Definitions' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Remove unreachable machine basic blocks' on Function '_Z7crash64v'...
0x7e13678       Required Analyses: Uninitialized Pass
0x7e13678       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Variable Analysis' on Function '_Z7crash64v'...
0x7e13340       Required Analyses: Remove unreachable machine basic blocks, Uninitialized Pass
0x7e13340       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Variable Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable machine basic blocks' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Eliminate PHI nodes for register allocation' on Function '_Z7crash64v'...
0x7e139e8       Required Analyses: Uninitialized Pass
0x7e139e8       Preserved Analyses: Live Variable Analysis, Slot index numbering, Live Interval Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Eliminate PHI nodes for register allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Eliminate PHI nodes for register allocation' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Two-Address instruction pass' on Function '_Z7crash64v'...
0x7e13d10       Required Analyses: No Alias Analysis (always returns 'may' alias), Uninitialized Pass
********** REWRITING TWO-ADDR INSTRS **********
********** Function: _Z7crash64v
0x7e13d10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Variable Analysis, Slot index numbering, Live Interval Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Two-Address instruction pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Two-Address instruction pass' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Slot index numbering' on Function '_Z7crash64v'...
0x7e14a38       Required Analyses: Uninitialized Pass
# Machine code for function _Z7crash64v: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET %EAX<undef>, %EDX<undef>

# End machine code for function _Z7crash64v.

0x7e14a38       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Interval Analysis' on Function '_Z7crash64v'...
0x7e146f0       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Variable Analysis, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
Computing live-in reg-units in ABI blocks.
Created 0 new intervals.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function _Z7crash64v: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET %EAX<undef>, %EDX<undef>

# End machine code for function _Z7crash64v.

0x7e0230c     Made Modification 'Live Interval Analysis' on Function '_Z7crash64v'...
0x7e146f0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Variable Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Interval Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Live Variable Analysis' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Simple Register Coalescing' on Function '_Z7crash64v'...
0x7e14070       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** SIMPLE REGISTER COALESCING **********
********** Function: _Z7crash64v
********** JOINING INTERVALS ***********
entry:
Trying to inflate 0 regs.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function _Z7crash64v: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		RET %EAX<undef>, %EDX<undef>

# End machine code for function _Z7crash64v.

0x7e0230c     Made Modification 'Simple Register Coalescing' on Function '_Z7crash64v'...
0x7e14070       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Interval Analysis, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Simple Register Coalescing' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Simple Register Coalescing' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Debug Variable Analysis' on Function '_Z7crash64v'...
0x7e151a0       Required Analyses: MachineDominator Tree Construction, Live Interval Analysis, Uninitialized Pass
********** COMPUTING LIVE DEBUG VARIABLES: _Z7crash64v **********
********** DEBUG VARIABLES **********
0x7e151a0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Stack Slot Analysis' on Function '_Z7crash64v'...
0x7e15478       Required Analyses: Slot index numbering, Uninitialized Pass
0x7e15478       Preserved Analyses: Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Calculate spill weights' on Function '_Z7crash64v'...
0x7e15918       Required Analyses: Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Compute Spill Weights **********
********** Function: _Z7crash64v
0x7e15918       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Virtual Register Map' on Function '_Z7crash64v'...
0x7e15be8       Required Analyses: Uninitialized Pass
0x7e15be8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Register Matrix' on Function '_Z7crash64v'...
0x7e15fe8       Required Analyses: Live Interval Analysis, Virtual Register Map, Uninitialized Pass
0x7e15fe8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function '_Z7crash64v'...
0x7e16318       Required Analyses: Uninitialized Pass
0x7e16318       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Spill Code Placement Analysis' on Function '_Z7crash64v'...
0x7e166d8       Required Analyses: Bundle Machine CFG Edges, Machine Natural Loop Construction, Uninitialized Pass
0x7e166d8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Greedy Register Allocator' on Function '_Z7crash64v'...
0x7e0e9b8       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Calculate spill weights, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Bundle Machine CFG Edges, Spill Code Placement Analysis, Uninitialized Pass
********** GREEDY REGISTER ALLOCATION **********
********** Function: _Z7crash64v
0x7e0230c     Made Modification 'Greedy Register Allocator' on Function '_Z7crash64v'...
0x7e0e9b8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Greedy Register Allocator' is not preserving 'Calculate spill weights'
 -*- 'Greedy Register Allocator' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Calculate spill weights' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Live Register Matrix' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Spill Code Placement Analysis' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Greedy Register Allocator' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Virtual Register Rewriter' on Function '_Z7crash64v'...
0x7e16ac8       Required Analyses: Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Virtual Register Map, Uninitialized Pass
********** REWRITE VIRTUAL REGISTERS **********
********** Function: _Z7crash64v
********** REGISTER MAP **********

0B	BB#0: derived from LLVM BB %entry
16B		RET %EAX<undef>, %EDX<undef>
> RET %EAX<undef>, %EDX<undef>
********** EMITTING LIVE DEBUG VARIABLES **********
0x7e0230c     Made Modification 'Virtual Register Rewriter' on Function '_Z7crash64v'...
0x7e16ac8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Live Stack Slot Analysis, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Virtual Register Rewriter' is not preserving 'Greedy Register Allocator'
 -- 'Virtual Register Rewriter' is not preserving 'Virtual Register Map'
 -- 'Virtual Register Rewriter' is not preserving 'Live Interval Analysis'
 -- 'Virtual Register Rewriter' is not preserving 'Debug Variable Analysis'
 -*- 'Virtual Register Rewriter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Virtual Register Map' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Virtual Register Rewriter' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Debug Variable Analysis' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Live Interval Analysis' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Stack Slot Coloring' on Function '_Z7crash64v'...
0x7e16db8       Required Analyses: Slot index numbering, Live Stack Slot Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Stack Slot Coloring **********
********** Function: _Z7crash64v
0x7e16db8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Stack Slot Coloring' is not preserving 'Live Stack Slot Analysis'
 -*- 'Stack Slot Coloring' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Slot index numbering' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Live Stack Slot Analysis' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Stack Slot Coloring' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function '_Z7crash64v'...
0x7e17640       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Post-regalloc Machine LICM: _Z7crash64v ********
0x7e17640       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function '_Z7crash64v'...
0x7e18120       Required Analyses: Uninitialized Pass
0x7e18120       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'X86 FP Stackifier' on Function '_Z7crash64v'...
0x7e17de0       Required Analyses: Bundle Machine CFG Edges, Uninitialized Pass
0x7e17de0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 FP Stackifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'X86 FP Stackifier' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_Z7crash64v'...
0x7e18578       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e0230c     Made Modification 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_Z7crash64v'...
0x7e18578       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Prologue/Epilogue Insertion & Frame Finalization' is not preserving 'X86 FP Stackifier'
 -*- 'Prologue/Epilogue Insertion & Frame Finalization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Control Flow Optimizer' on Function '_Z7crash64v'...
0x7e18910       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e18910       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Control Flow Optimizer' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Control Flow Optimizer' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function '_Z7crash64v'...
0x7e18be0       Required Analyses: Uninitialized Pass
0x7e18be0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Machine Copy Propagation Pass' on Function '_Z7crash64v'...
0x7e18f28       Required Analyses: Uninitialized Pass
0x7e18f28       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Copy Propagation Pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Copy Propagation Pass' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Post-RA pseudo instruction expansion pass' on Function '_Z7crash64v'...
0x7e19208       Required Analyses: Uninitialized Pass
Machine Function
********** EXPANDING POST-RA PSEUDO INSTRS **********
********** Function: _Z7crash64v
0x7e19208       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post-RA pseudo instruction expansion pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post-RA pseudo instruction expansion pass' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_Z7crash64v'...
0x7e19750       Required Analyses: Uninitialized Pass
0x7e19750       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function '_Z7crash64v'...
0x7e19b58       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e19b58       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Post RA top-down list latency scheduler' on Function '_Z7crash64v'...
0x7e194e0       Required Analyses: No Alias Analysis (always returns 'may' alias), Target Pass Configuration, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass
0x7e194e0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post RA top-down list latency scheduler' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post RA top-down list latency scheduler' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Analyze Machine Code For Garbage Collection' on Function '_Z7crash64v'...
0x7e0de80       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e0de80       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Analyze Machine Code For Garbage Collection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Analyze Machine Code For Garbage Collection' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Machine Block Frequency Analysis' on Function '_Z7crash64v'...
0x7e1a7b8       Required Analyses: Machine Branch Probability Analysis, Uninitialized Pass
RPO[BB#0 derived from LLVM BB entry] = 1
POT: BB#0 derived from LLVM BB entry
doLoop(BB#0 derived from LLVM BB entry, BB#0 derived from LLVM BB entry)
doBlock(BB#0 derived from LLVM BB entry)
Frequency(BB#0 derived from LLVM BB entry) = 0
Frequency(BB#0 derived from LLVM BB entry) = 1024
0x7e1a7b8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Branch Probability Basic Block Placement' on Function '_Z7crash64v'...
0x7e1a270       Required Analyses: Machine Branch Probability Analysis, Machine Block Frequency Analysis, Machine Natural Loop Construction, Uninitialized Pass
0x7e1a270       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Natural Loop Construction'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Block Frequency Analysis'
 -*- 'Branch Probability Basic Block Placement' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Basic Block Placement' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Machine Block Frequency Analysis' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Execution dependency fix' on Function '_Z7crash64v'...
0x7e1abf8       Required Analyses: Uninitialized Pass
********** FIX EXECUTION DEPENDENCIES: VR128 **********
0x7e1abf8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Execution dependency fix' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Execution dependency fix' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'X86 Assembly / Object Emitter' on Function '_Z7crash64v'...
0x7e1b218       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e1b218       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 Assembly / Object Emitter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Function Analysis' on Function '_Z7crash64v'...
0x7e0230c      Freeing Pass 'X86 Assembly / Object Emitter' on Function '_Z7crash64v'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Module Verifier' on Function '_GLOBAL__I_a'...
0x7e01d48       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Module Verifier' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Natural Loop Information' on Function '_GLOBAL__I_a'...
0x7e035e8       Required Analyses: Dominator Tree Construction
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7e03b70       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Scalar Evolution Analysis' on Function '_GLOBAL__I_a'...
0x7e04230       Required Analyses: Natural Loop Information, Dominator Tree Construction, Target Library Information
0x7e0230c     Executing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7e049e0       Required Analyses: Natural Loop Information
 -*- 'Loop Pass Manager' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Scalar Evolution Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'X86 Target Transform Info' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Loop Pass Manager' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Lower Garbage Collection Instructions' on Function '_GLOBAL__I_a'...
0x7e05138       Required Analyses: Create Garbage Collector Module Metadata
0x7e05138       Preserved Analyses: Dominator Tree Construction
 -- 'Lower Garbage Collection Instructions' is not preserving 'Machine Function Analysis'
 -- 'Lower Garbage Collection Instructions' is not preserving 'X86 Assembly / Object Emitter'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Loop Pass Manager'
 -- 'Lower Garbage Collection Instructions' is not preserving 'Execution dependency fix'
 -*- 'Lower Garbage Collection Instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Lower Garbage Collection Instructions' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Remove unreachable blocks from the CFG' on Function '_GLOBAL__I_a'...
0x7e05758       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'Remove unreachable blocks from the CFG' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable blocks from the CFG' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'CodeGen Prepare' on Function '_GLOBAL__I_a'...
0x7e05a28       Required Analyses: Target Library Information
0x7e05a28       Preserved Analyses: Dominator Tree Construction, Uninitialized Pass
 -*- 'CodeGen Prepare' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'CodeGen Prepare' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Exception handling preparation' on Function '_GLOBAL__I_a'...
 -*- 'Exception handling preparation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Exception handling preparation' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Insert stack protectors' on Function '_GLOBAL__I_a'...
0x7deeac0       Preserved Analyses: Dominator Tree Construction
 -- 'Insert stack protectors' is not preserving 'Exception handling preparation'
 -*- 'Insert stack protectors' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Insert stack protectors' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Preliminary module verification' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Module Verifier' on Function '_GLOBAL__I_a'...
0x7deedf8       Required Analyses: Preliminary module verification, Dominator Tree Construction
 -*- 'Module Verifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Module Verifier' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Preliminary module verification' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Machine Function Analysis' on Function '_GLOBAL__I_a'...
0x7e090b8       Required Analyses: Machine Module Information
0x7e0230c     Executing Pass 'Natural Loop Information' on Function '_GLOBAL__I_a'...
0x7e0a8b0       Required Analyses: Dominator Tree Construction
 -*- 'Natural Loop Information' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Dominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Branch Probability Analysis' on Function '_GLOBAL__I_a'...
0x7e0a608       Required Analyses: Natural Loop Information
Computing probabilities for entry
 -*- 'Branch Probability Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Natural Loop Information' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'X86 DAG->DAG Instruction Selection' on Function '_GLOBAL__I_a'...
0x7e09398       Required Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Target Library Information, Branch Probability Analysis, Uninitialized Pass



=== _GLOBAL__I_a
Initial selection DAG: BB#0 '_GLOBAL__I_a:entry'
SelectionDAG has 19 nodes:
  0x7e31398: i32 = GlobalAddress<i32 (void ()*)* @atexit> 0

  0x7e30f58: i32 = TargetConstant<4> [ORD=1]

    0x7e096ac: ch = EntryToken [ORD=1]

    0x7e30f58: <multiple use>
  0x7e31420: ch,glue = callseq_start 0x7e096ac, 0x7e30f58 [ORD=1]

  0x7e30ed0: i32 = Constant<0>

      0x7e31420: <multiple use>
      0x7e31068: i32 = GlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0 [ORD=1]

        0x7e31420: <multiple use>
        0x7e30fe0: i32 = Register %ESP [ORD=1]

      0x7e30e48: i32,ch = CopyFromReg 0x7e31420, 0x7e30fe0 [ORD=1]

      0x7e31178: i32 = undef [ORD=1]

    0x7e310f0: ch = store 0x7e31420, 0x7e31068, 0x7e30e48, 0x7e31178<ST4[Stack]> [ORD=1]

    0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1]

    0x7e31310: Untyped = RegisterMask [ORD=1]

  0x7e31288: ch,glue = X86ISD::CALL 0x7e310f0, 0x7e31200, 0x7e31310 [ORD=1]

    0x7e31288: <multiple use>
    0x7e30f58: <multiple use>
    0x7e314a8: i32 = TargetConstant<0> [ORD=1]

    0x7e31288: <multiple use>
  0x7e31530: ch,glue = callseq_end 0x7e31288, 0x7e30f58, 0x7e314a8, 0x7e31288:1 [ORD=1]

      0x7e31530: <multiple use>
      0x7e315b8: i32 = Register %EAX [ORD=1]

      0x7e31530: <multiple use>
    0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530, 0x7e315b8, 0x7e31530:1 [ORD=1]

    0x7e316c8: i16 = TargetConstant<0>

  0x7e31750: ch = X86ISD::RET_FLAG 0x7e31640:1, 0x7e316c8


Optimized lowered selection DAG: BB#0 '_GLOBAL__I_a:entry'
SelectionDAG has 17 nodes:
  0x7e30f58: i32 = TargetConstant<4> [ORD=1]

    0x7e096ac: ch = EntryToken [ORD=1]

    0x7e30f58: <multiple use>
  0x7e31420: ch,glue = callseq_start 0x7e096ac, 0x7e30f58 [ORD=1]

      0x7e31420: <multiple use>
      0x7e31068: i32 = GlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0 [ORD=1]

        0x7e31420: <multiple use>
        0x7e30fe0: i32 = Register %ESP [ORD=1]

      0x7e30e48: i32,ch = CopyFromReg 0x7e31420, 0x7e30fe0 [ORD=1]

      0x7e31178: i32 = undef [ORD=1]

    0x7e310f0: ch = store 0x7e31420, 0x7e31068, 0x7e30e48, 0x7e31178<ST4[Stack]> [ORD=1]

    0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1]

    0x7e31310: Untyped = RegisterMask [ORD=1]

  0x7e31288: ch,glue = X86ISD::CALL 0x7e310f0, 0x7e31200, 0x7e31310 [ORD=1]

    0x7e31288: <multiple use>
    0x7e30f58: <multiple use>
    0x7e314a8: i32 = TargetConstant<0> [ORD=1]

    0x7e31288: <multiple use>
  0x7e31530: ch,glue = callseq_end 0x7e31288, 0x7e30f58, 0x7e314a8, 0x7e31288:1 [ORD=1]

      0x7e31530: <multiple use>
      0x7e315b8: i32 = Register %EAX [ORD=1]

      0x7e31530: <multiple use>
    0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530, 0x7e315b8, 0x7e31530:1 [ORD=1]

    0x7e316c8: i16 = TargetConstant<0>

  0x7e31750: ch = X86ISD::RET_FLAG 0x7e31640:1, 0x7e316c8


Legally typed node: 0x7e316c8: i16 = TargetConstant<0> [ID=0]

Legally typed node: 0x7e315b8: i32 = Register %EAX [ORD=1] [ID=0]

Legally typed node: 0x7e314a8: i32 = TargetConstant<0> [ORD=1] [ID=0]

Legally typed node: 0x7e31310: Untyped = RegisterMask [ORD=1] [ID=0]

Legally typed node: 0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1] [ID=0]

Legally typed node: 0x7e31178: i32 = undef [ORD=1] [ID=0]

Legally typed node: 0x7e30fe0: i32 = Register %ESP [ORD=1] [ID=0]

Legally typed node: 0x7e30f58: i32 = TargetConstant<4> [ORD=1] [ID=0]

Legally typed node: 0x7e31068: i32 = GlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0 [ORD=1] [ID=0]

Legally typed node: 0x7e096ac: ch = EntryToken [ORD=1] [ID=0]

Legally typed node: 0x7e31420: ch,glue = callseq_start 0x7e096ac, 0x7e30f58 [ORD=1] [ID=0]

Legally typed node: 0x7e30e48: i32,ch = CopyFromReg 0x7e31420, 0x7e30fe0 [ORD=1] [ID=0]

Legally typed node: 0x7e310f0: ch = store 0x7e31420, 0x7e31068, 0x7e30e48, 0x7e31178<ST4[Stack]> [ORD=1] [ID=0]

Legally typed node: 0x7e31288: ch,glue = X86ISD::CALL 0x7e310f0, 0x7e31200, 0x7e31310 [ORD=1] [ID=0]

Legally typed node: 0x7e31530: ch,glue = callseq_end 0x7e31288, 0x7e30f58, 0x7e314a8, 0x7e31288:1 [ORD=1] [ID=0]

Legally typed node: 0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530, 0x7e315b8, 0x7e31530:1 [ORD=1] [ID=0]

Legally typed node: 0x7e31750: ch = X86ISD::RET_FLAG 0x7e31640:1, 0x7e316c8 [ID=0]

Legally typed node: 0x5e0ce94: ch = handlenode 0x7e31750 [ID=0]

Type-legalized selection DAG: BB#0 '_GLOBAL__I_a:entry'
SelectionDAG has 17 nodes:
  0x7e30f58: i32 = TargetConstant<4> [ORD=1] [ID=-3]

    0x7e096ac: ch = EntryToken [ORD=1] [ID=-3]

    0x7e30f58: <multiple use>
  0x7e31420: ch,glue = callseq_start 0x7e096ac, 0x7e30f58 [ORD=1] [ID=-3]

      0x7e31420: <multiple use>
      0x7e31068: i32 = GlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0 [ORD=1] [ID=-3]

        0x7e31420: <multiple use>
        0x7e30fe0: i32 = Register %ESP [ORD=1] [ID=-3]

      0x7e30e48: i32,ch = CopyFromReg 0x7e31420, 0x7e30fe0 [ORD=1] [ID=-3]

      0x7e31178: i32 = undef [ORD=1] [ID=-3]

    0x7e310f0: ch = store 0x7e31420, 0x7e31068, 0x7e30e48, 0x7e31178<ST4[Stack]> [ORD=1] [ID=-3]

    0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1] [ID=-3]

    0x7e31310: Untyped = RegisterMask [ORD=1] [ID=-3]

  0x7e31288: ch,glue = X86ISD::CALL 0x7e310f0, 0x7e31200, 0x7e31310 [ORD=1] [ID=-3]

    0x7e31288: <multiple use>
    0x7e30f58: <multiple use>
    0x7e314a8: i32 = TargetConstant<0> [ORD=1] [ID=-3]

    0x7e31288: <multiple use>
  0x7e31530: ch,glue = callseq_end 0x7e31288, 0x7e30f58, 0x7e314a8, 0x7e31288:1 [ORD=1] [ID=-3]

      0x7e31530: <multiple use>
      0x7e315b8: i32 = Register %EAX [ORD=1] [ID=-3]

      0x7e31530: <multiple use>
    0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530, 0x7e315b8, 0x7e31530:1 [ORD=1] [ID=-3]

    0x7e316c8: i16 = TargetConstant<0> [ID=-3]

  0x7e31750: ch = X86ISD::RET_FLAG 0x7e31640:1, 0x7e316c8 [ID=-3]


Legalized selection DAG: BB#0 '_GLOBAL__I_a:entry'
SelectionDAG has 18 nodes:
  0x7e30f58: i32 = TargetConstant<4> [ORD=1] [ID=2]

    0x7e096ac: ch = EntryToken [ORD=1] [ID=0]

    0x7e30f58: <multiple use>
  0x7e31420: ch,glue = callseq_start 0x7e096ac, 0x7e30f58 [ORD=1] [ID=10]

      0x7e31420: <multiple use>
        0x7e31398: i32 = TargetGlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0

      0x7e30ed0: i32 = X86ISD::Wrapper 0x7e31398

        0x7e31420: <multiple use>
        0x7e30fe0: i32 = Register %ESP [ORD=1] [ID=3]

      0x7e30e48: i32,ch = CopyFromReg 0x7e31420, 0x7e30fe0 [ORD=1] [ID=11]

      0x7e31178: i32 = undef [ORD=1] [ID=4]

    0x7e310f0: ch = store 0x7e31420, 0x7e30ed0, 0x7e30e48, 0x7e31178<ST4[Stack]> [ORD=1] [ID=12]

    0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1] [ID=5]

    0x7e31310: Untyped = RegisterMask [ORD=1] [ID=6]

  0x7e31288: ch,glue = X86ISD::CALL 0x7e310f0, 0x7e31200, 0x7e31310 [ORD=1] [ID=13]

    0x7e31288: <multiple use>
    0x7e30f58: <multiple use>
    0x7e314a8: i32 = TargetConstant<0> [ORD=1] [ID=7]

    0x7e31288: <multiple use>
  0x7e31530: ch,glue = callseq_end 0x7e31288, 0x7e30f58, 0x7e314a8, 0x7e31288:1 [ORD=1] [ID=14]

      0x7e31530: <multiple use>
      0x7e315b8: i32 = Register %EAX [ORD=1] [ID=8]

      0x7e31530: <multiple use>
    0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530, 0x7e315b8, 0x7e31530:1 [ORD=1] [ID=15]

    0x7e316c8: i16 = TargetConstant<0> [ID=9]

  0x7e31750: ch = X86ISD::RET_FLAG 0x7e31640:1, 0x7e316c8 [ID=16]


Optimized legalized selection DAG: BB#0 '_GLOBAL__I_a:entry'
SelectionDAG has 18 nodes:
  0x7e30f58: i32 = TargetConstant<4> [ORD=1] [ID=2]

    0x7e096ac: ch = EntryToken [ORD=1] [ID=0]

    0x7e30f58: <multiple use>
  0x7e31420: ch,glue = callseq_start 0x7e096ac, 0x7e30f58 [ORD=1] [ID=10]

      0x7e31420: <multiple use>
        0x7e31398: i32 = TargetGlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0

      0x7e30ed0: i32 = X86ISD::Wrapper 0x7e31398

        0x7e31420: <multiple use>
        0x7e30fe0: i32 = Register %ESP [ORD=1] [ID=3]

      0x7e30e48: i32,ch = CopyFromReg 0x7e31420, 0x7e30fe0 [ORD=1] [ID=11]

      0x7e31178: i32 = undef [ORD=1] [ID=4]

    0x7e310f0: ch = store 0x7e31420, 0x7e30ed0, 0x7e30e48, 0x7e31178<ST4[Stack]> [ORD=1] [ID=12]

    0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1] [ID=5]

    0x7e31310: Untyped = RegisterMask [ORD=1] [ID=6]

  0x7e31288: ch,glue = X86ISD::CALL 0x7e310f0, 0x7e31200, 0x7e31310 [ORD=1] [ID=13]

    0x7e31288: <multiple use>
    0x7e30f58: <multiple use>
    0x7e314a8: i32 = TargetConstant<0> [ORD=1] [ID=7]

    0x7e31288: <multiple use>
  0x7e31530: ch,glue = callseq_end 0x7e31288, 0x7e30f58, 0x7e314a8, 0x7e31288:1 [ORD=1] [ID=14]

      0x7e31530: <multiple use>
      0x7e315b8: i32 = Register %EAX [ORD=1] [ID=8]

      0x7e31530: <multiple use>
    0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530, 0x7e315b8, 0x7e31530:1 [ORD=1] [ID=15]

    0x7e316c8: i16 = TargetConstant<0> [ID=9]

  0x7e31750: ch = X86ISD::RET_FLAG 0x7e31640:1, 0x7e316c8 [ID=16]


===== Instruction selection begins: BB#0 'entry'
Selecting: 0x7e31750: ch = X86ISD::RET_FLAG 0x7e31640:1, 0x7e316c8 [ID=17]

ISEL: Starting pattern match on root node: 0x7e31750: ch = X86ISD::RET_FLAG 0x7e31640:1, 0x7e316c8 [ID=17]

  Initial Opcode index to 80290
  Morphed node: 0x7e31750: ch = RET 0x7e31640:1

ISEL: Match complete!
=> 0x7e31750: ch = RET 0x7e31640:1

Selecting: 0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530, 0x7e315b8, 0x7e31530:1 [ORD=1] [ID=16]

=> 0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530, 0x7e315b8, 0x7e31530:1 [ORD=1]

Selecting: 0x7e31530: ch,glue = callseq_end 0x7e31288, 0x7e30f58, 0x7e314a8, 0x7e31288:1 [ORD=1] [ID=15]

ISEL: Starting pattern match on root node: 0x7e31530: ch,glue = callseq_end 0x7e31288, 0x7e30f58, 0x7e314a8, 0x7e31288:1 [ORD=1] [ID=15]

  Initial Opcode index to 79962
  Morphed node: 0x7e31530: i32,ch,glue = ADJCALLSTACKUP32 0x7e30f58, 0x7e314a8, 0x7e31288, 0x7e31288:1 [ORD=1]

ISEL: Match complete!
=> 0x7e31530: i32,ch,glue = ADJCALLSTACKUP32 0x7e30f58, 0x7e314a8, 0x7e31288, 0x7e31288:1 [ORD=1]

Selecting: 0x7e31288: ch,glue = X86ISD::CALL 0x7e310f0, 0x7e31200, 0x7e31310 [ORD=1] [ID=14]

ISEL: Starting pattern match on root node: 0x7e31288: ch,glue = X86ISD::CALL 0x7e310f0, 0x7e31200, 0x7e31310 [ORD=1] [ID=14]

  Initial Opcode index to 64214
  Match failed at index 64220
  Continuing at 64281
  OpcodeSwitch from 64287 to 64291
  TypeSwitch[i32] from 64291 to 64305
  Morphed node: 0x7e31288: ch,glue = CALLpcrel32 0x7e31200, 0x7e31310, 0x7e310f0 [ORD=1]

ISEL: Match complete!
=> 0x7e31288: ch,glue = CALLpcrel32 0x7e31200, 0x7e31310, 0x7e310f0 [ORD=1]

Selecting: 0x7e310f0: ch = store 0x7e31420, 0x7e30ed0, 0x7e30e48, 0x7e31178<ST4[Stack]> [ORD=1] [ID=13]

ISEL: Starting pattern match on root node: 0x7e310f0: ch = store 0x7e31420, 0x7e30ed0, 0x7e30e48, 0x7e31178<ST4[Stack]> [ORD=1] [ID=13]

  Initial Opcode index to 5
  Skipped scope entry (due to false predicate) at index 13, continuing at 58
  Skipped scope entry (due to false predicate) at index 59, continuing at 104
  Skipped scope entry (due to false predicate) at index 105, continuing at 150
  Skipped scope entry (due to false predicate) at index 151, continuing at 174
  Skipped scope entry (due to false predicate) at index 175, continuing at 198
  Skipped scope entry (due to false predicate) at index 199, continuing at 222
  Match failed at index 226
  Continuing at 246
  Match failed at index 247
  Continuing at 270
  Continuing at 271
  Match failed at index 275
  Continuing at 11052
  Match failed at index 11057
  Continuing at 11369
  OpcodeSwitch from 11373 to 11513
  OpcodeSwitch from 11516 to 11520
  TypeSwitch[i32] from 11521 to 11524
MatchAddress: X86ISelAddressMode 0x5e0c0d4
Base_Reg nul Base.FrameIndex 0
 Scale1
IndexReg nul Disp 0
GV nul CP nul
ES nul JT-1 Align0
  Morphed node: 0x7e310f0: ch = MOV32mi 0x7e30e48, 0x7e31068, 0x7e316c8, 0x7e314a8, 0x7e316c8, 0x7e31398, 0x7e31420<Mem:ST4[Stack]> [ORD=1]

ISEL: Match complete!
=> 0x7e310f0: ch = MOV32mi 0x7e30e48, 0x7e31068, 0x7e316c8, 0x7e314a8, 0x7e316c8, 0x7e31398, 0x7e31420<Mem:ST4[Stack]> [ORD=1]

Selecting: 0x7e30e48: i32,ch = CopyFromReg 0x7e31420, 0x7e30fe0 [ORD=1] [ID=12]

=> 0x7e30e48: i32,ch = CopyFromReg 0x7e31420, 0x7e30fe0 [ORD=1]

Selecting: 0x7e31420: ch,glue = callseq_start 0x7e096ac, 0x7e30f58 [ORD=1] [ID=10]

ISEL: Starting pattern match on root node: 0x7e31420: ch,glue = callseq_start 0x7e096ac, 0x7e30f58 [ORD=1] [ID=10]

  Initial Opcode index to 81745
  Morphed node: 0x7e31420: i32,ch,glue = ADJCALLSTACKDOWN32 0x7e30f58, 0x7e096ac [ORD=1]

ISEL: Match complete!
=> 0x7e31420: i32,ch,glue = ADJCALLSTACKDOWN32 0x7e30f58, 0x7e096ac [ORD=1]

Selecting: 0x7e31398: i32 = TargetGlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0 [ID=9]

=> 0x7e31398: i32 = TargetGlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0

Selecting: 0x7e315b8: i32 = Register %EAX [ORD=1] [ID=7]

=> 0x7e315b8: i32 = Register %EAX [ORD=1]

Selecting: 0x7e314a8: i32 = TargetConstant<0> [ORD=1] [ID=6]

=> 0x7e314a8: i32 = TargetConstant<0> [ORD=1]

Selecting: 0x7e31310: Untyped = RegisterMask [ORD=1] [ID=5]

=> 0x7e31310: Untyped = RegisterMask [ORD=1]

Selecting: 0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1] [ID=4]

=> 0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1]

Selecting: 0x7e30fe0: i32 = Register %ESP [ORD=1] [ID=2]

=> 0x7e30fe0: i32 = Register %ESP [ORD=1]

Selecting: 0x7e30f58: i32 = TargetConstant<4> [ORD=1] [ID=1]

=> 0x7e30f58: i32 = TargetConstant<4> [ORD=1]

Selecting: 0x7e096ac: ch = EntryToken [ORD=1] [ID=0]

=> 0x7e096ac: ch = EntryToken [ORD=1]

===== Instruction selection ends:
Selected selection DAG: BB#0 '_GLOBAL__I_a:entry'
SelectionDAG has 17 nodes:
  0x7e30f58: i32 = TargetConstant<4> [ORD=1]

  0x7e314a8: i32 = TargetConstant<0> [ORD=1]

    0x7e30f58: <multiple use>
    0x7e096ac: ch = EntryToken [ORD=1]

  0x7e31420: i32,ch,glue = ADJCALLSTACKDOWN32 0x7e30f58, 0x7e096ac [ORD=1]

    0x7e31200: i32 = TargetGlobalAddress<i32 (void ()*)* @atexit> 0 [ORD=1]

    0x7e31310: Untyped = RegisterMask [ORD=1]

        0x7e31420: <multiple use>
        0x7e30fe0: i32 = Register %ESP [ORD=1]

      0x7e30e48: i32,ch = CopyFromReg 0x7e31420:1, 0x7e30fe0 [ORD=1]

      0x7e31068: i8 = TargetConstant<1>

      0x7e316c8: <multiple use>
      0x7e314a8: <multiple use>
      0x7e316c8: <multiple use>
      0x7e31398: i32 = TargetGlobalAddress<void ()* @__dtor__ZN5mollyL12molly_globalE> 0

      0x7e31420: <multiple use>
    0x7e310f0: ch = MOV32mi 0x7e30e48, 0x7e31068, 0x7e316c8, 0x7e314a8, 0x7e316c8, 0x7e31398, 0x7e31420:1<Mem:ST4[Stack]> [ORD=1]

  0x7e31288: ch,glue = CALLpcrel32 0x7e31200, 0x7e31310, 0x7e310f0 [ORD=1]

    0x7e30f58: <multiple use>
    0x7e314a8: <multiple use>
    0x7e31288: <multiple use>
    0x7e31288: <multiple use>
  0x7e31530: i32,ch,glue = ADJCALLSTACKUP32 0x7e30f58, 0x7e314a8, 0x7e31288, 0x7e31288:1 [ORD=1]

  0x7e316c8: i32 = Register %noreg

      0x7e31530: <multiple use>
      0x7e315b8: i32 = Register %EAX [ORD=1]

      0x7e31530: <multiple use>
    0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530:1, 0x7e315b8, 0x7e31530:2 [ORD=1]

  0x7e31750: ch = RET 0x7e31640:1


********** List Scheduling BB#0 'entry' **********
SU(0): 0x7e31750: ch = RET 0x7e31640:1 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
   ch  SU(1): Latency=1

SU(1): 0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530:1, 0x7e315b8, 0x7e31530:2 [ORD=1] [ID=1]

    0x7e31288: ch,glue = CALLpcrel32 0x7e31200, 0x7e31310, 0x7e310f0 [ORD=1] [ID=1]

    0x7e31530: i32,ch,glue = ADJCALLSTACKUP32 0x7e30f58, 0x7e314a8, 0x7e31288, 0x7e31288:1 [ORD=1] [ID=1]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 1
  Predecessors:
   ch  SU(2): Latency=1
  Successors:
   ch  SU(0): Latency=1

SU(2): 0x7e310f0: ch = MOV32mi 0x7e30e48, 0x7e31068, 0x7e316c8, 0x7e314a8, 0x7e316c8, 0x7e31398, 0x7e31420:1<Mem:ST4[Stack]> [ORD=1] [ID=2]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
   val SU(4): Latency=1
   ch  SU(3): Latency=1
  Successors:
   ch  SU(1): Latency=1

SU(3): 0x7e31420: i32,ch,glue = ADJCALLSTACKDOWN32 0x7e30f58, 0x7e096ac [ORD=1] [ID=3]

  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
   ch  SU(2): Latency=1
   ch  SU(4): Latency=1

SU(4): 0x7e30e48: i32,ch = CopyFromReg 0x7e31420:1, 0x7e30fe0 [ORD=1] [ID=4]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
   ch  SU(3): Latency=1
  Successors:
   val SU(2): Latency=1


Examining Available:
Height 0: SU(0): 0x7e31750: ch = RET 0x7e31640:1 [ID=0]


*** Scheduling [0]: SU(0): 0x7e31750: ch = RET 0x7e31640:1 [ID=0]


Examining Available:
Height 1: SU(1): 0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530:1, 0x7e315b8, 0x7e31530:2 [ORD=1] [ID=1]

    0x7e31288: ch,glue = CALLpcrel32 0x7e31200, 0x7e31310, 0x7e310f0 [ORD=1] [ID=1]

    0x7e31530: i32,ch,glue = ADJCALLSTACKUP32 0x7e30f58, 0x7e314a8, 0x7e31288, 0x7e31288:1 [ORD=1] [ID=1]


*** Scheduling [1]: SU(1): 0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530:1, 0x7e315b8, 0x7e31530:2 [ORD=1] [ID=1]

    0x7e31288: ch,glue = CALLpcrel32 0x7e31200, 0x7e31310, 0x7e310f0 [ORD=1] [ID=1]

    0x7e31530: i32,ch,glue = ADJCALLSTACKUP32 0x7e30f58, 0x7e314a8, 0x7e31288, 0x7e31288:1 [ORD=1] [ID=1]


Examining Available:
Height 2: SU(2): 0x7e310f0: ch = MOV32mi 0x7e30e48, 0x7e31068, 0x7e316c8, 0x7e314a8, 0x7e316c8, 0x7e31398, 0x7e31420:1<Mem:ST4[Stack]> [ORD=1] [ID=2]


*** Scheduling [2]: SU(2): 0x7e310f0: ch = MOV32mi 0x7e30e48, 0x7e31068, 0x7e316c8, 0x7e314a8, 0x7e316c8, 0x7e31398, 0x7e31420:1<Mem:ST4[Stack]> [ORD=1] [ID=2]


Examining Available:
Height 3: SU(4): 0x7e30e48: i32,ch = CopyFromReg 0x7e31420:1, 0x7e30fe0 [ORD=1] [ID=4]


*** Scheduling [3]: SU(4): 0x7e30e48: i32,ch = CopyFromReg 0x7e31420:1, 0x7e30fe0 [ORD=1] [ID=4]


Examining Available:
Height 4: SU(3): 0x7e31420: i32,ch,glue = ADJCALLSTACKDOWN32 0x7e30f58, 0x7e096ac [ORD=1] [ID=3]


*** Scheduling [4]: SU(3): 0x7e31420: i32,ch,glue = ADJCALLSTACKDOWN32 0x7e30f58, 0x7e096ac [ORD=1] [ID=3]

*** Final schedule ***
SU(3): 0x7e31420: i32,ch,glue = ADJCALLSTACKDOWN32 0x7e30f58, 0x7e096ac [ORD=1] [ID=3]

SU(4): 0x7e30e48: i32,ch = CopyFromReg 0x7e31420:1, 0x7e30fe0 [ORD=1] [ID=4]

SU(2): 0x7e310f0: ch = MOV32mi 0x7e30e48, 0x7e31068, 0x7e316c8, 0x7e314a8, 0x7e316c8, 0x7e31398, 0x7e31420:1<Mem:ST4[Stack]> [ORD=1] [ID=2]

SU(1): 0x7e31640: i32,ch,glue = CopyFromReg 0x7e31530:1, 0x7e315b8, 0x7e31530:2 [ORD=1] [ID=1]

    0x7e31288: ch,glue = CALLpcrel32 0x7e31200, 0x7e31310, 0x7e310f0 [ORD=1] [ID=1]

    0x7e31530: i32,ch,glue = ADJCALLSTACKUP32 0x7e30f58, 0x7e314a8, 0x7e31288, 0x7e31288:1 [ORD=1] [ID=1]

SU(0): 0x7e31750: ch = RET 0x7e31640:1 [ID=0]


Total amount of phi nodes to update: 0
0x7e0230c     Made Modification 'X86 DAG->DAG Instruction Selection' on Function '_GLOBAL__I_a'...
0x7e09398       Preserved Analyses: No Alias Analysis (always returns 'may' alias), Create Garbage Collector Module Metadata, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 DAG->DAG Instruction Selection' is not preserving 'Branch Probability Analysis'
 -*- 'X86 DAG->DAG Instruction Selection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'X86 DAG->DAG Instruction Selection' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'X86 PIC Global Base Reg Initialization' on Function '_GLOBAL__I_a'...
0x7e0add8       Required Analyses: Uninitialized Pass
0x7e0add8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'X86 PIC Global Base Reg Initialization' is not preserving 'X86 DAG->DAG Instruction Selection'
 -*- 'X86 PIC Global Base Reg Initialization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'X86 PIC Global Base Reg Initialization' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Expand ISel Pseudo-instructions' on Function '_GLOBAL__I_a'...
0x7e0b0a8       Required Analyses: Uninitialized Pass
0x7e0b0a8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Expand ISel Pseudo-instructions' is not preserving 'X86 PIC Global Base Reg Initialization'
 -*- 'Expand ISel Pseudo-instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Expand ISel Pseudo-instructions' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function '_GLOBAL__I_a'...
0x7e0b378       Required Analyses: Uninitialized Pass
0x7e0b378       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Optimize machine instruction PHIs' on Function '_GLOBAL__I_a'...
0x7e0b6c0       Required Analyses: Uninitialized Pass
0x7e0b6c0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Optimize machine instruction PHIs' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Optimize machine instruction PHIs' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0bcc0       Required Analyses: Uninitialized Pass
0x7e0bcc0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Slot index numbering' on Function '_GLOBAL__I_a'...
0x7e0c0c8       Required Analyses: Uninitialized Pass
# Machine code for function _GLOBAL__I_a: SSA

0B	BB#0: derived from LLVM BB %entry
16B		ADJCALLSTACKDOWN32 4, %ESP<imp-def,dead>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
32B		%vreg0<def> = COPY %ESP; GR32:%vreg0
48B		MOV32mi %vreg0, 1, %noreg, 0, %noreg, <ga:@__dtor__ZN5mollyL12molly_globalE>; mem:ST4[Stack] GR32:%vreg0
64B		CALLpcrel32 <ga:@atexit>, <regmask>, %ESP<imp-use>, %ESP<imp-def>, %EAX<imp-def>
80B		ADJCALLSTACKUP32 4, 0, %ESP<imp-def,dead>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
96B		%vreg1<def> = COPY %EAX; GR32:%vreg1
112B		RET

# End machine code for function _GLOBAL__I_a.

0x7e0c0c8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Merge disjoint stack slots' on Function '_GLOBAL__I_a'...
0x7e0b998       Required Analyses: MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
********** Stack Coloring **********
********** Function: _GLOBAL__I_a
0x7e0b998       Preserved Analyses: MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Merge disjoint stack slots' is not preserving 'Slot index numbering'
 -*- 'Merge disjoint stack slots' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Merge disjoint stack slots' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Slot index numbering' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Local Stack Slot Allocation' on Function '_GLOBAL__I_a'...
0x7e0c508       Required Analyses: Uninitialized Pass
0x7e0230c     Made Modification 'Local Stack Slot Allocation' on Function '_GLOBAL__I_a'...
0x7e0c508       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Local Stack Slot Allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Local Stack Slot Allocation' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Remove dead machine instructions' on Function '_GLOBAL__I_a'...
0x7e0c870       Required Analyses: Uninitialized Pass
DeadMachineInstructionElim: DELETING: %vreg1<def> = COPY %EAX; GR32:%vreg1
0x7e0230c     Made Modification 'Remove dead machine instructions' on Function '_GLOBAL__I_a'...
0x7e0c870       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Remove dead machine instructions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove dead machine instructions' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0d500       Required Analyses: Uninitialized Pass
0x7e0d500       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function '_GLOBAL__I_a'...
0x7e0d260       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e0d260       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function '_GLOBAL__I_a'...
0x7e0cb58       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Pre-regalloc Machine LICM: _GLOBAL__I_a ********
0x7e0cb58       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Machine Common Subexpression Elimination' on Function '_GLOBAL__I_a'...
0x7e0da38       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction
Entering: entry
Exiting: entry
0x7e0da38       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, Machine Natural Loop Construction, MachineDominator Tree Construction
 -*- 'Machine Common Subexpression Elimination' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Common Subexpression Elimination' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Machine code sinking' on Function '_GLOBAL__I_a'...
0x7e0df00       Required Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), MachineDominator Tree Construction, Machine Natural Loop Construction
******** Machine Sinking ********
0x7e0df00       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information, MachineDominator Tree Construction, Machine Natural Loop Construction
 -*- 'Machine code sinking' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine code sinking' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Peephole Optimizations' on Function '_GLOBAL__I_a'...
0x7dfbb10       Required Analyses: Uninitialized Pass
********** PEEPHOLE OPTIMIZER **********
********** Function: _GLOBAL__I_a
0x7dfbb10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Peephole Optimizations' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Peephole Optimizations' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Process Implicit Definitions' on Function '_GLOBAL__I_a'...
0x7e12fc0       Required Analyses: Uninitialized Pass
********** PROCESS IMPLICIT DEFS **********
********** Function: _GLOBAL__I_a
0x7e12fc0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Process Implicit Definitions' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Process Implicit Definitions' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Remove unreachable machine basic blocks' on Function '_GLOBAL__I_a'...
0x7e13678       Required Analyses: Uninitialized Pass
0x7e13678       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Variable Analysis' on Function '_GLOBAL__I_a'...
0x7e13340       Required Analyses: Remove unreachable machine basic blocks, Uninitialized Pass
0x7e13340       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Variable Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Remove unreachable machine basic blocks' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Eliminate PHI nodes for register allocation' on Function '_GLOBAL__I_a'...
0x7e139e8       Required Analyses: Uninitialized Pass
0x7e139e8       Preserved Analyses: Live Variable Analysis, Slot index numbering, Live Interval Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Eliminate PHI nodes for register allocation' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Eliminate PHI nodes for register allocation' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Two-Address instruction pass' on Function '_GLOBAL__I_a'...
0x7e13d10       Required Analyses: No Alias Analysis (always returns 'may' alias), Uninitialized Pass
********** REWRITING TWO-ADDR INSTRS **********
********** Function: _GLOBAL__I_a
0x7e13d10       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Variable Analysis, Slot index numbering, Live Interval Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Two-Address instruction pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Two-Address instruction pass' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Slot index numbering' on Function '_GLOBAL__I_a'...
0x7e14a38       Required Analyses: Uninitialized Pass
# Machine code for function _GLOBAL__I_a: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		ADJCALLSTACKDOWN32 4, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
32B		%vreg0<def> = COPY %ESP; GR32:%vreg0
48B		MOV32mi %vreg0<kill>, 1, %noreg, 0, %noreg, <ga:@__dtor__ZN5mollyL12molly_globalE>; mem:ST4[Stack] GR32:%vreg0
64B		CALLpcrel32 <ga:@atexit>, <regmask>, %ESP<imp-use>, %ESP<imp-def>, ...
80B		ADJCALLSTACKUP32 4, 0, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
96B		RET

# End machine code for function _GLOBAL__I_a.

0x7e14a38       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Interval Analysis' on Function '_GLOBAL__I_a'...
0x7e146f0       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Variable Analysis, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass
Computing live-in reg-units in ABI blocks.
Created 0 new intervals.
********** INTERVALS **********
%vreg0 = [32r,48r:0)  0@32r
RegMasks: 64r
********** MACHINEINSTRS **********
# Machine code for function _GLOBAL__I_a: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		ADJCALLSTACKDOWN32 4, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
32B		%vreg0<def> = COPY %ESP; GR32:%vreg0
48B		MOV32mi %vreg0, 1, %noreg, 0, %noreg, <ga:@__dtor__ZN5mollyL12molly_globalE>; mem:ST4[Stack] GR32:%vreg0
64B		CALLpcrel32 <ga:@atexit>, <regmask>, %ESP<imp-use>, %ESP<imp-def>, ...
80B		ADJCALLSTACKUP32 4, 0, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
96B		RET

# End machine code for function _GLOBAL__I_a.

0x7e0230c     Made Modification 'Live Interval Analysis' on Function '_GLOBAL__I_a'...
0x7e146f0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Variable Analysis, Machine Natural Loop Construction, MachineDominator Tree Construction, Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Live Interval Analysis' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Live Variable Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Simple Register Coalescing' on Function '_GLOBAL__I_a'...
0x7e14070       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** SIMPLE REGISTER COALESCING **********
********** Function: _GLOBAL__I_a
********** JOINING INTERVALS ***********
entry:
32B	%vreg0<def> = COPY %ESP; GR32:%vreg0
	Considering merging %vreg0 with %ESP
		RHS = %vreg0 [32r,48r:0)  0@32r
		updated: 48B	MOV32mi %ESP, 1, %noreg, 0, %noreg, <ga:@__dtor__ZN5mollyL12molly_globalE>; mem:ST4[Stack]
	Joined. Result = %ESP
Trying to inflate 0 regs.
********** INTERVALS **********
SPL = [16r,16d:2)[64r,64d:1)[80r,80d:0)  0@80r 1@64r 2@16r
RegMasks: 64r
********** MACHINEINSTRS **********
# Machine code for function _GLOBAL__I_a: Post SSA

0B	BB#0: derived from LLVM BB %entry
16B		ADJCALLSTACKDOWN32 4, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
48B		MOV32mi %ESP, 1, %noreg, 0, %noreg, <ga:@__dtor__ZN5mollyL12molly_globalE>; mem:ST4[Stack]
64B		CALLpcrel32 <ga:@atexit>, <regmask>, %ESP<imp-use>, %ESP<imp-def>, ...
80B		ADJCALLSTACKUP32 4, 0, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
96B		RET

# End machine code for function _GLOBAL__I_a.

0x7e0230c     Made Modification 'Simple Register Coalescing' on Function '_GLOBAL__I_a'...
0x7e14070       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Live Interval Analysis, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Simple Register Coalescing' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Simple Register Coalescing' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Debug Variable Analysis' on Function '_GLOBAL__I_a'...
0x7e151a0       Required Analyses: MachineDominator Tree Construction, Live Interval Analysis, Uninitialized Pass
********** COMPUTING LIVE DEBUG VARIABLES: _GLOBAL__I_a **********
********** DEBUG VARIABLES **********
0x7e151a0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Stack Slot Analysis' on Function '_GLOBAL__I_a'...
0x7e15478       Required Analyses: Slot index numbering, Uninitialized Pass
0x7e15478       Preserved Analyses: Slot index numbering, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Calculate spill weights' on Function '_GLOBAL__I_a'...
0x7e15918       Required Analyses: Live Interval Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Compute Spill Weights **********
********** Function: _GLOBAL__I_a
0x7e15918       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Virtual Register Map' on Function '_GLOBAL__I_a'...
0x7e15be8       Required Analyses: Uninitialized Pass
0x7e15be8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Live Register Matrix' on Function '_GLOBAL__I_a'...
0x7e15fe8       Required Analyses: Live Interval Analysis, Virtual Register Map, Uninitialized Pass
0x7e15fe8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function '_GLOBAL__I_a'...
0x7e16318       Required Analyses: Uninitialized Pass
0x7e16318       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Spill Code Placement Analysis' on Function '_GLOBAL__I_a'...
0x7e166d8       Required Analyses: Bundle Machine CFG Edges, Machine Natural Loop Construction, Uninitialized Pass
0x7e166d8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Greedy Register Allocator' on Function '_GLOBAL__I_a'...
0x7e0e9b8       Required Analyses: No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Calculate spill weights, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Bundle Machine CFG Edges, Spill Code Placement Analysis, Uninitialized Pass
********** GREEDY REGISTER ALLOCATION **********
********** Function: _GLOBAL__I_a
0x7e0230c     Made Modification 'Greedy Register Allocator' on Function '_GLOBAL__I_a'...
0x7e0e9b8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, No Alias Analysis (always returns 'may' alias), Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, MachineDominator Tree Construction, Machine Natural Loop Construction, Virtual Register Map, Live Register Matrix, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Greedy Register Allocator' is not preserving 'Calculate spill weights'
 -*- 'Greedy Register Allocator' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Calculate spill weights' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Live Register Matrix' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Spill Code Placement Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Greedy Register Allocator' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Virtual Register Rewriter' on Function '_GLOBAL__I_a'...
0x7e16ac8       Required Analyses: Live Interval Analysis, Slot index numbering, Debug Variable Analysis, Live Stack Slot Analysis, Virtual Register Map, Uninitialized Pass
********** REWRITE VIRTUAL REGISTERS **********
********** Function: _GLOBAL__I_a
********** REGISTER MAP **********

0B	BB#0: derived from LLVM BB %entry
16B		ADJCALLSTACKDOWN32 4, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
48B		MOV32mi %ESP, 1, %noreg, 0, %noreg, <ga:@__dtor__ZN5mollyL12molly_globalE>; mem:ST4[Stack]
64B		CALLpcrel32 <ga:@atexit>, <regmask>, %ESP<imp-use>, %ESP<imp-def>, ...
80B		ADJCALLSTACKUP32 4, 0, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
96B		RET
> ADJCALLSTACKDOWN32 4, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
> MOV32mi %ESP, 1, %noreg, 0, %noreg, <ga:@__dtor__ZN5mollyL12molly_globalE>; mem:ST4[Stack]
> CALLpcrel32 <ga:@atexit>, <regmask>, %ESP<imp-use>, %ESP<imp-def>, ...
> ADJCALLSTACKUP32 4, 0, %ESP<imp-def>, %EFLAGS<imp-def,dead>, %ESP<imp-use>
> RET
********** EMITTING LIVE DEBUG VARIABLES **********
0x7e0230c     Made Modification 'Virtual Register Rewriter' on Function '_GLOBAL__I_a'...
0x7e16ac8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Live Stack Slot Analysis, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Virtual Register Rewriter' is not preserving 'Greedy Register Allocator'
 -- 'Virtual Register Rewriter' is not preserving 'Virtual Register Map'
 -- 'Virtual Register Rewriter' is not preserving 'Live Interval Analysis'
 -- 'Virtual Register Rewriter' is not preserving 'Debug Variable Analysis'
 -*- 'Virtual Register Rewriter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Virtual Register Map' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Virtual Register Rewriter' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Debug Variable Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Live Interval Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Stack Slot Coloring' on Function '_GLOBAL__I_a'...
0x7e16db8       Required Analyses: Slot index numbering, Live Stack Slot Analysis, Machine Natural Loop Construction, Uninitialized Pass
********** Stack Slot Coloring **********
********** Function: _GLOBAL__I_a
0x7e16db8       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Slot index numbering, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Stack Slot Coloring' is not preserving 'Live Stack Slot Analysis'
 -*- 'Stack Slot Coloring' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Slot index numbering' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Live Stack Slot Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Stack Slot Coloring' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Machine Loop Invariant Code Motion' on Function '_GLOBAL__I_a'...
0x7e17640       Required Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, No Alias Analysis (always returns 'may' alias), Uninitialized Pass
******** Post-regalloc Machine LICM: _GLOBAL__I_a ********
0x7e17640       Preserved Analyses: Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Loop Invariant Code Motion' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Machine Loop Invariant Code Motion' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Bundle Machine CFG Edges' on Function '_GLOBAL__I_a'...
0x7e18120       Required Analyses: Uninitialized Pass
0x7e18120       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'X86 FP Stackifier' on Function '_GLOBAL__I_a'...
0x7e17de0       Required Analyses: Bundle Machine CFG Edges, Uninitialized Pass

Setting up live-ins for BB#0 derived from entry.
Block has no FP live-ins.

FPInst:	RET
Stack contents:
Inserted instructions:
	RET
Stack contents:
0x7e0230c     Made Modification 'X86 FP Stackifier' on Function '_GLOBAL__I_a'...
0x7e17de0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 FP Stackifier' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Bundle Machine CFG Edges' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'X86 FP Stackifier' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_GLOBAL__I_a'...
0x7e18578       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e0230c     Made Modification 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_GLOBAL__I_a'...
0x7e18578       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Prologue/Epilogue Insertion & Frame Finalization' is not preserving 'X86 FP Stackifier'
 -*- 'Prologue/Epilogue Insertion & Frame Finalization' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Prologue/Epilogue Insertion & Frame Finalization' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Control Flow Optimizer' on Function '_GLOBAL__I_a'...
0x7e18910       Required Analyses: Target Pass Configuration, Uninitialized Pass
0x7e18910       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Control Flow Optimizer' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Control Flow Optimizer' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Tail Duplication' on Function '_GLOBAL__I_a'...
0x7e18be0       Required Analyses: Uninitialized Pass
0x7e18be0       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Tail Duplication' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Tail Duplication' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Machine Copy Propagation Pass' on Function '_GLOBAL__I_a'...
0x7e18f28       Required Analyses: Uninitialized Pass
0x7e18f28       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Machine Copy Propagation Pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Copy Propagation Pass' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Post-RA pseudo instruction expansion pass' on Function '_GLOBAL__I_a'...
0x7e19208       Required Analyses: Uninitialized Pass
Machine Function
********** EXPANDING POST-RA PSEUDO INSTRS **********
********** Function: _GLOBAL__I_a
0x7e19208       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, Machine Natural Loop Construction, MachineDominator Tree Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post-RA pseudo instruction expansion pass' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post-RA pseudo instruction expansion pass' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'MachineDominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e19750       Required Analyses: Uninitialized Pass
0x7e19750       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Machine Natural Loop Construction' on Function '_GLOBAL__I_a'...
0x7e19b58       Required Analyses: MachineDominator Tree Construction, Uninitialized Pass
0x7e19b58       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Post RA top-down list latency scheduler' on Function '_GLOBAL__I_a'...
0x7e194e0       Required Analyses: No Alias Analysis (always returns 'may' alias), Target Pass Configuration, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass
0x7e194e0       Preserved Analyses: MachineDominator Tree Construction, MachinePostDominator Tree Construction, Machine Natural Loop Construction, Spill Code Placement Analysis, Inline Cost Analysis, Dominator Tree Construction, Canonicalize natural loops, Machine Block Frequency Analysis, Target independent code generator's TTI, Post-Dominator Tree Construction, No Alias Analysis (always returns 'may' alias), Dominance Frontier Construction, Natural Loop Information, Bundle Machine CFG Edges, X86 Target Transform Info, No target information, Detect single entry single exit regions, MachineDominator Tree Construction, Machine Natural Loop Construction, Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Post RA top-down list latency scheduler' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Post RA top-down list latency scheduler' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'MachineDominator Tree Construction' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Analyze Machine Code For Garbage Collection' on Function '_GLOBAL__I_a'...
0x7e0de80       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e0de80       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Analyze Machine Code For Garbage Collection' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Analyze Machine Code For Garbage Collection' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Machine Block Frequency Analysis' on Function '_GLOBAL__I_a'...
0x7e1a7b8       Required Analyses: Machine Branch Probability Analysis, Uninitialized Pass
RPO[BB#0 derived from LLVM BB entry] = 1
POT: BB#0 derived from LLVM BB entry
doLoop(BB#0 derived from LLVM BB entry, BB#0 derived from LLVM BB entry)
doBlock(BB#0 derived from LLVM BB entry)
Frequency(BB#0 derived from LLVM BB entry) = 0
Frequency(BB#0 derived from LLVM BB entry) = 1024
0x7e1a7b8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
0x7e0230c     Executing Pass 'Branch Probability Basic Block Placement' on Function '_GLOBAL__I_a'...
0x7e1a270       Required Analyses: Machine Branch Probability Analysis, Machine Block Frequency Analysis, Machine Natural Loop Construction, Uninitialized Pass
0x7e1a270       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Natural Loop Construction'
 -- 'Branch Probability Basic Block Placement' is not preserving 'Machine Block Frequency Analysis'
 -*- 'Branch Probability Basic Block Placement' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Branch Probability Basic Block Placement' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Machine Block Frequency Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'Machine Natural Loop Construction' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'Execution dependency fix' on Function '_GLOBAL__I_a'...
0x7e1abf8       Required Analyses: Uninitialized Pass
********** FIX EXECUTION DEPENDENCIES: VR128 **********
BB#0: entry
0x7e1abf8       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'Execution dependency fix' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Execution dependency fix' on Function '_GLOBAL__I_a'...
0x7e0230c     Executing Pass 'X86 Assembly / Object Emitter' on Function '_GLOBAL__I_a'...
0x7e1b218       Required Analyses: Uninitialized Pass, Machine Module Information, Create Garbage Collector Module Metadata
0x7e1b218       Preserved Analyses: Uninitialized Pass, No Alias Analysis (always returns 'may' alias), Scalar Evolution Analysis, Induction Variable Users, Memory Dependence Analysis, Dominator Tree Construction, Dominance Frontier Construction, Natural Loop Information
 -*- 'X86 Assembly / Object Emitter' is the last user of following pass instances. Free these instances
0x7e0230c      Freeing Pass 'Machine Function Analysis' on Function '_GLOBAL__I_a'...
0x7e0230c      Freeing Pass 'X86 Assembly / Object Emitter' on Function '_GLOBAL__I_a'...
0x7dec264   Made Modification 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 -*- 'Function Pass Manager' is the last user of following pass instances. Free these instances
0x7dec264    Freeing Pass 'Machine Branch Probability Analysis' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dec264    Freeing Pass 'Create Garbage Collector Module Metadata' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dec264    Freeing Pass 'Target Pass Configuration' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dec264    Freeing Pass 'Function Pass Manager' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dec264    Freeing Pass 'Target Library Information' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dec264    Freeing Pass 'Machine Module Information' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
0x7dec264    Freeing Pass 'Basic Alias Analysis (stateless AA impl)' on Module 'C:\Users\Meinersbur\src\molly\molly\tests\stencil/stencil.cpp'...
 "gcc" -O3 -v -fno-exceptions -fno-cxx-exceptions -fno-use-cxa-atexit -std=c++11 -L/c/Users/Meinersbur/src/molly/build32_mingw/lib -c -m32 -o C:/Users/MEINER~1/AppData/Local/Temp/stencil-401970.o -x assembler C:/Users/MEINER~1/AppData/Local/Temp/stencil-401969.s
mollycc: error: unable to execute command: program not executable
mollycc: error: assembler (via gcc) command failed due to signal (use -v to see invocation)
clang version 3.3 
Target: i686-pc-mingw32
Thread model: posix
mollycc: note: diagnostic msg: PLEASE submit a bug report to http://llvm.org/bugs/ and include the crash backtrace, preprocessed source, and associated run script.
mollycc: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
mollycc: note: diagnostic msg: C:/Users/MEINER~1/AppData/Local/Temp/stencil-401971.cpp
A s s e r t i o n   f a i l e d :   I   ! =   s t d : : s t r i n g : : n p o s   & &   " E x p e c t e d   t o   f i n d   - m a i n - f i l e - n a m e " ,   f i l e   C : \ U s e r s \ M e i n e r s b u r \ s r c \ m o l l y \ c l a n g \ l i b \ D r i v e r \ D r i v e r . c p p ,   l i n e   4 7 4 
 